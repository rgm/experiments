["^ ","~:output",["^ ","~:js","goog.provide('reagent.ratom');\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom.debug !== 'undefined')){\n} else {\nreagent.ratom.debug = false;\n}\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom.generation !== 'undefined')){\n} else {\nreagent.ratom.generation = (0);\n}\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom._running !== 'undefined')){\n} else {\nreagent.ratom._running = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\n}\nreagent.ratom.reactive_QMARK_ = (function reagent$ratom$reactive_QMARK_(){\nreturn (!((reagent.ratom._STAR_ratom_context_STAR_ == null)));\n});\nreagent.ratom.running = (function reagent$ratom$running(){\nreturn (cljs.core.deref(reagent.ratom._running));\n});\nreagent.ratom.arr_len = (function reagent$ratom$arr_len(x){\nif((x == null)){\nreturn (0);\n} else {\nreturn x.length;\n}\n});\nreagent.ratom.arr_eq = (function reagent$ratom$arr_eq(x,y){\nvar len = reagent.ratom.arr_len(x);\nif((len === reagent.ratom.arr_len(y))){\nvar i = (0);\nwhile(true){\nvar or__4126__auto__ = (i === len);\nif(or__4126__auto__){\nreturn or__4126__auto__;\n} else {\nif(((x[i]) === (y[i]))){\nvar G__35460 = (i + (1));\ni = G__35460;\ncontinue;\n} else {\nreturn false;\n}\n}\nbreak;\n}\n} else {\nreturn false;\n}\n});\n/**\n * When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n * \n *   See function notify-deref-watcher! to know how *ratom-context* is updated\n */\nreagent.ratom.in_context = (function reagent$ratom$in_context(obj,f){\nvar _STAR_ratom_context_STAR__orig_val__35201 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__35202 = obj;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__35202);\n\ntry{return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__35201);\n}});\n/**\n * Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n *   `deref`ed atoms captured during `in-context`, if any differ from the\n *   `watching` field of r.  Clears the `dirty?` flag on r.\n * \n *   Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n *   the reaction is also added to the list of watches on each ratoms f derefs.\n */\nreagent.ratom.deref_capture = (function reagent$ratom$deref_capture(f,r){\n(r.captured = null);\n\n(r.ratomGeneration = (reagent.ratom.generation = (reagent.ratom.generation + (1))));\n\n\nvar res = reagent.ratom.in_context(r,f);\nvar c = r.captured;\n(r.dirty_QMARK_ = false);\n\nif(reagent.ratom.arr_eq(c,r.watching)){\n} else {\nr._update_watching(c);\n}\n\nreturn res;\n});\n/**\n * Add `derefed` to the `captured` field of `*ratom-context*`.\n * \n *   See also `in-context`\n */\nreagent.ratom.notify_deref_watcher_BANG_ = (function reagent$ratom$notify_deref_watcher_BANG_(derefed){\nvar temp__5739__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar r = temp__5739__auto__;\nvar c = r.captured;\nif((c == null)){\nreturn (r.captured = [derefed]);\n} else {\nreturn c.push(derefed);\n}\n}\n});\nreagent.ratom.check_watches = (function reagent$ratom$check_watches(old,new$){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(reagent.ratom._running,cljs.core._PLUS_,(cljs.core.count(new$) - cljs.core.count(old)));\n} else {\n}\n\nreturn new$;\n});\nreagent.ratom.add_w = (function reagent$ratom$add_w(this$,key,f){\nvar w = this$.watches;\n(this$.watches = reagent.ratom.check_watches(w,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(w,key,f)));\n\nreturn (this$.watchesArr = null);\n});\nreagent.ratom.remove_w = (function reagent$ratom$remove_w(this$,key){\nvar w = this$.watches;\n(this$.watches = reagent.ratom.check_watches(w,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(w,key)));\n\nreturn (this$.watchesArr = null);\n});\nreagent.ratom.notify_w = (function reagent$ratom$notify_w(this$,old,new$){\nvar w = this$.watchesArr;\nvar a = (((w == null))?(this$.watchesArr = cljs.core.reduce_kv((function (p1__35212_SHARP_,p2__35213_SHARP_,p3__35214_SHARP_){\nvar G__35216 = p1__35212_SHARP_;\nG__35216.push(p2__35213_SHARP_);\n\nG__35216.push(p3__35214_SHARP_);\n\nreturn G__35216;\n}),[],this$.watches)):w);\nvar len = a.length;\nvar i = (0);\nwhile(true){\nif((i < len)){\nvar k_35475 = (a[i]);\nvar f_35476 = (a[(i + (1))]);\n(f_35476.cljs$core$IFn$_invoke$arity$4 ? f_35476.cljs$core$IFn$_invoke$arity$4(k_35475,this$,old,new$) : f_35476.call(null,k_35475,this$,old,new$));\n\nvar G__35477 = ((2) + i);\ni = G__35477;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n});\nreagent.ratom.pr_atom = (function reagent$ratom$pr_atom(a,writer,opts,s,v){\ncljs.core._write(writer,[\"#object[reagent.ratom.\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),\" \"].join(''));\n\ncljs.core.pr_writer((function (){var _STAR_ratom_context_STAR__orig_val__35219 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__35220 = null;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__35220);\n\ntry{return v;\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__35219);\n}})(),writer,opts);\n\nreturn cljs.core._write(writer,\"]\");\n});\nif((typeof reagent !== 'undefined') && (typeof reagent.ratom !== 'undefined') && (typeof reagent.ratom.rea_queue !== 'undefined')){\n} else {\nreagent.ratom.rea_queue = null;\n}\nreagent.ratom.rea_enqueue = (function reagent$ratom$rea_enqueue(r){\nif((reagent.ratom.rea_queue == null)){\n(reagent.ratom.rea_queue = []);\n\nreagent.impl.batching.schedule();\n} else {\n}\n\nreturn reagent.ratom.rea_queue.push(r);\n});\n\n/**\n * @interface\n */\nreagent.ratom.IReactiveAtom = function(){};\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IWithMeta}\n*/\nreagent.ratom.RAtom = (function (state,meta,validator,watches){\nthis.state = state;\nthis.meta = meta;\nthis.validator = validator;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition0$ = 2154201088;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\n(reagent.ratom.RAtom.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.RAtom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"RAtom\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"val\",\"val\",128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null)], null));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn self__.meta;\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn goog.getUid(this$__$1);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\nvar self__ = this;\nvar o__$1 = this;\nreturn (o__$1 === other);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,new_value){\nvar self__ = this;\nvar a__$1 = this;\nif((self__.validator == null)){\n} else {\nif(cljs.core.truth_((self__.validator.cljs$core$IFn$_invoke$arity$1 ? self__.validator.cljs$core$IFn$_invoke$arity$1(new_value) : self__.validator.call(null,new_value)))){\n} else {\nthrow (new Error([\"Assert failed: \",\"Validator rejected reference state\",\"\\n\",\"(validator new-value)\"].join('')));\n}\n}\n\nvar old_value = self__.state;\n(self__.state = new_value);\n\nif((self__.watches == null)){\n} else {\nreagent.ratom.notify_w(a__$1,old_value,new_value);\n}\n\nreturn new_value;\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){\nvar self__ = this;\nvar ___$1 = this;\nreturn (new reagent.ratom.RAtom(self__.state,new_meta,self__.validator,self__.watches));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nreturn self__.state;\n}));\n\n(reagent.ratom.RAtom.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"meta\",\"meta\",-1154898805,null),new cljs.core.Symbol(null,\"validator\",\"validator\",-325659154,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.RAtom.cljs$lang$type = true);\n\n(reagent.ratom.RAtom.cljs$lang$ctorStr = \"reagent.ratom/RAtom\");\n\n(reagent.ratom.RAtom.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"reagent.ratom/RAtom\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/RAtom.\n */\nreagent.ratom.__GT_RAtom = (function reagent$ratom$__GT_RAtom(state,meta,validator,watches){\nreturn (new reagent.ratom.RAtom(state,meta,validator,watches));\n});\n\n/**\n * Like clojure.core/atom, except that it keeps track of derefs.\n */\nreagent.ratom.atom = (function reagent$ratom$atom(var_args){\nvar G__35253 = arguments.length;\nswitch (G__35253) {\ncase 1:\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nvar args_arr__4757__auto__ = [];\nvar len__4736__auto___35519 = arguments.length;\nvar i__4737__auto___35520 = (0);\nwhile(true){\nif((i__4737__auto___35520 < len__4736__auto___35519)){\nargs_arr__4757__auto__.push((arguments[i__4737__auto___35520]));\n\nvar G__35521 = (i__4737__auto___35520 + (1));\ni__4737__auto___35520 = G__35521;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4758__auto__ = (new cljs.core.IndexedSeq(args_arr__4757__auto__.slice((1)),(0),null));\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4758__auto__);\n\n}\n});\n\n(reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1 = (function (x){\nreturn reagent.ratom.__GT_RAtom(x,null,null,null);\n}));\n\n(reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic = (function (x,p__35255){\nvar map__35257 = p__35255;\nvar map__35257__$1 = (((((!((map__35257 == null))))?(((((map__35257.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__35257.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__35257):map__35257);\nvar meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35257__$1,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964));\nvar validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35257__$1,new cljs.core.Keyword(null,\"validator\",\"validator\",-1966190681));\nreturn reagent.ratom.__GT_RAtom(x,meta,validator,null);\n}));\n\n/** @this {Function} */\n(reagent.ratom.atom.cljs$lang$applyTo = (function (seq35250){\nvar G__35251 = cljs.core.first(seq35250);\nvar seq35250__$1 = cljs.core.next(seq35250);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__35251,seq35250__$1);\n}));\n\n(reagent.ratom.atom.cljs$lang$maxFixedArity = (1));\n\nreagent.ratom.cached_reaction = (function reagent$ratom$cached_reaction(f,o,k,obj,destroy){\nvar m = o.reagReactionCache;\nvar m__$1 = (((m == null))?cljs.core.PersistentArrayMap.EMPTY:m);\nvar r = (m__$1.cljs$core$IFn$_invoke$arity$2 ? m__$1.cljs$core$IFn$_invoke$arity$2(k,null) : m__$1.call(null,k,null));\nif((!((r == null)))){\nreturn cljs.core._deref(r);\n} else {\nif((reagent.ratom._STAR_ratom_context_STAR_ == null)){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n} else {\nvar r__$1 = (function (){var G__35261 = f;\nvar G__35262 = new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360);\nvar G__35263 = (function (x){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.dec);\n} else {\n}\n\nvar __35545 = o.reagReactionCache;\nvar __35546__$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(__35545,k);\n(o.reagReactionCache = __35546__$1);\n\nif((!((obj == null)))){\n(obj.reaction = null);\n} else {\n}\n\nif((!((destroy == null)))){\nreturn (destroy.cljs$core$IFn$_invoke$arity$1 ? destroy.cljs$core$IFn$_invoke$arity$1(x) : destroy.call(null,x));\n} else {\nreturn null;\n}\n});\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__35261,G__35262,G__35263) : reagent.ratom.make_reaction.call(null,G__35261,G__35262,G__35263));\n})();\nvar v = cljs.core._deref(r__$1);\n(o.reagReactionCache = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m__$1,k,r__$1));\n\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.inc);\n} else {\n}\n\nif((!((obj == null)))){\n(obj.reaction = r__$1);\n} else {\n}\n\nreturn v;\n\n}\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Track = (function (f,args,reaction){\nthis.f = f;\nthis.args = args;\nthis.reaction = reaction;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\n(reagent.ratom.Track.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Track.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5737__auto__ = self__.reaction;\nif((temp__5737__auto__ == null)){\nreturn reagent.ratom.cached_reaction((function (){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.f,self__.args);\n}),self__.f,self__.args,this$__$1,null);\n} else {\nvar r = temp__5737__auto__;\nreturn cljs.core._deref(r);\n}\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.Track)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.f,other.f)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.args,other.args)));\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.f,self__.args], null));\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Track\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"val\",\"val\",128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null),new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),self__.f], null));\n}));\n\n(reagent.ratom.Track.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),new cljs.core.Symbol(null,\"args\",\"args\",-1338879193,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.Track.cljs$lang$type = true);\n\n(reagent.ratom.Track.cljs$lang$ctorStr = \"reagent.ratom/Track\");\n\n(reagent.ratom.Track.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"reagent.ratom/Track\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/Track.\n */\nreagent.ratom.__GT_Track = (function reagent$ratom$__GT_Track(f,args,reaction){\nreturn (new reagent.ratom.Track(f,args,reaction));\n});\n\nreagent.ratom.make_track = (function reagent$ratom$make_track(f,args){\nreturn (new reagent.ratom.Track(f,args,null));\n});\nreagent.ratom.make_track_BANG_ = (function reagent$ratom$make_track_BANG_(f,args){\nvar t = reagent.ratom.make_track(f,args);\nvar r = (function (){var G__35280 = (function (){\nreturn t.cljs$core$IDeref$_deref$arity$1(null);\n});\nvar G__35281 = new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437);\nvar G__35282 = true;\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__35280,G__35281,G__35282) : reagent.ratom.make_reaction.call(null,G__35280,G__35281,G__35282));\n})();\ncljs.core.deref(r);\n\nreturn r;\n});\nreagent.ratom.track = (function reagent$ratom$track(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___35590 = arguments.length;\nvar i__4737__auto___35591 = (0);\nwhile(true){\nif((i__4737__auto___35591 < len__4736__auto___35590)){\nargs__4742__auto__.push((arguments[i__4737__auto___35591]));\n\nvar G__35592 = (i__4737__auto___35591 + (1));\ni__4737__auto___35591 = G__35592;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error(\"Assert failed: (ifn? f)\"));\n}\n\nreturn reagent.ratom.make_track(f,args);\n}));\n\n(reagent.ratom.track.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(reagent.ratom.track.cljs$lang$applyTo = (function (seq35283){\nvar G__35284 = cljs.core.first(seq35283);\nvar seq35283__$1 = cljs.core.next(seq35283);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__35284,seq35283__$1);\n}));\n\nreagent.ratom.track_BANG_ = (function reagent$ratom$track_BANG_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___35608 = arguments.length;\nvar i__4737__auto___35609 = (0);\nwhile(true){\nif((i__4737__auto___35609 < len__4736__auto___35608)){\nargs__4742__auto__.push((arguments[i__4737__auto___35609]));\n\nvar G__35615 = (i__4737__auto___35609 + (1));\ni__4737__auto___35609 = G__35615;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error(\"Assert failed: (ifn? f)\"));\n}\n\nreturn reagent.ratom.make_track_BANG_(f,args);\n}));\n\n(reagent.ratom.track_BANG_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(reagent.ratom.track_BANG_.cljs$lang$applyTo = (function (seq35291){\nvar G__35292 = cljs.core.first(seq35291);\nvar seq35291__$1 = cljs.core.next(seq35291);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__35292,seq35291__$1);\n}));\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.RCursor = (function (ratom,path,reaction,state,watches){\nthis.ratom = ratom;\nthis.path = path;\nthis.reaction = reaction;\nthis.state = state;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\n(reagent.ratom.RCursor.prototype._peek = (function (){\nvar self__ = this;\nvar this$ = this;\nvar _STAR_ratom_context_STAR__orig_val__35300 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__35301 = null;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__35301);\n\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__35300);\n}}));\n\n(reagent.ratom.RCursor.prototype._set_state = (function (oldstate,newstate){\nvar self__ = this;\nvar this$ = this;\nif((oldstate === newstate)){\nreturn null;\n} else {\n(self__.state = newstate);\n\nif((!((self__.watches == null)))){\nreturn reagent.ratom.notify_w(this$,oldstate,newstate);\n} else {\nreturn null;\n}\n}\n}));\n\n(reagent.ratom.RCursor.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.RCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"RCursor\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"val\",\"val\",128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null),new cljs.core.Keyword(null,\"path\",\"path\",-188191168),self__.path], null));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.ratom,self__.path], null));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.RCursor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,other.path)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.ratom,other.ratom)));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,new_value){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldstate = self__.state;\nthis$__$1._set_state(oldstate,new_value);\n\nif((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,cljs.core.PersistentVector.EMPTY)){\ncljs.core.reset_BANG_(self__.ratom,new_value);\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.ratom,cljs.core.assoc_in,self__.path,new_value);\n}\n} else {\n(self__.ratom.cljs$core$IFn$_invoke$arity$2 ? self__.ratom.cljs$core$IFn$_invoke$arity$2(self__.path,new_value) : self__.ratom.call(null,self__.path,new_value));\n}\n\nreturn new_value;\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__35303 = a__$1._peek();\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35303) : f.call(null,G__35303));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__35306 = a__$1._peek();\nvar G__35307 = x;\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35306,G__35307) : f.call(null,G__35306,G__35307));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__35315 = a__$1._peek();\nvar G__35316 = x;\nvar G__35317 = y;\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35315,G__35316,G__35317) : f.call(null,G__35315,G__35316,G__35317));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a__$1._peek(),x,y,more));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldstate = self__.state;\nvar newstate = (function (){var temp__5737__auto__ = self__.reaction;\nif((temp__5737__auto__ == null)){\nvar f = (((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom)))?(function (){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.ratom),self__.path);\n}):(function (){\nreturn (self__.ratom.cljs$core$IFn$_invoke$arity$1 ? self__.ratom.cljs$core$IFn$_invoke$arity$1(self__.path) : self__.ratom.call(null,self__.path));\n}));\nreturn reagent.ratom.cached_reaction(f,self__.ratom,self__.path,this$__$1,null);\n} else {\nvar r = temp__5737__auto__;\nreturn cljs.core._deref(r);\n}\n})();\nthis$__$1._set_state(oldstate,newstate);\n\nreturn newstate;\n}));\n\n(reagent.ratom.RCursor.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"ratom\",\"ratom\",1514010260,null),new cljs.core.Symbol(null,\"path\",\"path\",1452340359,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.RCursor.cljs$lang$type = true);\n\n(reagent.ratom.RCursor.cljs$lang$ctorStr = \"reagent.ratom/RCursor\");\n\n(reagent.ratom.RCursor.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"reagent.ratom/RCursor\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/RCursor.\n */\nreagent.ratom.__GT_RCursor = (function reagent$ratom$__GT_RCursor(ratom,path,reaction,state,watches){\nreturn (new reagent.ratom.RCursor(ratom,path,reaction,state,watches));\n});\n\nreagent.ratom.cursor = (function reagent$ratom$cursor(src,path){\nif((function (){var or__4126__auto__ = (((!((src == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === src.reagent$ratom$IReactiveAtom$))))?true:(((!src.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(reagent.ratom.IReactiveAtom,src):false)):cljs.core.native_satisfies_QMARK_(reagent.ratom.IReactiveAtom,src));\nif(or__4126__auto__){\nreturn or__4126__auto__;\n} else {\nreturn ((cljs.core.ifn_QMARK_(src)) && ((!(cljs.core.vector_QMARK_(src)))));\n}\n})()){\n} else {\nthrow (new Error([\"Assert failed: \",[\"src must be a reactive atom or a function, not \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([src], 0)),\" while attempting to get path: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([path], 0))].join(''),\"\\n\",\"(or (satisfies? IReactiveAtom src) (and (ifn? src) (not (vector? src))))\"].join('')));\n}\n\nreturn reagent.ratom.__GT_RCursor(src,path,null,null,null);\n});\nreagent.ratom.with_let_destroy = (function reagent$ratom$with_let_destroy(v){\nvar temp__5739__auto__ = v.destroy;\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar f = temp__5739__auto__;\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}\n});\nreagent.ratom.with_let_values = (function reagent$ratom$with_let_values(key){\nvar temp__5737__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5737__auto__ == null)){\nreturn [];\n} else {\nvar c = temp__5737__auto__;\nreturn reagent.ratom.cached_reaction(cljs.core.array,c,key,null,reagent.ratom.with_let_destroy);\n}\n});\n\n/**\n * @interface\n */\nreagent.ratom.IDisposable = function(){};\n\nvar reagent$ratom$IDisposable$dispose_BANG_$dyn_35642 = (function (this$){\nvar x__4428__auto__ = (((this$ == null))?null:this$);\nvar m__4429__auto__ = (reagent.ratom.dispose_BANG_[goog.typeOf(x__4428__auto__)]);\nif((!((m__4429__auto__ == null)))){\nreturn (m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4429__auto__.call(null,this$));\n} else {\nvar m__4426__auto__ = (reagent.ratom.dispose_BANG_[\"_\"]);\nif((!((m__4426__auto__ == null)))){\nreturn (m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4426__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IDisposable.dispose!\",this$);\n}\n}\n});\nreagent.ratom.dispose_BANG_ = (function reagent$ratom$dispose_BANG_(this$){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1 == null)))))){\nreturn this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1(this$);\n} else {\nreturn reagent$ratom$IDisposable$dispose_BANG_$dyn_35642(this$);\n}\n});\n\nvar reagent$ratom$IDisposable$add_on_dispose_BANG_$dyn_35643 = (function (this$,f){\nvar x__4428__auto__ = (((this$ == null))?null:this$);\nvar m__4429__auto__ = (reagent.ratom.add_on_dispose_BANG_[goog.typeOf(x__4428__auto__)]);\nif((!((m__4429__auto__ == null)))){\nreturn (m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4429__auto__.call(null,this$,f));\n} else {\nvar m__4426__auto__ = (reagent.ratom.add_on_dispose_BANG_[\"_\"]);\nif((!((m__4426__auto__ == null)))){\nreturn (m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4426__auto__.call(null,this$,f));\n} else {\nthrow cljs.core.missing_protocol(\"IDisposable.add-on-dispose!\",this$);\n}\n}\n});\nreagent.ratom.add_on_dispose_BANG_ = (function reagent$ratom$add_on_dispose_BANG_(this$,f){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 == null)))))){\nreturn this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2(this$,f);\n} else {\nreturn reagent$ratom$IDisposable$add_on_dispose_BANG_$dyn_35643(this$,f);\n}\n});\n\n\n/**\n * @interface\n */\nreagent.ratom.IRunnable = function(){};\n\nvar reagent$ratom$IRunnable$run$dyn_35645 = (function (this$){\nvar x__4428__auto__ = (((this$ == null))?null:this$);\nvar m__4429__auto__ = (reagent.ratom.run[goog.typeOf(x__4428__auto__)]);\nif((!((m__4429__auto__ == null)))){\nreturn (m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4429__auto__.call(null,this$));\n} else {\nvar m__4426__auto__ = (reagent.ratom.run[\"_\"]);\nif((!((m__4426__auto__ == null)))){\nreturn (m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4426__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IRunnable.run\",this$);\n}\n}\n});\nreagent.ratom.run = (function reagent$ratom$run(this$){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IRunnable$run$arity$1 == null)))))){\nreturn this$.reagent$ratom$IRunnable$run$arity$1(this$);\n} else {\nreturn reagent$ratom$IRunnable$run$dyn_35645(this$);\n}\n});\n\nreagent.ratom.handle_reaction_change = (function reagent$ratom$handle_reaction_change(this$,sender,old,new$){\nreturn this$._handle_change(sender,old,new$);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {reagent.ratom.IRunnable}\n * @implements {reagent.ratom.IDisposable}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Reaction = (function (f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nthis.f = f;\nthis.state = state;\nthis.dirty_QMARK_ = dirty_QMARK_;\nthis.nocache_QMARK_ = nocache_QMARK_;\nthis.watching = watching;\nthis.watches = watches;\nthis.auto_run = auto_run;\nthis.caught = caught;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\n(reagent.ratom.Reaction.prototype._peek_at = (function (){\nvar self__ = this;\nvar this$ = this;\nvar _STAR_ratom_context_STAR__orig_val__35361 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__35362 = null;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__35362);\n\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__35361);\n}}));\n\n(reagent.ratom.Reaction.prototype._handle_change = (function (sender,oldval,newval){\nvar self__ = this;\nvar this$ = this;\nif((((oldval === newval)) || (self__.dirty_QMARK_))){\nreturn null;\n} else {\nif((self__.auto_run == null)){\n(self__.dirty_QMARK_ = true);\n\nreturn reagent.ratom.rea_enqueue(this$);\n} else {\nif(self__.auto_run === true){\nreturn this$._run(false);\n} else {\nreturn (self__.auto_run.cljs$core$IFn$_invoke$arity$1 ? self__.auto_run.cljs$core$IFn$_invoke$arity$1(this$) : self__.auto_run.call(null,this$));\n}\n}\n}\n}));\n\n(reagent.ratom.Reaction.prototype._update_watching = (function (derefed){\nvar self__ = this;\nvar this$ = this;\nvar new$ = cljs.core.set(derefed);\nvar old = cljs.core.set(self__.watching);\n(self__.watching = derefed);\n\nvar seq__35364_35646 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(new$,old));\nvar chunk__35365_35647 = null;\nvar count__35366_35648 = (0);\nvar i__35367_35649 = (0);\nwhile(true){\nif((i__35367_35649 < count__35366_35648)){\nvar w_35650 = chunk__35365_35647.cljs$core$IIndexed$_nth$arity$2(null,i__35367_35649);\ncljs.core._add_watch(w_35650,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__35651 = seq__35364_35646;\nvar G__35652 = chunk__35365_35647;\nvar G__35653 = count__35366_35648;\nvar G__35654 = (i__35367_35649 + (1));\nseq__35364_35646 = G__35651;\nchunk__35365_35647 = G__35652;\ncount__35366_35648 = G__35653;\ni__35367_35649 = G__35654;\ncontinue;\n} else {\nvar temp__5735__auto___35655 = cljs.core.seq(seq__35364_35646);\nif(temp__5735__auto___35655){\nvar seq__35364_35656__$1 = temp__5735__auto___35655;\nif(cljs.core.chunked_seq_QMARK_(seq__35364_35656__$1)){\nvar c__4556__auto___35657 = cljs.core.chunk_first(seq__35364_35656__$1);\nvar G__35658 = cljs.core.chunk_rest(seq__35364_35656__$1);\nvar G__35659 = c__4556__auto___35657;\nvar G__35660 = cljs.core.count(c__4556__auto___35657);\nvar G__35661 = (0);\nseq__35364_35646 = G__35658;\nchunk__35365_35647 = G__35659;\ncount__35366_35648 = G__35660;\ni__35367_35649 = G__35661;\ncontinue;\n} else {\nvar w_35662 = cljs.core.first(seq__35364_35656__$1);\ncljs.core._add_watch(w_35662,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__35663 = cljs.core.next(seq__35364_35656__$1);\nvar G__35664 = null;\nvar G__35665 = (0);\nvar G__35666 = (0);\nseq__35364_35646 = G__35663;\nchunk__35365_35647 = G__35664;\ncount__35366_35648 = G__35665;\ni__35367_35649 = G__35666;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__35370 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(old,new$));\nvar chunk__35371 = null;\nvar count__35372 = (0);\nvar i__35373 = (0);\nwhile(true){\nif((i__35373 < count__35372)){\nvar w = chunk__35371.cljs$core$IIndexed$_nth$arity$2(null,i__35373);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__35667 = seq__35370;\nvar G__35668 = chunk__35371;\nvar G__35669 = count__35372;\nvar G__35670 = (i__35373 + (1));\nseq__35370 = G__35667;\nchunk__35371 = G__35668;\ncount__35372 = G__35669;\ni__35373 = G__35670;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__35370);\nif(temp__5735__auto__){\nvar seq__35370__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__35370__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__35370__$1);\nvar G__35671 = cljs.core.chunk_rest(seq__35370__$1);\nvar G__35672 = c__4556__auto__;\nvar G__35673 = cljs.core.count(c__4556__auto__);\nvar G__35674 = (0);\nseq__35370 = G__35671;\nchunk__35371 = G__35672;\ncount__35372 = G__35673;\ni__35373 = G__35674;\ncontinue;\n} else {\nvar w = cljs.core.first(seq__35370__$1);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__35675 = cljs.core.next(seq__35370__$1);\nvar G__35676 = null;\nvar G__35677 = (0);\nvar G__35678 = (0);\nseq__35370 = G__35675;\nchunk__35371 = G__35676;\ncount__35372 = G__35677;\ni__35373 = G__35678;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\n\n(reagent.ratom.Reaction.prototype._queued_run = (function (){\nvar self__ = this;\nvar this$ = this;\nif(((self__.dirty_QMARK_) && ((!((self__.watching == null)))))){\nreturn this$._run(true);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype._try_capture = (function (f__$1){\nvar self__ = this;\nvar this$ = this;\ntry{(self__.caught = null);\n\nreturn reagent.ratom.deref_capture(f__$1,this$);\n}catch (e35386){var e = e35386;\n(self__.state = e);\n\n(self__.caught = e);\n\nreturn (self__.dirty_QMARK_ = false);\n}}));\n\n(reagent.ratom.Reaction.prototype._run = (function (check){\nvar self__ = this;\nvar this$ = this;\nvar oldstate = self__.state;\nvar res = (cljs.core.truth_(check)?this$._try_capture(self__.f):reagent.ratom.deref_capture(self__.f,this$));\nif(self__.nocache_QMARK_){\n} else {\n(self__.state = res);\n\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate,res)))){\n} else {\nreagent.ratom.notify_w(this$,oldstate,res);\n}\n}\n\nreturn res;\n}));\n\n(reagent.ratom.Reaction.prototype._set_opts = (function (p__35387){\nvar self__ = this;\nvar map__35388 = p__35387;\nvar map__35388__$1 = (((((!((map__35388 == null))))?(((((map__35388.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__35388.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__35388):map__35388);\nvar auto_run__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35388__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35388__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35388__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\nvar no_cache = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35388__$1,new cljs.core.Keyword(null,\"no-cache\",\"no-cache\",1588056370));\nvar this$ = this;\nif((!((auto_run__$1 == null)))){\n(this$.auto_run = auto_run__$1);\n} else {\n}\n\nif((!((on_set == null)))){\n(this$.on_set = on_set);\n} else {\n}\n\nif((!((on_dispose == null)))){\n(this$.on_dispose = on_dispose);\n} else {\n}\n\nif((!((no_cache == null)))){\nreturn (this$.nocache_QMARK_ = no_cache);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Reaction\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"val\",\"val\",128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null)], null));\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn goog.getUid(this$__$1);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\nvar self__ = this;\nvar o__$1 = this;\nreturn (o__$1 === other);\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$dispose_BANG_$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar s = self__.state;\nvar wg = self__.watching;\n(self__.watching = null);\n\n(self__.state = null);\n\n(self__.auto_run = null);\n\n(self__.dirty_QMARK_ = true);\n\nvar seq__35392_35679 = cljs.core.seq(cljs.core.set(wg));\nvar chunk__35393_35680 = null;\nvar count__35394_35681 = (0);\nvar i__35395_35682 = (0);\nwhile(true){\nif((i__35395_35682 < count__35394_35681)){\nvar w_35683 = chunk__35393_35680.cljs$core$IIndexed$_nth$arity$2(null,i__35395_35682);\ncljs.core._remove_watch(w_35683,this$__$1);\n\n\nvar G__35684 = seq__35392_35679;\nvar G__35685 = chunk__35393_35680;\nvar G__35686 = count__35394_35681;\nvar G__35687 = (i__35395_35682 + (1));\nseq__35392_35679 = G__35684;\nchunk__35393_35680 = G__35685;\ncount__35394_35681 = G__35686;\ni__35395_35682 = G__35687;\ncontinue;\n} else {\nvar temp__5735__auto___35688 = cljs.core.seq(seq__35392_35679);\nif(temp__5735__auto___35688){\nvar seq__35392_35689__$1 = temp__5735__auto___35688;\nif(cljs.core.chunked_seq_QMARK_(seq__35392_35689__$1)){\nvar c__4556__auto___35690 = cljs.core.chunk_first(seq__35392_35689__$1);\nvar G__35691 = cljs.core.chunk_rest(seq__35392_35689__$1);\nvar G__35692 = c__4556__auto___35690;\nvar G__35693 = cljs.core.count(c__4556__auto___35690);\nvar G__35694 = (0);\nseq__35392_35679 = G__35691;\nchunk__35393_35680 = G__35692;\ncount__35394_35681 = G__35693;\ni__35395_35682 = G__35694;\ncontinue;\n} else {\nvar w_35695 = cljs.core.first(seq__35392_35689__$1);\ncljs.core._remove_watch(w_35695,this$__$1);\n\n\nvar G__35696 = cljs.core.next(seq__35392_35689__$1);\nvar G__35697 = null;\nvar G__35698 = (0);\nvar G__35699 = (0);\nseq__35392_35679 = G__35696;\nchunk__35393_35680 = G__35697;\ncount__35394_35681 = G__35698;\ni__35395_35682 = G__35699;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif((!((this$__$1.on_dispose == null)))){\nthis$__$1.on_dispose(s);\n} else {\n}\n\nvar temp__5739__auto__ = this$__$1.on_dispose_arr;\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar a = temp__5739__auto__;\nvar n__4613__auto__ = a.length;\nvar i = (0);\nwhile(true){\nif((i < n__4613__auto__)){\nvar fexpr__35400_35700 = (a[i]);\n(fexpr__35400_35700.cljs$core$IFn$_invoke$arity$1 ? fexpr__35400_35700.cljs$core$IFn$_invoke$arity$1(this$__$1) : fexpr__35400_35700.call(null,this$__$1));\n\nvar G__35701 = (i + (1));\ni = G__35701;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n}\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 = (function (this$,f__$1){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5737__auto__ = this$__$1.on_dispose_arr;\nif((temp__5737__auto__ == null)){\nreturn (this$__$1.on_dispose_arr = [f__$1]);\n} else {\nvar a = temp__5737__auto__;\nreturn a.push(f__$1);\n}\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,newval){\nvar self__ = this;\nvar a__$1 = this;\nif(cljs.core.fn_QMARK_(a__$1.on_set)){\n} else {\nthrow (new Error([\"Assert failed: \",\"Reaction is read only; on-set is not allowed\",\"\\n\",\"(fn? (.-on-set a))\"].join('')));\n}\n\nvar oldval = self__.state;\n(self__.state = newval);\n\na__$1.on_set(oldval,newval);\n\nreagent.ratom.notify_w(a__$1,oldval,newval);\n\nreturn newval;\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f__$1){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__35401 = a__$1._peek_at();\nreturn (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__35401) : f__$1.call(null,G__35401));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f__$1,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__35402 = a__$1._peek_at();\nvar G__35403 = x;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$2 ? f__$1.cljs$core$IFn$_invoke$arity$2(G__35402,G__35403) : f__$1.call(null,G__35402,G__35403));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f__$1,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__35404 = a__$1._peek_at();\nvar G__35405 = x;\nvar G__35406 = y;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$3 ? f__$1.cljs$core$IFn$_invoke$arity$3(G__35404,G__35405,G__35406) : f__$1.call(null,G__35404,G__35405,G__35406));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f__$1,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f__$1,a__$1._peek_at(),x,y,more));\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$run$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\n(reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0 ? reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0() : reagent.ratom.flush_BANG_.call(null));\n\nreturn this$__$1._run(false);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f__$1){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f__$1);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nvar was_empty = cljs.core.empty_QMARK_(self__.watches);\nreagent.ratom.remove_w(this$__$1,key);\n\nif((((!(was_empty))) && (cljs.core.empty_QMARK_(self__.watches)) && ((self__.auto_run == null)))){\nreturn this$__$1.reagent$ratom$IDisposable$dispose_BANG_$arity$1(null);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5739__auto___35702 = self__.caught;\nif((temp__5739__auto___35702 == null)){\n} else {\nvar e_35703 = temp__5739__auto___35702;\nthrow e_35703;\n}\n\nvar non_reactive_35704 = (reagent.ratom._STAR_ratom_context_STAR_ == null);\nif(non_reactive_35704){\n(reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0 ? reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0() : reagent.ratom.flush_BANG_.call(null));\n} else {\n}\n\nif(((non_reactive_35704) && ((self__.auto_run == null)))){\nif(self__.dirty_QMARK_){\nvar oldstate_35705 = self__.state;\n(self__.state = (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null)));\n\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate_35705,self__.state)))){\n} else {\nreagent.ratom.notify_w(this$__$1,oldstate_35705,self__.state);\n}\n} else {\n}\n} else {\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nif(self__.dirty_QMARK_){\nthis$__$1._run(false);\n} else {\n}\n}\n\nreturn self__.state;\n}));\n\n(reagent.ratom.Reaction.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"dirty?\",\"dirty?\",-419314319,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"nocache?\",\"nocache?\",-1065670978,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watching\",\"watching\",1947648227,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"auto-run\",\"auto-run\",-696035332,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"caught\",\"caught\",2084008322,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.Reaction.cljs$lang$type = true);\n\n(reagent.ratom.Reaction.cljs$lang$ctorStr = \"reagent.ratom/Reaction\");\n\n(reagent.ratom.Reaction.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"reagent.ratom/Reaction\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/Reaction.\n */\nreagent.ratom.__GT_Reaction = (function reagent$ratom$__GT_Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nreturn (new reagent.ratom.Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught));\n});\n\nreagent.ratom.flush_BANG_ = (function reagent$ratom$flush_BANG_(){\nwhile(true){\nvar q = reagent.ratom.rea_queue;\nif((q == null)){\nreturn null;\n} else {\n(reagent.ratom.rea_queue = null);\n\nvar n__4613__auto___35708 = q.length;\nvar i_35709 = (0);\nwhile(true){\nif((i_35709 < n__4613__auto___35708)){\nvar r_35710 = (q[i_35709]);\nr_35710._queued_run();\n\nvar G__35711 = (i_35709 + (1));\ni_35709 = G__35711;\ncontinue;\n} else {\n}\nbreak;\n}\n\ncontinue;\n}\nbreak;\n}\n});\n(reagent.impl.batching.ratom_flush = reagent.ratom.flush_BANG_);\nreagent.ratom.make_reaction = (function reagent$ratom$make_reaction(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___35712 = arguments.length;\nvar i__4737__auto___35713 = (0);\nwhile(true){\nif((i__4737__auto___35713 < len__4736__auto___35712)){\nargs__4742__auto__.push((arguments[i__4737__auto___35713]));\n\nvar G__35714 = (i__4737__auto___35713 + (1));\ni__4737__auto___35713 = G__35714;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic = (function (f,p__35425){\nvar map__35427 = p__35425;\nvar map__35427__$1 = (((((!((map__35427 == null))))?(((((map__35427.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__35427.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__35427):map__35427);\nvar auto_run = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35427__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35427__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35427__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\nvar reaction = reagent.ratom.__GT_Reaction(f,null,true,false,null,null,null,null);\nreaction._set_opts(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437),auto_run,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470),on_set,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360),on_dispose], null));\n\nreturn reaction;\n}));\n\n(reagent.ratom.make_reaction.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(reagent.ratom.make_reaction.cljs$lang$applyTo = (function (seq35419){\nvar G__35420 = cljs.core.first(seq35419);\nvar seq35419__$1 = cljs.core.next(seq35419);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__35420,seq35419__$1);\n}));\n\nreagent.ratom.temp_reaction = reagent.ratom.make_reaction(null);\n/**\n * Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n * creates a new Reaction that watches those atoms and calls `run` whenever\n * any of those watched ratoms change.  Also, the new reaction is added to\n * list of 'watches' of each of the ratoms. The `run` parameter is a function\n * that should expect one argument.  It is passed `obj` when run.  The `opts`\n * are any options accepted by a Reaction and will be set on the newly created\n * Reaction. Sets the newly created Reaction to the `key` on `obj`.\n */\nreagent.ratom.run_in_reaction = (function reagent$ratom$run_in_reaction(f,obj,key,run,opts){\nvar r = reagent.ratom.temp_reaction;\nvar res = reagent.ratom.deref_capture(f,r);\nif((r.watching == null)){\n} else {\n(reagent.ratom.temp_reaction = reagent.ratom.make_reaction(null));\n\nr._set_opts(opts);\n\n(r.f = f);\n\n(r.auto_run = (function (){\nreturn (run.cljs$core$IFn$_invoke$arity$1 ? run.cljs$core$IFn$_invoke$arity$1(obj) : run.call(null,obj));\n}));\n\ngoog.object.set(obj,key,r);\n}\n\nreturn res;\n});\nreagent.ratom.check_derefs = (function reagent$ratom$check_derefs(f){\nvar ctx = ({});\nvar res = reagent.ratom.in_context(ctx,f);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [res,(!((ctx.captured == null)))], null);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Wrapper = (function (state,callback,changed,watches){\nthis.state = state;\nthis.callback = callback;\nthis.changed = changed;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\nthis.cljs$lang$protocol_mask$partition0$ = 2149613568;\n});\n(reagent.ratom.Wrapper.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nif(((self__.changed) && ((!((reagent.ratom._STAR_ratom_context_STAR_ == null)))))){\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\"Warning: \",\"derefing stale wrap: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$__$1], 0))].join(''));\n} else {\n}\n} else {\n}\n\n\nreturn self__.state;\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,newval){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldval = self__.state;\n(self__.changed = true);\n\n(self__.state = newval);\n\nif((!((self__.watches == null)))){\nreagent.ratom.notify_w(this$__$1,oldval,newval);\n} else {\n}\n\n(self__.callback.cljs$core$IFn$_invoke$arity$1 ? self__.callback.cljs$core$IFn$_invoke$arity$1(newval) : self__.callback.call(null,newval));\n\nreturn newval;\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){\nvar self__ = this;\nvar this$__$1 = this;\nreturn (((other instanceof reagent.ratom.Wrapper)) && ((!(self__.changed))) && (cljs.core.not(other.changed)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.state,other.state)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.callback,other.callback)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Wrapper\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"val\",\"val\",128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null)], null));\n}));\n\n(reagent.ratom.Wrapper.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"callback\",\"callback\",935395299,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"changed\",\"changed\",-2083710852,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.Wrapper.cljs$lang$type = true);\n\n(reagent.ratom.Wrapper.cljs$lang$ctorStr = \"reagent.ratom/Wrapper\");\n\n(reagent.ratom.Wrapper.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"reagent.ratom/Wrapper\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/Wrapper.\n */\nreagent.ratom.__GT_Wrapper = (function reagent$ratom$__GT_Wrapper(state,callback,changed,watches){\nreturn (new reagent.ratom.Wrapper(state,callback,changed,watches));\n});\n\nreagent.ratom.make_wrapper = (function reagent$ratom$make_wrapper(value,callback_fn,args){\nreturn reagent.ratom.__GT_Wrapper(value,reagent.impl.util.make_partial_fn(callback_fn,args),false,null);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/ratom.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",18],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$react-dom","~$module$node_modules$react_dom$index","~$react","~$module$node_modules$react$index"],"~:use-macros",["^ ","~$warn","~$reagent.debug","~$dev?","^F"],"~:excludes",["~#set",["~$atom"]],"~:macros",["^ ","~$with-let",["^ ","~:arglists",["~#list",[["~$bindings","~$&","~$body"]]],"^7",18,"^8",1,"^6","reagent/ratom.clj","~:name","~$reagent.ratom/with-let","~:ns","~$reagent.ratom","~:macro",true],"~$reaction",["^ ","^M",["^N",[["~$&","^P"]]],"^7",6,"^8",1,"^6","reagent/ratom.clj","^Q","~$reagent.ratom/reaction","^S","^T","^U",true],"~$run!",["^ ","^M",["^N",[["~$&","^P"]]],"~:doc","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",10,"^8",1,"^6","reagent/ratom.clj","^Q","~$reagent.ratom/run!","^S","^T","^U",true]],"^Q","^T","~:op","^S","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^12","~$obj","~$goog.object","~$cljs.core","^15","~$goog","^16","^14","^14","~$reagent.impl.batching","^17","~$clojure.set","^18","~$util","^12","~$s","^18","~$batch","^17","^F","^F"],"~:seen",["^I",["~:require","~:require-macros"]],"~:uses",null,"^1=",["^ ","^T","^T","^F","^F","^15","^15"],"~:form",["^N",["~$ns","^T",["^N",["~:refer-clojure","~:exclude",["^J"]]],["^N",["^1=",["^T"]]],["^N",["^1<",["^12","~:as","^19"],["^F","~:refer-macros",["^E","^G"]],["^17","^1C","^1:"],["^18","^1C","~$s"],["^14","^1C","^13"]]]]],"~:flags",["^ ","^1=",["^I",[]],"^1<",["^I",[]]],"~:js-deps",["^ "],"~:deps",["^16","^15","^12","^F","^17","^18","^14"]],"^S","^T","~:resource-id",["~:shadow.build.classpath/resource","reagent/ratom.cljs"],"~:compiled-at",1614206265010,"~:resource-name","reagent/ratom.cljs","~:warnings",[],"~:source","(ns reagent.ratom\n  (:refer-clojure :exclude [atom])\n  (:require-macros [reagent.ratom])\n  (:require [reagent.impl.util :as util]\n            [reagent.debug :refer-macros [warn dev?]]\n            [reagent.impl.batching :as batch]\n            [clojure.set :as s]\n            [goog.object :as obj]))\n\n(declare flush!)\n\n(declare ^:dynamic *ratom-context*)\n(defonce ^boolean debug false)\n(defonce ^:private generation 0)\n(defonce ^:private -running (clojure.core/atom 0))\n\n(defn ^boolean reactive? []\n  (some? *ratom-context*))\n\n\n;;; Utilities\n\n(defn running []\n  (+ @-running))\n\n(defn- ^number arr-len [x]\n  (if (nil? x) 0 (alength x)))\n\n(defn- ^boolean arr-eq [x y]\n  (let [len (arr-len x)]\n    (and (== len (arr-len y))\n         (loop [i 0]\n           (or (== i len)\n               (if (identical? (aget x i) (aget y i))\n                 (recur (inc i))\n                 false))))))\n\n(defn- in-context\n  \"When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n  See function notify-deref-watcher! to know how *ratom-context* is updated\"\n  [obj f]\n  (binding [*ratom-context* obj]\n    (f)))\n\n(defn- deref-capture\n  \"Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n  `deref`ed atoms captured during `in-context`, if any differ from the\n  `watching` field of r.  Clears the `dirty?` flag on r.\n\n  Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n  the reaction is also added to the list of watches on each ratoms f derefs.\"\n  [f ^clj r]\n  (set! (.-captured r) nil)\n  (when (dev?)\n    (set! (.-ratomGeneration r) (set! generation (inc generation))))\n  (let [res (in-context r f)\n        c (.-captured r)]\n    (set! (.-dirty? r) false)\n    ;; Optimize common case where derefs occur in same order\n    (when-not (arr-eq c (.-watching r))\n      (._update-watching r c))\n    res))\n\n(defn- notify-deref-watcher!\n  \"Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`\"\n  [derefed]\n  (when-some [^clj r *ratom-context*]\n    (let [c (.-captured r)]\n      (if (nil? c)\n        (set! (.-captured r) (array derefed))\n        (.push c derefed)))))\n\n(defn- check-watches [old new]\n  (when debug\n    (swap! -running + (- (count new) (count old))))\n  new)\n\n(defn- add-w [^clj this key f]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (assoc w key f)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- remove-w [^clj this key]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (dissoc w key)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- notify-w [^clj this old new]\n  (let [w (.-watchesArr this)\n        a (if (nil? w)\n            ;; Copy watches to array for speed\n            (->> (.-watches this)\n                 (reduce-kv #(doto %1 (.push %2) (.push %3)) #js[])\n                 (set! (.-watchesArr this)))\n            w)\n        len (alength a)]\n    (loop [i 0]\n      (when (< i len)\n        (let [k (aget a i)\n              f (aget a (inc i))]\n          (f k this old new))\n        (recur (+ 2 i))))))\n\n(defn- pr-atom [a writer opts s v]\n  (-write writer (str \"#object[reagent.ratom.\" s \" \"))\n  (pr-writer (binding [*ratom-context* nil] v) writer opts)\n  (-write writer \"]\"))\n\n\n;;; Queueing\n\n(defonce ^:private rea-queue nil)\n\n(defn- rea-enqueue [r]\n  (when (nil? rea-queue)\n    (set! rea-queue (array))\n    (batch/schedule))\n  (.push rea-queue r))\n\n;;; Atom\n\n(defprotocol IReactiveAtom)\n\n(deftype RAtom [^:mutable state meta validator ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IDeref\n  (-deref [this]\n    (notify-deref-watcher! this)\n    state)\n\n  IReset\n  (-reset! [a new-value]\n    (when-not (nil? validator)\n      (assert (validator new-value) \"Validator rejected reference state\"))\n    (let [old-value state]\n      (set! state new-value)\n      (when-not (nil? watches)\n        (notify-w a old-value new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IWithMeta\n  (-with-meta [_ new-meta] (RAtom. state new-meta validator watches))\n\n  IMeta\n  (-meta [_] meta)\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"RAtom\" {:val (-deref a)}))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n(defn atom\n  \"Like clojure.core/atom, except that it keeps track of derefs.\"\n  ([x] (->RAtom x nil nil nil))\n  ([x & {:keys [meta validator]}] (->RAtom x meta validator nil)))\n\n\n;;; track\n\n(declare make-reaction)\n\n(defn- cached-reaction [f ^clj o k ^clj obj destroy]\n  (let [m (.-reagReactionCache o)\n        m (if (nil? m) {} m)\n        r (m k nil)]\n    (cond\n      (some? r) (-deref r)\n      (nil? *ratom-context*) (f)\n      :else (let [r (make-reaction\n                     f :on-dispose (fn [x]\n                                     (when debug (swap! -running dec))\n                                     (as-> (.-reagReactionCache o) _\n                                       (dissoc _ k)\n                                       (set! (.-reagReactionCache o) _))\n                                     (when (some? obj)\n                                       (set! (.-reaction obj) nil))\n                                     (when (some? destroy)\n                                       (destroy x))))\n                  v (-deref r)]\n              (set! (.-reagReactionCache o) (assoc m k r))\n              (when debug (swap! -running inc))\n              (when (some? obj)\n                (set! (.-reaction obj) r))\n              v))))\n\n(deftype Track [f args ^:mutable reaction]\n  IReactiveAtom\n\n  IDeref\n  (-deref [this]\n    (if-some [r reaction]\n      (-deref r)\n      (cached-reaction #(apply f args) f args this nil)))\n\n  IEquiv\n  (-equiv [_ ^clj other]\n    (and (instance? Track other)\n         (= f (.-f other))\n         (= args (.-args other))))\n\n  IHash\n  (-hash [_] (hash [f args]))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Track\" {:val (-deref a)\n                                                    :f f})))\n\n(defn make-track [f args]\n  (Track. f args nil))\n\n(defn make-track! [f args]\n  (let [t (make-track f args)\n        r (make-reaction #(-deref t)\n                         :auto-run true)]\n    @r\n    r))\n\n(defn track [f & args]\n  {:pre [(ifn? f)]}\n  (make-track f args))\n\n(defn track! [f & args]\n  {:pre [(ifn? f)]}\n  (make-track! f args))\n\n;;; cursor\n\n(deftype RCursor [ratom path ^:mutable reaction\n                  ^:mutable state ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [_ ^clj other]\n    (and (instance? RCursor other)\n         (= path (.-path other))\n         (= ratom (.-ratom other))))\n\n  Object\n  (_peek [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_set-state [this oldstate newstate]\n    (when-not (identical? oldstate newstate)\n      (set! state newstate)\n      (when (some? watches)\n        (notify-w this oldstate newstate))))\n\n  IDeref\n  (-deref [this]\n    (let [oldstate state\n          newstate (if-some [r reaction]\n                     (-deref r)\n                     (let [f (if (satisfies? IDeref ratom)\n                               #(get-in @ratom path)\n                               #(ratom path))]\n                       (cached-reaction f ratom path this nil)))]\n      (._set-state this oldstate newstate)\n      newstate))\n\n  IReset\n  (-reset! [this new-value]\n    (let [oldstate state]\n      (._set-state this oldstate new-value)\n      (if (satisfies? IDeref ratom)\n        (if (= path [])\n          (reset! ratom new-value)\n          (swap! ratom assoc-in path new-value))\n        (ratom path new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek a))))\n  (-swap! [a f x]        (-reset! a (f (._peek a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek a) x y more)))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"RCursor\" {:val (-deref a)\n                                                      :path path}))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [_] (hash [ratom path])))\n\n(defn cursor\n  [^clj src path]\n  (assert (or (satisfies? IReactiveAtom src)\n              (and (ifn? src)\n                   (not (vector? src))))\n          (str \"src must be a reactive atom or a function, not \"\n               (pr-str src)\n               \" while attempting to get path: \"\n               (pr-str path)))\n  (->RCursor src path nil nil nil))\n\n\n;;; with-let support\n\n(defn with-let-destroy [v]\n  (when-some [f (.-destroy v)]\n    (f)))\n\n(defn with-let-values [key]\n  (if-some [c *ratom-context*]\n    (cached-reaction array c key nil with-let-destroy)\n    (array)))\n\n\n;;;; reaction\n\n(defprotocol IDisposable\n  (dispose! [this])\n  (add-on-dispose! [this f]))\n\n(defprotocol IRunnable\n  (run [this]))\n\n(defn- handle-reaction-change [^clj this sender old new]\n  (._handle-change this sender old new))\n\n;; Fields of a Reaction javascript object\n;; - auto_run\n;; - captured\n;; - caught\n;; - f\n;; - ratomGeneration\n;; - state\n;; - watches\n;; - watching\n(deftype Reaction [f ^:mutable state ^:mutable ^boolean dirty? ^boolean nocache?\n                   ^:mutable watching ^:mutable watches ^:mutable auto-run\n                   ^:mutable caught]\n  IAtom\n  IReactiveAtom\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]\n    (let [was-empty (empty? watches)]\n      (remove-w this key)\n      (when (and (not was-empty)\n                 (empty? watches)\n                 (nil? auto-run))\n        (dispose! this))))\n\n  IReset\n  (-reset! [a newval]\n    (assert (fn? (.-on-set a)) \"Reaction is read only; on-set is not allowed\")\n    (let [oldval state]\n      (set! state newval)\n      (.on-set a oldval newval)\n      (notify-w a oldval newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek-at a))))\n  (-swap! [a f x]        (-reset! a (f (._peek-at a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek-at a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek-at a) x y more)))\n\n  Object\n  (_peek-at [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_handle-change [this sender oldval newval]\n    (when-not (or (identical? oldval newval)\n                  dirty?)\n      (if (nil? auto-run)\n        (do\n          (set! dirty? true)\n          (rea-enqueue this))\n        (if (true? auto-run)\n          (._run this false)\n          (auto-run this)))))\n\n  (_update-watching [this derefed]\n    (let [new (set derefed)\n          old (set watching)]\n      (set! watching derefed)\n      (doseq [w (s/difference new old)]\n        (-add-watch w this handle-reaction-change))\n      (doseq [w (s/difference old new)]\n        (-remove-watch w this))))\n\n  (_queued-run [this]\n    (when (and dirty? (some? watching))\n      (._run this true)))\n\n  (_try-capture [this f]\n    (try\n      (set! caught nil)\n      (deref-capture f this)\n      (catch :default e\n        (set! state e)\n        (set! caught e)\n        (set! dirty? false))))\n\n  (_run [this check]\n    (let [oldstate state\n          res (if check\n                (._try-capture this f)\n                (deref-capture f this))]\n      (when-not nocache?\n        (set! state res)\n        ;; Use = to determine equality from reactions, since\n        ;; they are likely to produce new data structures.\n        (when-not (or (nil? watches)\n                      (= oldstate res))\n          (notify-w this oldstate res)))\n      res))\n\n  (_set-opts [this {:keys [auto-run on-set on-dispose no-cache]}]\n    (when (some? auto-run)\n      (set! (.-auto-run this) auto-run))\n    (when (some? on-set)\n      (set! (.-on-set this) on-set))\n    (when (some? on-dispose)\n      (set! (.-on-dispose this) on-dispose))\n    (when (some? no-cache)\n      (set! (.-nocache? this) no-cache)))\n\n  IRunnable\n  (run [this]\n    (flush!)\n    (._run this false))\n\n  IDeref\n  (-deref [this]\n    (when-some [e caught]\n      (throw e))\n    (let [non-reactive (nil? *ratom-context*)]\n      (when non-reactive\n        (flush!))\n      (if (and non-reactive (nil? auto-run))\n        (when dirty?\n          (let [oldstate state]\n            (set! state (f))\n            (when-not (or (nil? watches) (= oldstate state))\n              (notify-w this oldstate state))))\n        (do\n          (notify-deref-watcher! this)\n          (when dirty?\n            (._run this false)))))\n    state)\n\n  IDisposable\n  (dispose! [this]\n    (let [s state\n          wg watching]\n      (set! watching nil)\n      (set! state nil)\n      (set! auto-run nil)\n      (set! dirty? true)\n      (doseq [w (set wg)]\n        (-remove-watch w this))\n      (when (some? (.-on-dispose this))\n        (.on-dispose this s))\n      (when-some [a (.-on-dispose-arr this)]\n        (dotimes [i (alength a)]\n          ((aget a i) this)))))\n\n  (add-on-dispose! [this f]\n    ;; f is called with the reaction as argument when it is no longer active\n    (if-some [a (.-on-dispose-arr this)]\n      (.push a f)\n      (set! (.-on-dispose-arr this) (array f))))\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Reaction\" {:val (-deref a)}))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n(defn flush! []\n  (loop []\n    (let [q rea-queue]\n      (when-not (nil? q)\n        (set! rea-queue nil)\n        (dotimes [i (alength q)]\n          (let [^Reaction r (aget q i)]\n            (._queued-run r)))\n        (recur)))))\n\n(set! batch/ratom-flush flush!)\n\n(defn make-reaction [f & {:keys [auto-run on-set on-dispose]}]\n  (let [reaction (->Reaction f nil true false nil nil nil nil)]\n    (._set-opts reaction {:auto-run auto-run\n                          :on-set on-set\n                          :on-dispose on-dispose})\n    reaction))\n\n\n\n(def ^:private temp-reaction (make-reaction nil))\n\n\n(defn run-in-reaction\n  \"Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`.\"\n  [f obj key run opts]\n  (let [r temp-reaction\n        res (deref-capture f r)]\n    (when-not (nil? (.-watching r))\n      (set! temp-reaction (make-reaction nil))\n      (._set-opts r opts)\n      (set! (.-f r) f)\n      (set! (.-auto-run r) #(run obj))\n      (obj/set obj key r))\n    res))\n\n(defn check-derefs [f]\n  (let [ctx (js-obj)\n        res (in-context ctx f)]\n    [res (some? (.-captured ctx))]))\n\n\n;;; wrap\n\n(deftype Wrapper [^:mutable state callback ^:mutable ^boolean changed\n                  ^:mutable watches]\n\n  IAtom\n\n  IDeref\n  (-deref [this]\n    (when (dev?)\n      (when (and changed (some? *ratom-context*))\n        (warn \"derefing stale wrap: \"\n              (pr-str this))))\n    state)\n\n  IReset\n  (-reset! [this newval]\n    (let [oldval state]\n      (set! changed true)\n      (set! state newval)\n      (when (some? watches)\n        (notify-w this oldval newval))\n      (callback newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IEquiv\n  (-equiv [this ^clj other]\n    (and (instance? Wrapper other)\n         ;; If either of the wrappers have changed, equality\n         ;; cannot be relied on.\n         (not changed)\n         (not (.-changed other))\n         (= state (.-state other))\n         (= callback (.-callback other))))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Wrapper\" {:val (-deref a)})))\n\n(defn make-wrapper [value callback-fn args]\n  (->Wrapper value\n             (util/make-partial-fn callback-fn args)\n             false nil))\n\n\n\n\n#_(do\n  (defn ratom-perf []\n    (set! debug false)\n    (dotimes [_ 10]\n      (let [nite 100000\n            a (atom 0)\n            f (fn []\n                (quot @a 10))\n            mid (make-reaction f)\n            res (track! (fn []\n                          ;; (with-let [x 1])\n                          ;; @(track f)\n                          (inc @mid)\n                          ))]\n        @res\n        (time (dotimes [x nite]\n                (swap! a inc)\n                (flush!)))\n        (dispose! res))))\n  (ratom-perf))\n","~:reader-features",["^I",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["js/reagent","js/reagent.ratom","js/reagent.ratom.debug","reagent.ratom/debug","js/reagent.ratom.generation","reagent.ratom/generation","js/reagent.ratom.-running","reagent.ratom/-running","cljs.core.atom","reagent.ratom/reactive?","reagent.ratom/*ratom-context*","reagent.ratom/running","cljs.core/deref","reagent.ratom/arr-len","x","reagent.ratom/arr-eq","y","len","i","or__4126__auto__","reagent.ratom/in-context","obj","f","*ratom-context*-orig-val__35201","*ratom-context*-temp-val__35202","reagent.ratom/deref-capture","r","res","c","reagent.ratom/notify-deref-watcher!","derefed","temp__5739__auto__","reagent.ratom/check-watches","old","new","cljs.core.swap_BANG_","cljs.core/+","cljs.core/count","reagent.ratom/add-w","this","key","w","cljs.core.assoc","reagent.ratom/remove-w","cljs.core.dissoc","reagent.ratom/notify-w","a","p1__35212#","p2__35213#","p3__35214#","cljs.core/reduce-kv","G__35216","k","reagent.ratom/pr-atom","writer","opts","s","v","cljs.core/-write","cljs.core/pr-writer","*ratom-context*-orig-val__35219","*ratom-context*-temp-val__35220","js/reagent.ratom.rea-queue","reagent.ratom/rea-queue","reagent.ratom/rea-enqueue","reagent.impl.batching/schedule","reagent.ratom/IReactiveAtom","cljs.core/PROTOCOL_SENTINEL","this__4369__auto__","writer__4370__auto__","opt__4371__auto__","reagent.ratom/RAtom","reagent.ratom/->RAtom","state","meta","validator","watches","o","other","new-value","js/Error","old-value","more","cljs.core.apply","_","new-meta","goog/getUid","var_args","G__35253","reagent.ratom/atom","args-arr__4757__auto__","len__4736__auto__","i__4737__auto__","argseq__4758__auto__","cljs.core/IndexedSeq","p__35255","map__35257","cljs.core/hash-map","cljs.core.get","seq35250","G__35251","cljs.core/first","cljs.core/next","self__4723__auto__","reagent.ratom/cached-reaction","destroy","m","cljs.core/-deref","G__35261","G__35262","G__35263","reagent.ratom/make-reaction","cljs.core/dec","cljs.core/inc","reagent.ratom/Track","reagent.ratom/->Track","args","reaction","temp__5737__auto__","cljs.core._EQ_","cljs.core/hash","reagent.ratom/make-track","reagent.ratom/make-track!","t","G__35280","G__35281","G__35282","args__4742__auto__","argseq__4743__auto__","reagent.ratom/track","seq35283","G__35284","cljs.core/ifn?","reagent.ratom/track!","seq35291","G__35292","reagent.ratom/RCursor","reagent.ratom/->RCursor","ratom","path","*ratom-context*-orig-val__35300","*ratom-context*-temp-val__35301","oldstate","newstate","cljs.core/native-satisfies?","cljs.core/IDeref","cljs.core.get_in","cljs.core/reset!","cljs.core/assoc-in","G__35303","G__35306","G__35307","G__35315","G__35316","G__35317","reagent.ratom/cursor","src","cljs.core/vector?","cljs.core.pr_str","reagent.ratom/with-let-destroy","reagent.ratom/with-let-values","cljs.core/array","reagent$ratom$IDisposable$dispose_BANG_$dyn","x__4428__auto__","m__4429__auto__","reagent.ratom/dispose!","goog/typeOf","m__4426__auto__","cljs.core/missing-protocol","reagent$ratom$IDisposable$add_on_dispose_BANG_$dyn","reagent.ratom/add-on-dispose!","reagent.ratom/IDisposable","reagent$ratom$IRunnable$run$dyn","reagent.ratom/run","reagent.ratom/IRunnable","reagent.ratom/handle-reaction-change","sender","p__35387","map__35388","reagent.ratom/Reaction","reagent.ratom/->Reaction","dirty?","nocache?","watching","auto-run","caught","was-empty","cljs.core/empty?","newval","cljs.core/fn?","oldval","G__35401","G__35402","G__35403","G__35404","G__35405","G__35406","*ratom-context*-orig-val__35361","*ratom-context*-temp-val__35362","cljs.core/set","seq__35364","cljs.core/seq","chunk__35365","count__35366","i__35367","temp__5735__auto__","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","clojure.set.difference","cljs.core/-add-watch","seq__35370","chunk__35371","count__35372","i__35373","cljs.core/-remove-watch","e35386","e","check","on-set","on-dispose","no-cache","reagent.ratom/flush!","non-reactive","wg","seq__35392","chunk__35393","count__35394","i__35395","n__4613__auto__","fexpr__35400","q","reagent.impl.batching/ratom-flush","p__35425","map__35427","seq35419","G__35420","reagent.ratom/temp-reaction","reagent.ratom/run-in-reaction","run","goog.object/set","reagent.ratom/check-derefs","ctx","reagent.ratom/Wrapper","reagent.ratom/->Wrapper","callback","changed","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","cljs.core/not","reagent.ratom/make-wrapper","value","callback-fn","reagent.impl.util/make-partial-fn"]],"~:used-vars",["^I",["~$cljs.core/PROTOCOL_SENTINEL","~$reagent.ratom/check-derefs","~$reagent.ratom/generation","~$reagent.ratom/make-track!","~$reagent.ratom/run","~$reagent.ratom/remove-w","~$js/reagent.ratom.debug","~$cljs.core/vector?","~$cljs.core/=","~$cljs.core/ifn?","~$js/reagent.ratom.-running","~$reagent.ratom/->RAtom","~$cljs.core/-write","~$cljs.core/-deref","~$cljs.core/pr-writer","~$cljs.core/hash","~$cljs.core/-reset!","~$cljs.core/count","~$cljs.core/deref","~$reagent.ratom/arr-len","~$cljs.core/apply","~$js/reagent.ratom.generation","~$goog/getUid","~$reagent.ratom/flush!","~$reagent.ratom/notify-deref-watcher!","~$cljs.core/dissoc","~$reagent.ratom/check-watches","~$reagent.ratom/with-let-destroy","~$cljs.core/chunk-rest","~$cljs.core/atom","~$reagent.ratom/debug","~$reagent.ratom/rea-enqueue","~$reagent.debug/has-console","~$js/reagent","~$cljs.core/pr-str","~$reagent.ratom/RCursor","~$js/console","~$reagent.ratom/make-wrapper","~$cljs.core/native-satisfies?","~$cljs.core/empty?","~$reagent.ratom/IReactiveAtom","~$reagent.ratom/track","~$reagent.impl.util/make-partial-fn","~$cljs.core/reset!","~$reagent.ratom/cached-reaction","~$reagent.ratom/Wrapper","~$cljs.core/-add-watch","~$reagent.ratom/track!","~$reagent.ratom/dispose!","~$js/reagent.ratom.rea-queue","~$reagent.ratom/->Reaction","~$reagent.ratom/running","~$reagent.ratom/make-reaction","~$reagent.ratom/IRunnable","~$reagent.ratom/notify-w","~$cljs.core/fn?","~$reagent.ratom/rea-queue","~$reagent.ratom/add-on-dispose!","~$reagent.impl.batching/ratom-flush","~$cljs.core/swap!","~$js/reagent.ratom","~$reagent.ratom/arr-eq","~$reagent.ratom/handle-reaction-change","~$goog.object/set","~$reagent.ratom/temp-reaction","~$reagent.debug/tracking","~$cljs.core/-remove-watch","~$reagent.debug/track-console","~$reagent.ratom/run-in-reaction","~$reagent.ratom/->Track","~$reagent.impl.batching/schedule","~$cljs.core/next","~$reagent.ratom/*ratom-context*","~$reagent.ratom/IDisposable","~$reagent.ratom/->Wrapper","~$reagent.ratom/Track","~$cljs.core/IDeref","~$reagent.ratom/cursor","~$cljs.core/not","~$reagent.ratom/make-track","~$reagent.ratom/add-w","~$cljs.core/assoc","~$cljs.core/assoc-in","~$reagent.ratom/-running","~$reagent.ratom/Reaction","~$reagent.ratom/RAtom","~$reagent.ratom/reactive?","~$reagent.ratom/atom","~$reagent.ratom/deref-capture","~$cljs.core/+","~$cljs.core/array","~$js/Error","~$reagent.ratom/in-context","~$reagent.ratom/with-let-values","~$cljs.core/inc","~$reagent.ratom/->RCursor","~$cljs.core/chunked-seq?","~$reagent.ratom/pr-atom"]]],"~:cache-keys",["~#cmap",[["^1I","reagent/impl/batching.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^I",[]],"~:deps-syms",["^16","^15","^F","^12"]]],["^1I","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","~$goog.dom.HtmlElement"]]],["^1I","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","~$goog.array","~$goog.asserts"]]],["^1I","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16"]]],["^1I","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","^4:","~$goog.labs.userAgent.util","^14","~$goog.string.internal"]]],["^1I","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","^4;","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^4="]]],["^1I","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","^4;"]]],["^1I","reagent/impl/util.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","^15","~$clojure.string","~$clojure.walk","^14","^F"]]],["^1I","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16"]]],["^1I","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16"]]],["^1I","reagent/ratom.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","^15","^12","^F","^17","^18","^14"]]],["^1I","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16"]]],["^1I","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16"]]],["^1I","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","^4;"]]],"~:SHADOW-TIMESTAMP",[1608075891000,1608075891000,1591039825000],["^1I","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","^4;","~$goog.reflect"]]],["^1I","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","^4;","~$goog.html.trustedtypes","^4@","^4A","^4B","^4C"]]],["^1I","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16"]]],["^1I","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16"]]],["^1I","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","^4:","^4;","~$goog.html.SafeUrl","^4B","^4C","^4="]]],["^1I","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","^4;","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^4I","^4?","~$goog.html.uncheckedconversions","^4B","^4="]]],["^1I","clojure/walk.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","^15"]]],["^1I","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1I","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","^4:","^4;","~$goog.dom.TagName","~$goog.dom.tags","^4M","^4N","~$goog.html.SafeStyleSheet","^4I","^4?","^4H","^4@","^4A","~$goog.labs.userAgent.browser","^14","^4B","^4C","^4="]]],["^1I","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","^14"]]],["^1I","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1I","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","^4:","^4;","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1I","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16"]]],["^1I","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16"]]],["^1I","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",[]]],["^1I","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","^4:","^14"]]],["^1I","clojure/string.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","^15","^4X","~$goog.string.StringBuffer"]]],["^1I","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","~$goog.dom.safe","^4O","^4B","^4="]]],["^1I","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16"]]],["^1I","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","^4="]]],["^1I","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16"]]],["^1I","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","^4:","^4;","^4K","~$goog.math"]]],["^1I","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","^4;","^4L","^4M","^4N","^4T","^4I","^4?","^4B","^4="]]],["^1I","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16"]]],["^1I","cljs/core.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","~$goog.math.Long","~$goog.math.Integer","^4X","^14","^4:","~$goog.Uri","^52"]]],["^1I","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","^4;","^4H","^4B","^4C"]]],["^1I","reagent/debug.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","^15"]]],["^1I","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","^4:","^4;","^4N","^14","^4B","^4C","^4="]]],["^1I","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","^4G"]]],["^1I","clojure/set.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","^15"]]],["^1I","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","^4:","^4;","^4X"]]],["^1I","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^45",["^ ","^46",null,"^47",["^I",[]],"^48",["^16","^4;","^4C"]]]]],"~:clj-info",["^ ","jar:file:/Users/rgm/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64.clj",1591039825000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1607998137000,"jar:file:/Users/rgm/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/interop.clj",1608999970000,"jar:file:/Users/rgm/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1583859516000,"jar:file:/Users/rgm/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1598301532000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1607998137000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1607998137000,"jar:file:/Users/rgm/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/ratom.clj",1608999970000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/js_deps.cljc",1591039825000,"jar:file:/Users/rgm/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1598301532000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64_vlq.clj",1591039825000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1607998137000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/core.cljc",1591039825000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1607998137000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/analyzer.cljc",1591039825000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1607998137000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/env.cljc",1591039825000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/externs.clj",1591039825000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/compiler.cljc",1591039825000,"jar:file:/Users/rgm/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1598301532000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/util.cljc",1591039825000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1607998137000,"jar:file:/Users/rgm/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1598301532000,"jar:file:/Users/rgm/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1598301532000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map.clj",1591039825000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/tagged_literals.cljc",1591039825000,"jar:file:/Users/rgm/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/debug.clj",1608999970000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/ratom.cljs","^7",1,"^8",5,"^9",1,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"~:shadow/protocol-prefixes",["^I",["reagent$ratom$IRunnable$","reagent$ratom$IDisposable$"]],"^D",["^ ","^E","^F","^G","^F"],"^H",["^I",["^J"]],"^K",["^ ","^L",["^ ","^M",["^N",[["^O","~$&","^P"]]],"^7",18,"^8",1,"^6","reagent/ratom.clj","^Q","^R","^S","^T","^U",true],"^V",["^ ","^M",["^N",[["~$&","^P"]]],"^7",6,"^8",1,"^6","reagent/ratom.clj","^Q","^W","^S","^T","^U",true],"^X",["^ ","^M",["^N",[["~$&","^P"]]],"^Y","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",10,"^8",1,"^6","reagent/ratom.clj","^Q","^Z","^S","^T","^U",true]],"~:shadow/js-access-properties",["^I",["_run","_peek-at","_update-watching","_queued-run","_set-opts","_peek","_set-state","_handle-change","_try-capture"]],"^Q","^T","^10",null,"^11",["^ ","^12","^12","^13","^14","^15","^15","^16","^16","^14","^14","^17","^17","^18","^18","^19","^12","~$s","^18","^1:","^17","^F","^F"],"^1;",["^I",["^1<","^1="]],"~:shadow/js-access-global",["^I",["Error"]],"^1>",null,"~:defs",["^ ","~$pr-atom",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",107,"^8",8,"^9",107,"^:",15,"~:private",true,"^M",["^N",["~$quote",["^N",[["~$a","~$writer","~$opts","~$s","~$v"]]]]]],"^5[",true,"^Q","^42","^6","reagent/ratom.cljs","^:",15,"~:method-params",["^N",[["~$a","^61","^62","~$s","~$v"]]],"~:protocol-impl",null,"~:arglists-meta",["^N",[null,null]],"^8",1,"~:variadic?",false,"^7",107,"~:ret-tag","~$any","^9",107,"~:max-fixed-arity",5,"~:fn-var",true,"^M",["^N",["^60",["^N",[["~$a","^61","^62","~$s","~$v"]]]]]],"~$->RCursor",["^ ","^5Z",null,"^5",["^ ","~:protocols",["^I",["~$cljs.core/IWatchable","~$cljs.core/IAtom","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/Object","~$cljs.core/IReset","~$cljs.core/ISwap","^2Q","^3I","~$cljs.core/IPrintWithWriter"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"~:factory","~:positional","^7",248,"^9",248,"^M",["^N",["^60",["^N",[["~$ratom","~$path","^V","~$state","~$watches"]]]]],"~:skip-protocol-flag",["^I",["^6=","^6>","^6?","^6@","^6B","^6C","^3I","^6D"]],"^Y","Positional factory function for reagent.ratom/RCursor."],"^6<",["^I",["^6=","^6>","^6?","^6@","^6A","^6B","^6C","^2Q","^3I","^6D"]],"^Q","^40","^6","reagent/ratom.cljs","^:",17,"^63",["^N",[["^6G","^6H","^V","^6I","^6J"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^6E","^6F","^7",248,"^67","^2L","^9",248,"^69",5,"^6:",true,"^M",["^N",["^60",["^N",[["^6G","^6H","^V","^6I","^6J"]]]]],"^6K",["^I",["^6=","^6>","^6?","^6@","^6B","^6C","^3I","^6D"]],"^Y","Positional factory function for reagent.ratom/RCursor."],"~$notify-deref-watcher!",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",65,"^8",8,"^9",65,"^:",29,"^5[",true,"^M",["^N",["^60",["^N",[["~$derefed"]]]]],"^Y","Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`"],"^5[",true,"^Q","^2A","^6","reagent/ratom.cljs","^:",29,"^63",["^N",[["^6M"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^7",65,"^67",["^I",[null,"^68","~$clj-nil"]],"^9",65,"^69",1,"^6:",true,"^M",["^N",["^60",["^N",[["^6M"]]]]],"^Y","Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`"],"~$rea-enqueue",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",117,"^8",8,"^9",117,"^:",19,"^5[",true,"^M",["^N",["^60",["^N",[["~$r"]]]]]],"^5[",true,"^Q","^2H","^6","reagent/ratom.cljs","^:",19,"^63",["^N",[["~$r"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^7",117,"^67","^68","^9",117,"^69",1,"^6:",true,"^M",["^N",["^60",["^N",[["~$r"]]]]]],"~$in-context",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",38,"^8",8,"^9",38,"^:",18,"^5[",true,"^M",["^N",["^60",["^N",[["^13","~$f"]]]]],"^Y","When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n  See function notify-deref-watcher! to know how *ratom-context* is updated"],"^5[",true,"^Q","^3Y","^6","reagent/ratom.cljs","^:",18,"^63",["^N",[["^13","~$f"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^7",38,"^9",38,"^69",2,"^6:",true,"^M",["^N",["^60",["^N",[["^13","~$f"]]]]],"^Y","When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n  See function notify-deref-watcher! to know how *ratom-context* is updated"],"~$make-track",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",228,"^8",7,"^9",228,"^:",17,"^M",["^N",["^60",["^N",[["~$f","~$args"]]]]]],"^Q","^3L","^6","reagent/ratom.cljs","^:",17,"^63",["^N",[["~$f","^6R"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^7",228,"^67","^3H","^9",228,"^69",2,"^6:",true,"^M",["^N",["^60",["^N",[["~$f","^6R"]]]]]],"~$RAtom",["^ ","~:num-fields",4,"^6<",["^I",["^6=","^6>","^6?","^6@","^6B","^6C","^2Q","~$cljs.core/IMeta","^3I","^6D","~$cljs.core/IWithMeta"]],"^Q","^3R","^6","reagent/ratom.cljs","^:",15,"~:type",true,"^8",10,"^7",127,"~:record",false,"^9",127,"~:tag","~$function","^6K",["^I",["^6=","^6>","^6?","^6@","^6B","^6C","^6U","^3I","^6D","^6V"]]],"^J",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",172,"^8",7,"^9",172,"^:",11,"^M",["^N",["^60",["^N",[["~$x"],["~$x","~$&",["^ ","~:keys",["~$meta","~$validator"]]]]]]],"^Y","Like clojure.core/atom, except that it keeps track of derefs.","~:top-fn",["^ ","^66",true,"~:fixed-arity",1,"^69",1,"^63",[["~$x"]],"^M",["^N",[["~$x"],["~$x","~$&",["^ ","^6[",["^70","^71"]]]]],"^65",["^N",[null,null]]]],"^Q","^3T","^6","reagent/ratom.cljs","^:",11,"^72",["^ ","^66",true,"^73",1,"^69",1,"^63",[["~$x"]],"^M",["^N",[["~$x"],["~$x","~$&",["^ ","^6[",["^70","^71"]]]]],"^65",["^N",[null,null]]],"^63",[["~$x"]],"^64",null,"^73",1,"^65",["^N",[null,null]],"^8",1,"^66",true,"~:methods",[["^ ","^73",1,"^66",false,"^6Y","^3R"],["^ ","^73",1,"^66",true,"^6Y","^3R"]],"^7",172,"^9",172,"^69",1,"^6:",true,"^M",["^N",[["~$x"],["~$x","~$&",["^ ","^6[",["^70","^71"]]]]],"^Y","Like clojure.core/atom, except that it keeps track of derefs."],"~$notify-w",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",91,"^8",8,"^9",91,"^:",16,"^5[",true,"^M",["^N",["^60",["^N",[["~$this","~$old","~$new"]]]]]],"^5[",true,"^Q","^33","^6","reagent/ratom.cljs","^:",16,"^63",["^N",[["^76","^77","^78"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^7",91,"^67","^6N","^9",91,"^69",3,"^6:",true,"^M",["^N",["^60",["^N",[["^76","^77","^78"]]]]]],"~$->Reaction",["^ ","^5Z",null,"^5",["^ ","^6<",["^I",["^6=","^6>","^6?","^6@","^6A","^6B","^6C","^2Q","^32","^3F","^3I","^6D"]],"^6","reagent/ratom.cljs","^:",18,"^8",10,"^6E","^6F","^7",356,"^9",356,"^M",["^N",["^60",["^N",[["~$f","^6I","~$dirty?","~$nocache?","~$watching","^6J","~$auto-run","~$caught"]]]]],"^6K",["^I",["^6=","^6>","^6?","^6@","^6B","^6C","^3I","^6D"]],"^Y","Positional factory function for reagent.ratom/Reaction."],"^6<",["^I",["^6=","^6>","^6?","^6@","^6A","^6B","^6C","^2Q","^32","^3F","^3I","^6D"]],"^Q","^2[","^6","reagent/ratom.cljs","^:",18,"^63",["^N",[["~$f","^6I","^7:","^7;","^7<","^6J","^7=","^7>"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^6E","^6F","^7",356,"^67","^3Q","^9",356,"^69",8,"^6:",true,"^M",["^N",["^60",["^N",[["~$f","^6I","^7:","^7;","^7<","^6J","^7=","^7>"]]]]],"^6K",["^I",["^6=","^6>","^6?","^6@","^6B","^6C","^3I","^6D"]],"^Y","Positional factory function for reagent.ratom/Reaction."],"~$make-wrapper",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",603,"^8",7,"^9",603,"^:",19,"^M",["^N",["^60",["^N",[["~$value","~$callback-fn","^6R"]]]]]],"^Q","^2N","^6","reagent/ratom.cljs","^:",19,"^63",["^N",[["^7@","^7A","^6R"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^7",603,"^67","^2V","^9",603,"^69",3,"^6:",true,"^M",["^N",["^60",["^N",[["^7@","^7A","^6R"]]]]]],"~$IReactiveAtom",["^ ","^5",["^ ","~:protocol-symbol",true,"^6","reagent/ratom.cljs","^:",27,"^8",14,"^7",125,"~:protocol-info",["^ ","^74",["^ "]],"^9",125,"~:sigs",["^ "],"~:jsdoc",["^N",["@interface"]]],"^7C",true,"^Q","^2Q","^6","reagent/ratom.cljs","^:",27,"^8",1,"^7",125,"^7D",["^ ","^74",["^ "]],"~:info",null,"^9",125,"^6Y","^68","^7E",["^ "],"~:impls",["^I",["^2L","^3H","^3Q","^3R"]],"^7F",["^N",["@interface"]]],"~$track",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",238,"^8",7,"^9",238,"^:",12,"^M",["^N",["^60",["^N",[["~$f","~$&","^6R"]]]]],"^72",["^ ","^66",true,"^73",1,"^69",1,"^63",[["^N",["~$f","^6R"]]],"^M",["^N",[["~$f","~$&","^6R"]]],"^65",["^N",[null]]]],"^Q","^2R","^6","reagent/ratom.cljs","^:",12,"^72",["^ ","^66",true,"^73",1,"^69",1,"^63",[["^N",["~$f","^6R"]]],"^M",["^N",[["~$f","~$&","^6R"]]],"^65",["^N",[null]]],"^63",[["^N",["~$f","^6R"]]],"^64",null,"^73",1,"^65",["^N",[null]],"^8",1,"^66",true,"^74",[["^ ","^73",1,"^66",true,"^6Y","^3H"]],"^7",238,"^67","^68","^9",238,"^69",1,"^6:",true,"^M",["^N",[["~$f","~$&","^6R"]]]],"~$dispose!",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",338,"^8",4,"^9",338,"^:",12,"~:protocol","^3F","^Y",null,"^M",["^N",["^60",["^N",[["^76"]]]]]],"^7K","^3F","^Q","^2Y","^6","reagent/ratom.cljs","^:",12,"^63",["^N",[["^76"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^7",337,"^67","^68","^9",338,"^69",1,"^6:",true,"^M",["^N",["^60",["^N",[["^76"]]]]],"^Y",null],"~$arr-eq",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",29,"^8",17,"^9",29,"^:",23,"^6Y","~$boolean","^5[",true,"^M",["^N",["^60",["^N",[["~$x","~$y"]]]]]],"^5[",true,"^Q","^3:","^6","reagent/ratom.cljs","^:",23,"^63",["^N",[["~$x","~$y"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^7",29,"^67","^7M","^9",29,"^69",2,"^6Y","^7M","^6:",true,"^M",["^N",["^60",["^N",[["~$x","~$y"]]]]]],"~$handle-reaction-change",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",344,"^8",8,"^9",344,"^:",30,"^5[",true,"^M",["^N",["^60",["^N",[["^76","~$sender","^77","^78"]]]]]],"^5[",true,"^Q","^3;","^6","reagent/ratom.cljs","^:",30,"^63",["^N",[["^76","^7O","^77","^78"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^7",344,"^67","^68","^9",344,"^69",4,"^6:",true,"^M",["^N",["^60",["^N",[["^76","^7O","^77","^78"]]]]]],"~$run",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",342,"^8",4,"^9",342,"^:",7,"^7K","^32","^Y",null,"^M",["^N",["^60",["^N",[["^76"]]]]]],"^7K","^32","^Q","^1Y","^6","reagent/ratom.cljs","^:",7,"^63",["^N",[["^76"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^7",341,"^67","^68","^9",342,"^69",1,"^6:",true,"^M",["^N",["^60",["^N",[["^76"]]]]],"^Y",null],"~$add-on-dispose!",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",339,"^8",4,"^9",339,"^:",19,"^7K","^3F","^Y",null,"^M",["^N",["^60",["^N",[["^76","~$f"]]]]]],"^7K","^3F","^Q","^36","^6","reagent/ratom.cljs","^:",19,"^63",["^N",[["^76","~$f"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^7",337,"^67","^68","^9",339,"^69",2,"^6:",true,"^M",["^N",["^60",["^N",[["^76","~$f"]]]]],"^Y",null],"~$temp-reaction",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",526,"^8",16,"^9",526,"^:",29,"^5[",true],"^5[",true,"^Q","^3=","^6","reagent/ratom.cljs","^:",29,"^8",1,"^7",526,"^9",526,"^6Y","^3Q"],"~$make-track!",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",231,"^8",7,"^9",231,"^:",18,"^M",["^N",["^60",["^N",[["~$f","^6R"]]]]]],"^Q","^1X","^6","reagent/ratom.cljs","^:",18,"^63",["^N",[["~$f","^6R"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^7",231,"^67","^68","^9",231,"^69",2,"^6:",true,"^M",["^N",["^60",["^N",[["~$f","^6R"]]]]]],"~$generation",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",14,"^8",20,"^9",14,"^:",30,"^5[",true],"^5[",true,"^Q","^1W","^6","reagent/ratom.cljs","^:",30,"^8",1,"^7",14,"^9",14,"^6Y","~$number"],"~$run-in-reaction",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",529,"^8",7,"^9",529,"^:",22,"^M",["^N",["^60",["^N",[["~$f","^13","~$key","^7P","^62"]]]]],"^Y","Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`."],"^Q","^3A","^6","reagent/ratom.cljs","^:",22,"^63",["^N",[["~$f","^13","^7W","^7P","^62"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^7",529,"^67","^68","^9",529,"^69",5,"^6:",true,"^M",["^N",["^60",["^N",[["~$f","^13","^7W","^7P","^62"]]]]],"^Y","Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`."],"~$IDisposable",["^ ","^5",["^ ","^7C",true,"^6","reagent/ratom.cljs","^:",25,"^8",14,"^7",337,"^7D",["^ ","^74",["^ ","^7J",[["^76"]],"^7Q",[["^76","~$f"]]]],"^9",337,"^7E",["^ ","~:dispose!",["^ ","^Q","^7J","^M",["^N",[["^76"]]],"^Y",null],"~:add-on-dispose!",["^ ","^Q","^7Q","^M",["^N",[["^76","~$f"]]],"^Y",null]],"^7F",["^N",["@interface"]]],"^7C",true,"^Q","^3F","^6","reagent/ratom.cljs","^:",25,"^8",1,"^7",337,"^7D",["^ ","^74",["^ ","^7J",[["^76"]],"^7Q",[["^76","~$f"]]]],"^7G",null,"^9",337,"^6Y","^68","^7E",["^ ","^7Y",["^ ","^Q","^7J","^M",["^N",[["^76"]]],"^Y",null],"^7Z",["^ ","^Q","^7Q","^M",["^N",[["^76","~$f"]]],"^Y",null]],"^7H",["^I",["^3Q"]],"^7F",["^N",["@interface"]]],"~$check-watches",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",76,"^8",8,"^9",76,"^:",21,"^5[",true,"^M",["^N",["^60",["^N",[["^77","^78"]]]]]],"^5[",true,"^Q","^2C","^6","reagent/ratom.cljs","^:",21,"^63",["^N",[["^77","^78"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^7",76,"^9",76,"^69",2,"^6:",true,"^M",["^N",["^60",["^N",[["^77","^78"]]]]]],"~$with-let-destroy",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",325,"^8",7,"^9",325,"^:",23,"^M",["^N",["^60",["^N",[["~$v"]]]]]],"^Q","^2D","^6","reagent/ratom.cljs","^:",23,"^63",["^N",[["~$v"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^7",325,"^67",["^I",["^68","^6N"]],"^9",325,"^69",1,"^6:",true,"^M",["^N",["^60",["^N",[["~$v"]]]]]],"~$make-reaction",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",517,"^8",7,"^9",517,"^:",20,"^M",["^N",["^60",["^N",[["~$f","~$&",["^ ","^6[",["^7=","~$on-set","~$on-dispose"]]]]]]],"^72",["^ ","^66",true,"^73",1,"^69",1,"^63",[["^N",["~$f",["^ ","^6[",["^7=","^82","^83"]]]]],"^M",["^N",[["~$f","~$&",["^ ","^6[",["^7=","^82","^83"]]]]],"^65",["^N",[null]]]],"^Q","^31","^6","reagent/ratom.cljs","^:",20,"^72",["^ ","^66",true,"^73",1,"^69",1,"^63",[["^N",["~$f",["^ ","^6[",["^7=","^82","^83"]]]]],"^M",["^N",[["~$f","~$&",["^ ","^6[",["^7=","^82","^83"]]]]],"^65",["^N",[null]]],"^63",[["^N",["~$f",["^ ","^6[",["^7=","^82","^83"]]]]],"^64",null,"^73",1,"^65",["^N",[null]],"^8",1,"^66",true,"^74",[["^ ","^73",1,"^66",true,"^6Y","^3Q"]],"^7",517,"^67","^68","^9",517,"^69",1,"^6:",true,"^M",["^N",[["~$f","~$&",["^ ","^6[",["^7=","^82","^83"]]]]]],"~$add-w",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",81,"^8",8,"^9",81,"^:",13,"^5[",true,"^M",["^N",["^60",["^N",[["^76","^7W","~$f"]]]]]],"^5[",true,"^Q","^3M","^6","reagent/ratom.cljs","^:",13,"^63",["^N",[["^76","^7W","~$f"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^7",81,"^9",81,"^69",3,"^6:",true,"^M",["^N",["^60",["^N",[["^76","^7W","~$f"]]]]]],"~$Reaction",["^ ","^6T",8,"^6<",["^I",["^6=","^6>","^6?","^6@","^6A","^6B","^6C","^2Q","^32","^3F","^3I","^6D"]],"^Q","^3Q","^6","reagent/ratom.cljs","^:",18,"^6W",true,"^8",10,"^7",356,"^6X",false,"^9",356,"^6Y","^6Z","^6K",["^I",["^6=","^6>","^6?","^6@","^6B","^6C","^3I","^6D"]]],"~$flush!",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",505,"^8",7,"^9",505,"^:",13,"^M",["^N",["^60",["^N",[[]]]]]],"^Q","^2@","^6","reagent/ratom.cljs","^:",13,"^63",["^N",[[]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^7",505,"^67","^6N","^9",505,"^69",0,"^6:",true,"^M",["^N",["^60",["^N",[[]]]]]],"~$RCursor",["^ ","^6T",5,"^6<",["^I",["^6=","^6>","^6?","^6@","^6A","^6B","^6C","^2Q","^3I","^6D"]],"^Q","^2L","^6","reagent/ratom.cljs","^:",17,"^6W",true,"^8",10,"^7",248,"^6X",false,"^9",248,"^6Y","^6Z","^6K",["^I",["^6=","^6>","^6?","^6@","^6B","^6C","^3I","^6D"]]],"~$cached-reaction",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",182,"^8",8,"^9",182,"^:",23,"^5[",true,"^M",["^N",["^60",["^N",[["~$f","~$o","~$k","^13","~$destroy"]]]]]],"^5[",true,"^Q","^2U","^6","reagent/ratom.cljs","^:",23,"^63",["^N",[["~$f","~$o","~$k","^13","^89"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^7",182,"^67","^68","^9",182,"^69",5,"^6:",true,"^M",["^N",["^60",["^N",[["~$f","~$o","~$k","^13","^89"]]]]]],"~$Track",["^ ","^6T",3,"^6<",["^I",["^6?","^6@","^2Q","^3I","^6D"]],"^Q","^3H","^6","reagent/ratom.cljs","^:",15,"^6W",true,"^8",10,"^7",206,"^6X",false,"^9",206,"^6Y","^6Z","^6K",["^I",["^6?","^6@","^3I","^6D"]]],"~$debug",["^ ","^Q","^2G","^6","reagent/ratom.cljs","^7",13,"^8",1,"^9",13,"^:",24,"^6Y","^7M","^5",["^ ","^6","reagent/ratom.cljs","^7",13,"^8",19,"^9",13,"^:",24,"^6Y","^7M"]],"~$-running",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",15,"^8",20,"^9",15,"^:",28,"^5[",true],"^5[",true,"^Q","^3P","^6","reagent/ratom.cljs","^:",28,"^8",1,"^7",15,"^9",15,"^6Y","~$cljs.core/Atom"],"~$cursor",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",311,"^8",7,"^9",311,"^:",13,"^M",["^N",["^60",["^N",[["~$src","^6H"]]]]]],"^Q","^3J","^6","reagent/ratom.cljs","^:",13,"^63",["^N",[["^8?","^6H"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^7",311,"^67","^2L","^9",311,"^69",2,"^6:",true,"^M",["^N",["^60",["^N",[["^8?","^6H"]]]]]],"~$Wrapper",["^ ","^6T",4,"^6<",["^I",["^6=","^6>","^6?","^6B","^6C","^3I","^6D"]],"^Q","^2V","^6","reagent/ratom.cljs","^:",17,"^6W",true,"^8",10,"^7",556,"^6X",false,"^9",556,"^6Y","^6Z","^6K",["^I",["^6=","^6>","^6?","^6B","^6C","^3I","^6D"]]],"~$running",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",23,"^8",7,"^9",23,"^:",14,"^M",["^N",["^60",["^N",[[]]]]]],"^Q","^30","^6","reagent/ratom.cljs","^:",14,"^63",["^N",[[]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^7",23,"^67","^7U","^9",23,"^69",0,"^6:",true,"^M",["^N",["^60",["^N",[[]]]]]],"~$IRunnable",["^ ","^5",["^ ","^7C",true,"^6","reagent/ratom.cljs","^:",23,"^8",14,"^7",341,"^7D",["^ ","^74",["^ ","^7P",[["^76"]]]],"^9",341,"^7E",["^ ","~:run",["^ ","^Q","^7P","^M",["^N",[["^76"]]],"^Y",null]],"^7F",["^N",["@interface"]]],"^7C",true,"^Q","^32","^6","reagent/ratom.cljs","^:",23,"^8",1,"^7",341,"^7D",["^ ","^74",["^ ","^7P",[["^76"]]]],"^7G",null,"^9",341,"^6Y","^68","^7E",["^ ","^8C",["^ ","^Q","^7P","^M",["^N",[["^76"]]],"^Y",null]],"^7H",["^I",["^3Q"]],"^7F",["^N",["@interface"]]],"~$reactive?",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",17,"^8",16,"^9",17,"^:",25,"^6Y","^7M","^M",["^N",["^60",["^N",[[]]]]]],"^Q","^3S","^6","reagent/ratom.cljs","^:",25,"^63",["^N",[[]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^7",17,"^67","^7M","^9",17,"^69",0,"^6Y","^7M","^6:",true,"^M",["^N",["^60",["^N",[[]]]]]],"~$deref-capture",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",46,"^8",8,"^9",46,"^:",21,"^5[",true,"^M",["^N",["^60",["^N",[["~$f","~$r"]]]]],"^Y","Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n  `deref`ed atoms captured during `in-context`, if any differ from the\n  `watching` field of r.  Clears the `dirty?` flag on r.\n\n  Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n  the reaction is also added to the list of watches on each ratoms f derefs."],"^5[",true,"^Q","^3U","^6","reagent/ratom.cljs","^:",21,"^63",["^N",[["~$f","~$r"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^7",46,"^67","^68","^9",46,"^69",2,"^6:",true,"^M",["^N",["^60",["^N",[["~$f","~$r"]]]]],"^Y","Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n  `deref`ed atoms captured during `in-context`, if any differ from the\n  `watching` field of r.  Clears the `dirty?` flag on r.\n\n  Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n  the reaction is also added to the list of watches on each ratoms f derefs."],"~$rea-queue",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",115,"^8",20,"^9",115,"^:",29,"^5[",true],"^5[",true,"^Q","^35","^6","reagent/ratom.cljs","^:",29,"^8",1,"^7",115,"^9",115,"^6Y","^6N"],"~$with-let-values",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",329,"^8",7,"^9",329,"^:",22,"^M",["^N",["^60",["^N",[["^7W"]]]]]],"^Q","^3Z","^6","reagent/ratom.cljs","^:",22,"^63",["^N",[["^7W"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^7",329,"^67",["^I",["^68","~$array"]],"^9",329,"^69",1,"^6:",true,"^M",["^N",["^60",["^N",[["^7W"]]]]]],"~$track!",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",242,"^8",7,"^9",242,"^:",13,"^M",["^N",["^60",["^N",[["~$f","~$&","^6R"]]]]],"^72",["^ ","^66",true,"^73",1,"^69",1,"^63",[["^N",["~$f","^6R"]]],"^M",["^N",[["~$f","~$&","^6R"]]],"^65",["^N",[null]]]],"^Q","^2X","^6","reagent/ratom.cljs","^:",13,"^72",["^ ","^66",true,"^73",1,"^69",1,"^63",[["^N",["~$f","^6R"]]],"^M",["^N",[["~$f","~$&","^6R"]]],"^65",["^N",[null]]],"^63",[["^N",["~$f","^6R"]]],"^64",null,"^73",1,"^65",["^N",[null]],"^8",1,"^66",true,"^74",[["^ ","^73",1,"^66",true,"^6Y","^68"]],"^7",242,"^67","^68","^9",242,"^69",1,"^6:",true,"^M",["^N",[["~$f","~$&","^6R"]]]],"~$*ratom-context*",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",12,"^8",20,"^9",12,"^:",35,"~:dynamic",true,"~:declared",true],"^Q","^3E","^6","reagent/ratom.cljs","^:",35,"^8",1,"^8K",true,"^7",12,"^8L",true,"^9",12,"^6Y","^68"],"~$check-derefs",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",548,"^8",7,"^9",548,"^:",19,"^M",["^N",["^60",["^N",[["~$f"]]]]]],"^Q","^1V","^6","reagent/ratom.cljs","^:",19,"^63",["^N",[["~$f"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^7",548,"^67","~$cljs.core/IVector","^9",548,"^69",1,"^6:",true,"^M",["^N",["^60",["^N",[["~$f"]]]]]],"~$remove-w",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",86,"^8",8,"^9",86,"^:",16,"^5[",true,"^M",["^N",["^60",["^N",[["^76","^7W"]]]]]],"^5[",true,"^Q","^1Z","^6","reagent/ratom.cljs","^:",16,"^63",["^N",[["^76","^7W"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^7",86,"^9",86,"^69",2,"^6:",true,"^M",["^N",["^60",["^N",[["^76","^7W"]]]]]],"~$->Wrapper",["^ ","^5Z",null,"^5",["^ ","^6<",["^I",["^6=","^6>","^6?","^6B","^6C","^3I","^6D"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"^6E","^6F","^7",556,"^9",556,"^M",["^N",["^60",["^N",[["^6I","~$callback","~$changed","^6J"]]]]],"^6K",["^I",["^6=","^6>","^6?","^6B","^6C","^3I","^6D"]],"^Y","Positional factory function for reagent.ratom/Wrapper."],"^6<",["^I",["^6=","^6>","^6?","^6B","^6C","^3I","^6D"]],"^Q","^3G","^6","reagent/ratom.cljs","^:",17,"^63",["^N",[["^6I","^8Q","^8R","^6J"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^6E","^6F","^7",556,"^67","^2V","^9",556,"^69",4,"^6:",true,"^M",["^N",["^60",["^N",[["^6I","^8Q","^8R","^6J"]]]]],"^6K",["^I",["^6=","^6>","^6?","^6B","^6C","^3I","^6D"]],"^Y","Positional factory function for reagent.ratom/Wrapper."],"~$arr-len",["^ ","^5Z",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",26,"^8",16,"^9",26,"^:",23,"^6Y","^7U","^5[",true,"^M",["^N",["^60",["^N",[["~$x"]]]]]],"^5[",true,"^Q","^2<","^6","reagent/ratom.cljs","^:",23,"^63",["^N",[["~$x"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^7",26,"^67","^7U","^9",26,"^69",1,"^6Y","^7U","^6:",true,"^M",["^N",["^60",["^N",[["~$x"]]]]]],"~$->RAtom",["^ ","^5Z",null,"^5",["^ ","^6<",["^I",["^6=","^6>","^6?","^6@","^6B","^6C","^2Q","^6U","^3I","^6D","^6V"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^6E","^6F","^7",127,"^9",127,"^M",["^N",["^60",["^N",[["^6I","^70","^71","^6J"]]]]],"^6K",["^I",["^6=","^6>","^6?","^6@","^6B","^6C","^6U","^3I","^6D","^6V"]],"^Y","Positional factory function for reagent.ratom/RAtom."],"^6<",["^I",["^6=","^6>","^6?","^6@","^6B","^6C","^2Q","^6U","^3I","^6D","^6V"]],"^Q","^24","^6","reagent/ratom.cljs","^:",15,"^63",["^N",[["^6I","^70","^71","^6J"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^6E","^6F","^7",127,"^67","^3R","^9",127,"^69",4,"^6:",true,"^M",["^N",["^60",["^N",[["^6I","^70","^71","^6J"]]]]],"^6K",["^I",["^6=","^6>","^6?","^6@","^6B","^6C","^6U","^3I","^6D","^6V"]],"^Y","Positional factory function for reagent.ratom/RAtom."],"~$->Track",["^ ","^5Z",null,"^5",["^ ","^6<",["^I",["^6?","^6@","^2Q","^3I","^6D"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^6E","^6F","^7",206,"^9",206,"^M",["^N",["^60",["^N",[["~$f","^6R","^V"]]]]],"^6K",["^I",["^6?","^6@","^3I","^6D"]],"^Y","Positional factory function for reagent.ratom/Track."],"^6<",["^I",["^6?","^6@","^2Q","^3I","^6D"]],"^Q","^3B","^6","reagent/ratom.cljs","^:",15,"^63",["^N",[["~$f","^6R","^V"]]],"^64",null,"^65",["^N",[null,null]],"^8",1,"^66",false,"^6E","^6F","^7",206,"^67","^3H","^9",206,"^69",3,"^6:",true,"^M",["^N",["^60",["^N",[["~$f","^6R","^V"]]]]],"^6K",["^I",["^6?","^6@","^3I","^6D"]],"^Y","Positional factory function for reagent.ratom/Track."]],"^1=",["^ ","^T","^T","^F","^F","^15","^15"],"~:cljs.analyzer/constants",["^ ","^1;",["^I",["~:path","~:on-set","^7>","^7<","^7M","^V","^8Q","^5","~:else","^6H","^6R","~:validator","^6J","^70","~:val","^71","^7:","~:no-cache","^6G","^6I","~:auto-run","~:on-dispose","~:f","^6Y","~:mutable","^8R","^7=","^7;","~$f"]],"~:order",["^8[","^6I","^93","^70","^71","^6J","^5","^8Z","^8Y","^92","~:f","~$f","^6R","^V","^91","^8W","^6G","^6H","^8X","^90","^7:","^6Y","^7M","^7;","^7<","^7=","^7>","^8Q","^8R"]],"^1E",["^ ","^1=",["^I",[]],"^1<",["^I",[]]],"^1F",["^ "],"^1G",["^16","^15","^12","^F","^17","^18","^14"]],"^S","^T","~:ns-specs",["^ "],"~:ns-spec-vars",["^I",[]],"~:compiler-options",["^44",[["^97","~:static-fns"],true,["^97","~:shadow-tweaks"],null,["^97","~:source-map-inline"],null,["^97","~:elide-asserts"],false,["^97","~:optimize-constants"],null,["^97","^1L"],null,["^97","~:external-config"],null,["^97","~:tooling-config"],null,["^97","~:emit-constants"],null,["^97","~:load-tests"],null,["^97","~:form-size-threshold"],null,["^97","~:data-readers"],null,["^97","~:infer-externs"],"~:auto",["^97","^1N"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^97","~:fn-invoke-direct"],null,["^97","~:source-map"],"/dev/null"]]]