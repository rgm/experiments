{"version":3,"sources":["rgm/vega.cljc"],"mappings":";AAGA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKA;AAQL,AAAA,AAAME,AACHC;AADH,AAAA,AAES,AAACC,AAAS,AAAAC,AAAA,AAAA,AAAW,AAAAG,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC;AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAAA;AAAA,AAAA,AAAAE,AAAAF,AAAA;AAAA,AAAAA;AAAA,AAAA,AAAAE,AAAAF,AAAA;AAAA,AAAAA;AAAA,AAAA,AAAA,AAAAC,AAAAD,AAAA,AAAAE,AAAAF,AAAA,AAAA,AAAAE,AAAAF,AAAA;AAAX,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAW,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAX,AAAA,AAAAC,AAAAD;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAmDH;AAFtiCE","names":["rgm.vega/bar-data","js/Error","rgm.vega/bar-chart","data","cljs.spec.alpha.valid_QMARK_","cljs.spec.alpha.every_impl","G__27316","cljs.core/coll?","cljs.spec.alpha/map-spec-impl","G__27317","cljs.core/map?","cljs.core/contains?"],"sourcesContent":["(ns rgm.vega\n  (:require [clojure.spec.alpha :as s]))\n\n(def bar-data\n  [{:category \"A\" :amount 28}\n   {:category \"B\" :amount 55}\n   {:category \"C\" :amount 43}\n   {:category \"D\" :amount 91}\n   {:category \"E\" :amount 81}\n   {:category \"F\" :amount 53}])\n\n(defn bar-chart\n  [data]\n  {:pre [(s/valid? (s/coll-of (s/keys :req-un [::category ::amount])) data)]}\n  {:$schema \"https://vega.github.io/schema/vega/v5.json\"\n   :autosize \"fit\"\n   :signals [{:name \"width\" :update \"containerSize()[0]\"}\n             {:name \"height\" :update \"containerSize()[1]\"}]\n   :data [{:name \"table\" :values data}]\n   :scales [{:name \"xscale\"\n             :type \"band\"\n             :domain {:data \"table\" :field :category}\n             :range \"width\"\n             :padding 0.1\n             :round true}\n            {:name \"yscale\"\n             :domain {:data \"table\" :field \"amount\"}\n             :range \"height\"\n             :nice true}]\n   :axes [{:orient \"bottom\" :scale \"xscale\"} {:orient \"left\" :scale \"yscale\"}]\n   :marks [{:type \"rect\"\n            :from {:data \"table\"}\n            :encode {:enter {:x {:scale \"xscale\" :field \"category\"}\n                             :width {:scale \"xscale\" :band 1}\n                             :y {:scale \"yscale\" :field \"amount\"}\n                             :y2 {:scale \"yscale\" :value 0}}\n                     :update {:fill {:value \"steelblue\"}}}}]})\n\n"]}