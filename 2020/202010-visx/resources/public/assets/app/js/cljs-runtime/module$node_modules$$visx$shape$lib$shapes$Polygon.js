shadow$provide.module$node_modules$$visx$shape$lib$shapes$Polygon=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i],key;for(key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target};return _extends.apply(this,arguments)}function _objectWithoutPropertiesLoose(source,
excluded){if(null==source)return{};var target={},sourceKeys=Object.keys(source),i;for(i=0;i<sourceKeys.length;i++){var key=sourceKeys[i];0<=excluded.indexOf(key)||(target[key]=source[key])}return target}exports.__esModule=!0;exports.default=function(_ref3){var sides=_ref3.sides,_ref3$size=_ref3.size;_ref3$size=void 0===_ref3$size?25:_ref3$size;var _ref3$center=_ref3.center;_ref3$center=void 0===_ref3$center?DEFAULT_CENTER:_ref3$center;var _ref3$rotate=_ref3.rotate,rotate=void 0===_ref3$rotate?0:_ref3$rotate;
_ref3$rotate=_ref3.className;var children=_ref3.children,innerRef=_ref3.innerRef;_ref3=_objectWithoutPropertiesLoose(_ref3,"sides size center rotate className children innerRef".split(" "));sides=getPoints({sides,size:_ref3$size,center:_ref3$center,rotate}).map(function(_ref4){return[_ref4.x,_ref4.y]});return children?_react.default.createElement(_react.default.Fragment,null,children({points:sides})):_react.default.createElement("polygon",_extends({ref:innerRef,className:(0,_classnames.default)("visx-polygon",
_ref3$rotate),points:sides.join(" ")},_ref3))};exports.getPoints=exports.getPoint=void 0;var _react=_interopRequireDefault(require("module$node_modules$react$index")),_classnames=_interopRequireDefault(require("module$node_modules$classnames$index")),_trigonometry=require("module$node_modules$$visx$shape$lib$util$trigonometry"),DEFAULT_CENTER={x:0,y:0},getPoint=function(_ref){var size=_ref.size,_ref$center=_ref.center;_ref$center=void 0===_ref$center?DEFAULT_CENTER:_ref$center;var _ref$rotate=_ref.rotate;
_ref=360/_ref.sides*_ref.side-(void 0===_ref$rotate?0:_ref$rotate);_ref=(0,_trigonometry.degreesToRadians)(_ref);return{x:_ref$center.x+size*Math.cos(_ref),y:_ref$center.y+size*Math.sin(_ref)}};exports.getPoint=getPoint;var getPoints=function(_ref2){var sides=_ref2.sides,size=_ref2.size,center=_ref2.center,rotate=_ref2.rotate;return Array(sides).fill(0).map(function(_,side){return getPoint({sides,size,center,rotate,side})})};exports.getPoints=getPoints}
//# sourceMappingURL=module$node_modules$$visx$shape$lib$shapes$Polygon.js.map
