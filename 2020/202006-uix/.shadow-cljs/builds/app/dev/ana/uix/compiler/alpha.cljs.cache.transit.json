["^ ","~:output",["^ ","~:js","goog.provide('uix.compiler.alpha');\ngoog.require('cljs.core');\nvar module$node_modules$react$index=shadow.js.require(\"module$node_modules$react$index\", {});\ngoog.require('goog.object');\ngoog.require('uix.hooks.alpha');\ngoog.require('clojure.string');\ngoog.require('cljs_bean.core');\ngoog.require('uix.lib');\nuix.compiler.alpha._STAR_default_compare_args_STAR_ = (function uix$compiler$alpha$_STAR_default_compare_args_STAR_(p1__48642_SHARP_,p2__48643_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p1__48642_SHARP_.argv,p2__48643_SHARP_.argv);\n});\nuix.compiler.alpha.unwrap_ref = (function uix$compiler$alpha$unwrap_ref(_ref){\nif((((!((_ref == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === _ref.uix$hooks$alpha$IRef$))))?true:false):false)){\nreturn _ref.uix$hooks$alpha$IRef$unwrap$arity$1(null);\n} else {\nreturn _ref;\n}\n});\nuix.compiler.alpha.js_val_QMARK_ = (function uix$compiler$alpha$js_val_QMARK_(x){\nreturn (!((\"object\" === goog.typeOf(x))));\n});\nuix.compiler.alpha.named_QMARK_ = (function uix$compiler$alpha$named_QMARK_(x){\nreturn (((x instanceof cljs.core.Keyword)) || ((x instanceof cljs.core.Symbol)));\n});\nuix.compiler.alpha.hiccup_tag_QMARK_ = (function uix$compiler$alpha$hiccup_tag_QMARK_(x){\nreturn (x instanceof cljs.core.Keyword);\n});\nuix.compiler.alpha.prop_name_cache = ({\"class\": \"className\", \"for\": \"htmlFor\", \"charset\": \"charSet\"});\nuix.compiler.alpha.custom_prop_name_cache = ({});\nuix.compiler.alpha.tag_name_cache = ({});\nuix.compiler.alpha.transform_fns = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentHashSet.EMPTY);\nuix.compiler.alpha.add_transform_fn = (function uix$compiler$alpha$add_transform_fn(f){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(uix.compiler.alpha.transform_fns,cljs.core.conj,f);\n});\nuix.compiler.alpha.cc_regexp = (new RegExp(\"-(\\\\w)\",\"g\"));\nuix.compiler.alpha.cc_fn = (function uix$compiler$alpha$cc_fn(s){\nreturn clojure.string.upper_case((s[(1)]));\n});\nuix.compiler.alpha.dash_to_camel = (function uix$compiler$alpha$dash_to_camel(name_str){\nif(((clojure.string.starts_with_QMARK_(name_str,\"aria-\")) || (clojure.string.starts_with_QMARK_(name_str,\"data-\")))){\nreturn name_str;\n} else {\nreturn name_str.replace(uix.compiler.alpha.cc_regexp,uix.compiler.alpha.cc_fn);\n}\n});\nuix.compiler.alpha.cached_prop_name = (function uix$compiler$alpha$cached_prop_name(k){\nif(uix.compiler.alpha.named_QMARK_(k)){\nvar name_str = k.cljs$core$INamed$_name$arity$1(null);\nvar temp__5737__auto__ = (uix.compiler.alpha.prop_name_cache[name_str]);\nif((temp__5737__auto__ == null)){\nvar v = uix.compiler.alpha.dash_to_camel(name_str);\n(uix.compiler.alpha.prop_name_cache[name_str] = v);\n\nreturn v;\n} else {\nvar k_SINGLEQUOTE_ = temp__5737__auto__;\nreturn k_SINGLEQUOTE_;\n}\n} else {\nreturn k;\n}\n});\nuix.compiler.alpha.cached_custom_prop_name = (function uix$compiler$alpha$cached_custom_prop_name(k){\nif(uix.compiler.alpha.named_QMARK_(k)){\nvar name_str = k.cljs$core$INamed$_name$arity$1(null);\nvar temp__5737__auto__ = (uix.compiler.alpha.custom_prop_name_cache[name_str]);\nif((temp__5737__auto__ == null)){\nvar v = uix.compiler.alpha.dash_to_camel(name_str);\n(uix.compiler.alpha.custom_prop_name_cache[name_str] = v);\n\nreturn v;\n} else {\nvar k_SINGLEQUOTE_ = temp__5737__auto__;\nreturn k_SINGLEQUOTE_;\n}\n} else {\nreturn k;\n}\n});\nuix.compiler.alpha.convert_interop_prop_value = (function uix$compiler$alpha$convert_interop_prop_value(k,v){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,new cljs.core.Keyword(null,\"style\",\"style\",-496642736))){\nif(cljs.core.vector_QMARK_(v)){\nreturn v.cljs$core$IReduce$_reduce$arity$3(null,(function (a,v__$1){\na.push((uix.compiler.alpha.convert_prop_value_shallow.cljs$core$IFn$_invoke$arity$1 ? uix.compiler.alpha.convert_prop_value_shallow.cljs$core$IFn$_invoke$arity$1(v__$1) : uix.compiler.alpha.convert_prop_value_shallow.call(null,v__$1)));\n\nreturn a;\n}),[]);\n} else {\nreturn (uix.compiler.alpha.convert_prop_value_shallow.cljs$core$IFn$_invoke$arity$1 ? uix.compiler.alpha.convert_prop_value_shallow.cljs$core$IFn$_invoke$arity$1(v) : uix.compiler.alpha.convert_prop_value_shallow.call(null,v));\n}\n} else {\nif((v instanceof cljs.core.Keyword)){\nreturn v.cljs$core$INamed$_name$arity$1(null);\n} else {\nreturn v;\n\n}\n}\n});\nuix.compiler.alpha.kv_conv = (function uix$compiler$alpha$kv_conv(o,k,v){\ngoog.object.set(o,uix.compiler.alpha.cached_prop_name(k),(uix.compiler.alpha.convert_prop_value.cljs$core$IFn$_invoke$arity$1 ? uix.compiler.alpha.convert_prop_value.cljs$core$IFn$_invoke$arity$1(v) : uix.compiler.alpha.convert_prop_value.call(null,v)));\n\nreturn o;\n});\nuix.compiler.alpha.kv_conv_shallow = (function uix$compiler$alpha$kv_conv_shallow(o,k,v){\ngoog.object.set(o,uix.compiler.alpha.cached_prop_name(k),uix.compiler.alpha.convert_interop_prop_value(k,v));\n\nreturn o;\n});\nuix.compiler.alpha.custom_kv_conv = (function uix$compiler$alpha$custom_kv_conv(o,k,v){\ngoog.object.set(o,uix.compiler.alpha.cached_custom_prop_name(k),(uix.compiler.alpha.convert_prop_value.cljs$core$IFn$_invoke$arity$1 ? uix.compiler.alpha.convert_prop_value.cljs$core$IFn$_invoke$arity$1(v) : uix.compiler.alpha.convert_prop_value.call(null,v)));\n\nreturn o;\n});\nuix.compiler.alpha.try_get_key = (function uix$compiler$alpha$try_get_key(x){\ntry{return cljs.core.get.cljs$core$IFn$_invoke$arity$2(x,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\n}catch (e48682){var e = e48682;\nreturn null;\n}});\nuix.compiler.alpha.get_key = (function uix$compiler$alpha$get_key(x){\nif(cljs.core.map_QMARK_(x)){\nreturn uix.compiler.alpha.try_get_key(x);\n} else {\nreturn null;\n}\n});\nuix.compiler.alpha.convert_prop_value = (function uix$compiler$alpha$convert_prop_value(x){\nif(uix.compiler.alpha.js_val_QMARK_(x)){\nreturn x;\n} else {\nif((x instanceof cljs.core.Keyword)){\nreturn x.cljs$core$INamed$_name$arity$1(null);\n} else {\nif(cljs.core.map_QMARK_(x)){\nreturn cljs.core.reduce_kv(uix.compiler.alpha.kv_conv,({}),x);\n} else {\nif(cljs.core.coll_QMARK_(x)){\nreturn cljs.core.clj__GT_js(x);\n} else {\nif(cljs.core.ifn_QMARK_(x)){\nreturn (function() { \nvar G__48815__delegate = function (rest__48688_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(x,rest__48688_SHARP_);\n};\nvar G__48815 = function (var_args){\nvar rest__48688_SHARP_ = null;\nif (arguments.length > 0) {\nvar G__48816__i = 0, G__48816__a = new Array(arguments.length -  0);\nwhile (G__48816__i < G__48816__a.length) {G__48816__a[G__48816__i] = arguments[G__48816__i + 0]; ++G__48816__i;}\n  rest__48688_SHARP_ = new cljs.core.IndexedSeq(G__48816__a,0,null);\n} \nreturn G__48815__delegate.call(this,rest__48688_SHARP_);};\nG__48815.cljs$lang$maxFixedArity = 0;\nG__48815.cljs$lang$applyTo = (function (arglist__48817){\nvar rest__48688_SHARP_ = cljs.core.seq(arglist__48817);\nreturn G__48815__delegate(rest__48688_SHARP_);\n});\nG__48815.cljs$core$IFn$_invoke$arity$variadic = G__48815__delegate;\nreturn G__48815;\n})()\n;\n} else {\nreturn cljs.core.clj__GT_js(x);\n\n}\n}\n}\n}\n}\n});\nuix.compiler.alpha.convert_prop_value_shallow = (function uix$compiler$alpha$convert_prop_value_shallow(x){\nif(cljs.core.map_QMARK_(x)){\nreturn cljs.core.reduce_kv(uix.compiler.alpha.kv_conv_shallow,({}),x);\n} else {\nreturn x;\n}\n});\nuix.compiler.alpha.convert_custom_prop_value = (function uix$compiler$alpha$convert_custom_prop_value(x){\nif(uix.compiler.alpha.js_val_QMARK_(x)){\nreturn x;\n} else {\nif((x instanceof cljs.core.Keyword)){\nreturn x.cljs$core$INamed$_name$arity$1(null);\n} else {\nif(cljs.core.map_QMARK_(x)){\nreturn cljs.core.reduce_kv(uix.compiler.alpha.custom_kv_conv,({}),x);\n} else {\nif(cljs.core.coll_QMARK_(x)){\nreturn cljs.core.clj__GT_js(x);\n} else {\nif(cljs.core.ifn_QMARK_(x)){\nreturn (function() { \nvar G__48819__delegate = function (rest__48709_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(x,rest__48709_SHARP_);\n};\nvar G__48819 = function (var_args){\nvar rest__48709_SHARP_ = null;\nif (arguments.length > 0) {\nvar G__48820__i = 0, G__48820__a = new Array(arguments.length -  0);\nwhile (G__48820__i < G__48820__a.length) {G__48820__a[G__48820__i] = arguments[G__48820__i + 0]; ++G__48820__i;}\n  rest__48709_SHARP_ = new cljs.core.IndexedSeq(G__48820__a,0,null);\n} \nreturn G__48819__delegate.call(this,rest__48709_SHARP_);};\nG__48819.cljs$lang$maxFixedArity = 0;\nG__48819.cljs$lang$applyTo = (function (arglist__48821){\nvar rest__48709_SHARP_ = cljs.core.seq(arglist__48821);\nreturn G__48819__delegate(rest__48709_SHARP_);\n});\nG__48819.cljs$core$IFn$_invoke$arity$variadic = G__48819__delegate;\nreturn G__48819;\n})()\n;\n} else {\nreturn cljs.core.clj__GT_js(x);\n\n}\n}\n}\n}\n}\n});\nuix.compiler.alpha.class_names_coll = (function uix$compiler$alpha$class_names_coll(class$){\nvar classes = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (a,c){\nif(c){\na.push((((c instanceof cljs.core.Keyword))?c.cljs$core$INamed$_name$arity$1(null):c));\n} else {\n}\n\nreturn a;\n}),[],class$);\nif((classes.length > (0))){\nreturn classes.join(\" \");\n} else {\nreturn null;\n}\n});\nuix.compiler.alpha.class_names_map = (function uix$compiler$alpha$class_names_map(class$){\nvar classes = cljs.core.reduce_kv((function (a,b,c){\nif(c){\na.push((((b instanceof cljs.core.Keyword))?b.cljs$core$INamed$_name$arity$1(null):b));\n} else {\n}\n\nreturn a;\n}),[],class$);\nif((classes.length > (0))){\nreturn classes.join(\" \");\n} else {\nreturn null;\n}\n});\nuix.compiler.alpha.class_names = (function uix$compiler$alpha$class_names(var_args){\nvar G__48777 = arguments.length;\nswitch (G__48777) {\ncase 0:\nreturn uix.compiler.alpha.class_names.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn uix.compiler.alpha.class_names.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn uix.compiler.alpha.class_names.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__4810__auto__ = [];\nvar len__4789__auto___48823 = arguments.length;\nvar i__4790__auto___48824 = (0);\nwhile(true){\nif((i__4790__auto___48824 < len__4789__auto___48823)){\nargs_arr__4810__auto__.push((arguments[i__4790__auto___48824]));\n\nvar G__48825 = (i__4790__auto___48824 + (1));\ni__4790__auto___48824 = G__48825;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4811__auto__ = (new cljs.core.IndexedSeq(args_arr__4810__auto__.slice((2)),(0),null));\nreturn uix.compiler.alpha.class_names.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4811__auto__);\n\n}\n});\n\n(uix.compiler.alpha.class_names.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn null;\n}));\n\n(uix.compiler.alpha.class_names.cljs$core$IFn$_invoke$arity$1 = (function (class$){\nif(cljs.core.map_QMARK_(class$)){\nreturn uix.compiler.alpha.class_names_map(class$);\n} else {\nif(((cljs.core.array_QMARK_(class$)) || (cljs.core.coll_QMARK_(class$)))){\nreturn uix.compiler.alpha.class_names_coll(class$);\n} else {\nif((class$ instanceof cljs.core.Keyword)){\nreturn class$.cljs$core$INamed$_name$arity$1(null);\n} else {\nreturn class$;\n\n}\n}\n}\n}));\n\n(uix.compiler.alpha.class_names.cljs$core$IFn$_invoke$arity$2 = (function (a,b){\nif(a){\nif(b){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(uix.compiler.alpha.class_names.cljs$core$IFn$_invoke$arity$1(a)),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(uix.compiler.alpha.class_names.cljs$core$IFn$_invoke$arity$1(b))].join('');\n} else {\nreturn uix.compiler.alpha.class_names.cljs$core$IFn$_invoke$arity$1(a);\n}\n} else {\nreturn uix.compiler.alpha.class_names.cljs$core$IFn$_invoke$arity$1(b);\n}\n}));\n\n(uix.compiler.alpha.class_names.cljs$core$IFn$_invoke$arity$variadic = (function (a,b,rst){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(uix.compiler.alpha.class_names,uix.compiler.alpha.class_names.cljs$core$IFn$_invoke$arity$2(a,b),rst);\n}));\n\n/** @this {Function} */\n(uix.compiler.alpha.class_names.cljs$lang$applyTo = (function (seq48770){\nvar G__48771 = cljs.core.first(seq48770);\nvar seq48770__$1 = cljs.core.next(seq48770);\nvar G__48772 = cljs.core.first(seq48770__$1);\nvar seq48770__$2 = cljs.core.next(seq48770__$1);\nvar self__4776__auto__ = this;\nreturn self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__48771,G__48772,seq48770__$2);\n}));\n\n(uix.compiler.alpha.class_names.cljs$lang$maxFixedArity = (2));\n\n/**\n * Takes the id and class from tag keyword, and adds them to the\n *   other props. Parsed tag is JS object with :id and :class properties.\n */\nuix.compiler.alpha.set_id_class = (function uix$compiler$alpha$set_id_class(props,id_class){\nvar id = (id_class[(1)]);\nvar classes = (id_class[(2)]);\nvar G__48778 = props;\nvar G__48778__$1 = (((((!((id == null)))) && ((cljs.core.get.cljs$core$IFn$_invoke$arity$2(props,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092)) == null))))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__48778,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),id):G__48778);\nif((((!((classes == null)))) && ((classes.length > (0))))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__48778__$1,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),uix.compiler.alpha.class_names.cljs$core$IFn$_invoke$arity$2(classes,cljs.core.get.cljs$core$IFn$_invoke$arity$2(props,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996))));\n} else {\nreturn G__48778__$1;\n}\n});\nuix.compiler.alpha.convert_props = (function uix$compiler$alpha$convert_props(props,id_class,shallow_QMARK_){\nvar class$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(props,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996));\nvar props__$1 = uix.compiler.alpha.set_id_class((function (){var G__48779 = props;\nif(cljs.core.truth_(class$)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__48779,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),uix.compiler.alpha.class_names.cljs$core$IFn$_invoke$arity$1(class$));\n} else {\nreturn G__48779;\n}\n})(),id_class);\nif(cljs.core.truth_((id_class[(3)]))){\nreturn uix.compiler.alpha.convert_custom_prop_value(props__$1);\n} else {\nif(shallow_QMARK_){\nreturn uix.compiler.alpha.convert_prop_value_shallow(props__$1);\n} else {\nreturn uix.compiler.alpha.convert_prop_value(props__$1);\n\n}\n}\n});\nuix.compiler.alpha.re_tag = /[#.]?[^#.]+/;\nuix.compiler.alpha.parse_tag = (function uix$compiler$alpha$parse_tag(tag){\nvar matches = uix.lib.re_seq_STAR_(uix.compiler.alpha.re_tag,tag);\nvar tag__$1 = \"div\";\nvar id = null;\nvar classes = [];\nwhile(true){\nvar val = (matches[(0)]);\nvar nval = matches.slice((1));\nif(val){\nif(((val[(0)]) === \"#\")){\nvar G__48836 = nval;\nvar G__48837 = tag__$1;\nvar G__48838 = val.slice((1));\nvar G__48839 = classes;\nmatches = G__48836;\ntag__$1 = G__48837;\nid = G__48838;\nclasses = G__48839;\ncontinue;\n} else {\nif(((val[(0)]) === \".\")){\nvar G__48841 = nval;\nvar G__48842 = tag__$1;\nvar G__48843 = id;\nvar G__48844 = classes.concat([val.slice((1))]);\nmatches = G__48841;\ntag__$1 = G__48842;\nid = G__48843;\nclasses = G__48844;\ncontinue;\n} else {\nvar G__48846 = nval;\nvar G__48847 = val;\nvar G__48848 = id;\nvar G__48849 = classes;\nmatches = G__48846;\ntag__$1 = G__48847;\nid = G__48848;\nclasses = G__48849;\ncontinue;\n\n}\n}\n} else {\nreturn [tag__$1,id,classes,clojure.string.includes_QMARK_(tag__$1,\"-\")];\n}\nbreak;\n}\n});\nuix.compiler.alpha.cached_parse = (function uix$compiler$alpha$cached_parse(x){\nvar temp__5737__auto__ = (uix.compiler.alpha.tag_name_cache[x]);\nif((temp__5737__auto__ == null)){\nvar v = uix.compiler.alpha.parse_tag(x);\n(uix.compiler.alpha.tag_name_cache[x] = v);\n\nreturn v;\n} else {\nvar s = temp__5737__auto__;\nreturn s;\n}\n});\nuix.compiler.alpha.key_from_vec = (function uix$compiler$alpha$key_from_vec(v){\nvar temp__5737__auto__ = uix.compiler.alpha.get_key(cljs.core._meta(v));\nif((temp__5737__auto__ == null)){\nreturn uix.compiler.alpha.get_key(cljs.core._nth(v,(1),null));\n} else {\nvar k = temp__5737__auto__;\nreturn k;\n}\n});\nuix.compiler.alpha.native_element = (function uix$compiler$alpha$native_element(parsed,argv,first_el){\nvar component = (parsed[(0)]);\nvar props = argv.cljs$core$IIndexed$_nth$arity$3(null,first_el,null);\nvar props_QMARK_ = (((props == null)) || (cljs.core.map_QMARK_(props)));\nvar props__$1 = ((props_QMARK_)?cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p,f){\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p) : f.call(null,p));\n}),props,cljs.core.deref(uix.compiler.alpha.transform_fns)):props);\nvar js_props = (function (){var or__4185__auto__ = uix.compiler.alpha.convert_props(((props_QMARK_)?props__$1:null),parsed,false);\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nreturn ({});\n}\n})();\nvar first_child = (first_el + ((props_QMARK_)?(1):(0)));\nvar temp__5739__auto___48852 = uix.compiler.alpha.get_key(argv.cljs$core$IMeta$_meta$arity$1(null));\nif((temp__5739__auto___48852 == null)){\n} else {\nvar key_48855 = temp__5739__auto___48852;\ngoog.object.set(js_props,\"key\",key_48855);\n}\n\nvar temp__5739__auto___48856 = uix.compiler.alpha.unwrap_ref(cljs.core.get.cljs$core$IFn$_invoke$arity$2(props__$1,new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967)));\nif((temp__5739__auto___48856 == null)){\n} else {\nvar _ref_48858 = temp__5739__auto___48856;\ngoog.object.set(js_props,\"ref\",_ref_48858);\n}\n\nreturn (uix.compiler.alpha.make_element.cljs$core$IFn$_invoke$arity$4 ? uix.compiler.alpha.make_element.cljs$core$IFn$_invoke$arity$4(argv,component,js_props,first_child) : uix.compiler.alpha.make_element.call(null,argv,component,js_props,first_child));\n});\nuix.compiler.alpha.fragment_element = (function uix$compiler$alpha$fragment_element(argv){\nvar props = argv.cljs$core$IIndexed$_nth$arity$3(null,(1),null);\nvar props_QMARK_ = (((props == null)) || (cljs.core.map_QMARK_(props)));\nvar js_props = (function (){var or__4185__auto__ = uix.compiler.alpha.convert_prop_value(((props_QMARK_)?props:null));\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nreturn ({});\n}\n})();\nvar first_child = ((1) + ((props_QMARK_)?(1):(0)));\nvar temp__5739__auto___48862 = uix.compiler.alpha.key_from_vec(argv);\nif((temp__5739__auto___48862 == null)){\n} else {\nvar key_48863 = temp__5739__auto___48862;\ngoog.object.set(js_props,\"key\",key_48863);\n}\n\nreturn (uix.compiler.alpha.make_element.cljs$core$IFn$_invoke$arity$4 ? uix.compiler.alpha.make_element.cljs$core$IFn$_invoke$arity$4(argv,module$node_modules$react$index.Fragment,js_props,first_child) : uix.compiler.alpha.make_element.call(null,argv,module$node_modules$react$index.Fragment,js_props,first_child));\n});\nuix.compiler.alpha.suspense_element = (function uix$compiler$alpha$suspense_element(argv){\nvar props = argv.cljs$core$IIndexed$_nth$arity$3(null,(1),null);\nvar props_QMARK_ = (((props == null)) || (cljs.core.map_QMARK_(props)));\nvar vec__48792 = ((props_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__48795 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(props,new cljs.core.Keyword(null,\"fallback\",\"fallback\",761637929));\nreturn (uix.compiler.alpha.as_element.cljs$core$IFn$_invoke$arity$1 ? uix.compiler.alpha.as_element.cljs$core$IFn$_invoke$arity$1(G__48795) : uix.compiler.alpha.as_element.call(null,G__48795));\n})(),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(props,new cljs.core.Keyword(null,\"fallback\",\"fallback\",761637929))], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,props], null));\nvar fallback = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48792,(0),null);\nvar props__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48792,(1),null);\nvar js_props = (function (){var or__4185__auto__ = uix.compiler.alpha.convert_prop_value(((props_QMARK_)?props__$1:null));\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nreturn ({});\n}\n})();\nvar first_child = ((1) + ((props_QMARK_)?(1):(0)));\nif(fallback){\ngoog.object.set(js_props,\"fallback\",fallback);\n} else {\n}\n\nvar temp__5739__auto___48867 = uix.compiler.alpha.key_from_vec(argv);\nif((temp__5739__auto___48867 == null)){\n} else {\nvar key_48869 = temp__5739__auto___48867;\ngoog.object.set(js_props,\"key\",key_48869);\n}\n\nreturn (uix.compiler.alpha.make_element.cljs$core$IFn$_invoke$arity$4 ? uix.compiler.alpha.make_element.cljs$core$IFn$_invoke$arity$4(argv,module$node_modules$react$index.Suspense,js_props,first_child) : uix.compiler.alpha.make_element.call(null,argv,module$node_modules$react$index.Suspense,js_props,first_child));\n});\nuix.compiler.alpha.portal_element = (function uix$compiler$alpha$portal_element(argv){\nconsole.warn(\"React portal Hiccup syntax :-> is deprecated, use uix.dom.alpha/create-portal instead\");\n\nvar child = argv.cljs$core$IIndexed$_nth$arity$3(null,(1),null);\nvar target = argv.cljs$core$IIndexed$_nth$arity$3(null,(2),null);\nvar node = ((((typeof target === 'string') || ((target instanceof cljs.core.Keyword))))?document.querySelector(cljs.core.name(target)):target);\nreturn ReactDOM.createPortal((uix.compiler.alpha.as_element.cljs$core$IFn$_invoke$arity$1 ? uix.compiler.alpha.as_element.cljs$core$IFn$_invoke$arity$1(child) : uix.compiler.alpha.as_element.call(null,child)),node);\n});\nuix.compiler.alpha.interop_element = (function uix$compiler$alpha$interop_element(argv){\nvar tag = argv.cljs$core$IIndexed$_nth$arity$3(null,(1),null);\nvar parsed = [tag,null,null];\nvar first_el = (2);\nvar props = argv.cljs$core$IIndexed$_nth$arity$3(null,first_el,null);\nvar props_QMARK_ = (((props == null)) || (cljs.core.map_QMARK_(props)));\nvar props__$1 = ((props_QMARK_)?cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p,f){\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p) : f.call(null,p));\n}),props,cljs.core.deref(uix.compiler.alpha.transform_fns)):props);\nvar js_props = (function (){var or__4185__auto__ = uix.compiler.alpha.convert_props(((props_QMARK_)?props__$1:null),parsed,true);\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nreturn ({});\n}\n})();\nvar first_child = (first_el + ((props_QMARK_)?(1):(0)));\nvar temp__5739__auto___48878 = uix.compiler.alpha.get_key(argv.cljs$core$IMeta$_meta$arity$1(null));\nif((temp__5739__auto___48878 == null)){\n} else {\nvar key_48881 = temp__5739__auto___48878;\ngoog.object.set(js_props,\"key\",key_48881);\n}\n\nvar temp__5739__auto___48882 = uix.compiler.alpha.unwrap_ref(cljs.core.get.cljs$core$IFn$_invoke$arity$2(props__$1,new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967)));\nif((temp__5739__auto___48882 == null)){\n} else {\nvar _ref_48883 = temp__5739__auto___48882;\ngoog.object.set(js_props,\"ref\",_ref_48883);\n}\n\nreturn (uix.compiler.alpha.make_element.cljs$core$IFn$_invoke$arity$4 ? uix.compiler.alpha.make_element.cljs$core$IFn$_invoke$arity$4(argv,tag,js_props,first_child) : uix.compiler.alpha.make_element.call(null,argv,tag,js_props,first_child));\n});\nuix.compiler.alpha.cached_react_fn = (function uix$compiler$alpha$cached_react_fn(f){\nif(f.compiled_QMARK_){\nreturn f.cljsReactCompiled;\n} else {\nreturn f.cljsReact;\n}\n});\nuix.compiler.alpha.cache_react_fn = (function uix$compiler$alpha$cache_react_fn(f,rf){\nif(f.compiled_QMARK_){\nreturn (f.cljsReactCompiled = rf);\n} else {\nreturn (f.cljsReact = rf);\n}\n});\nuix.compiler.alpha.symbol_for = (function uix$compiler$alpha$symbol_for(s){\nreturn Symbol.for(s);\n});\nuix.compiler.alpha.lazy_sym = uix.compiler.alpha.symbol_for(\"react.lazy\");\nuix.compiler.alpha.memo_sym = uix.compiler.alpha.symbol_for(\"react.memo\");\nuix.compiler.alpha.lazy_QMARK_ = (function uix$compiler$alpha$lazy_QMARK_(t){\nreturn (uix.compiler.alpha.lazy_sym === (t[\"$$typeof\"]));\n});\nuix.compiler.alpha.memo_QMARK_ = (function uix$compiler$alpha$memo_QMARK_(t){\nreturn (uix.compiler.alpha.memo_sym === (t[\"$$typeof\"]));\n});\nuix.compiler.alpha.react_type_QMARK_ = (function uix$compiler$alpha$react_type_QMARK_(t){\nreturn ((uix.compiler.alpha.lazy_QMARK_(t)) || (uix.compiler.alpha.memo_QMARK_(t)));\n});\nuix.compiler.alpha.default_format_display_name = (function uix$compiler$alpha$default_format_display_name(s){\nvar parts = s.split(/\\$/);\nvar last_idx = (parts.length - (1));\nvar name_part = (parts[last_idx]);\nif(((1) === parts.length)){\nreturn cljs.core.demunge(name_part);\n} else {\nreturn cljs.core.demunge([parts.slice((0),last_idx).join(\".\"),\"/\",name_part].join(''));\n}\n});\nuix.compiler.alpha._STAR_format_display_name_STAR_ = uix.compiler.alpha.default_format_display_name;\nuix.compiler.alpha.format_display_name = (function uix$compiler$alpha$format_display_name(s){\nif(cljs.core.fn_QMARK_(uix.compiler.alpha._STAR_format_display_name_STAR_)){\nreturn uix.compiler.alpha._STAR_format_display_name_STAR_.call(null,s);\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"unexpected uix.compiler.alpha/*format-display-name* is not bound to a function\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"bound-value\",\"bound-value\",559826825),uix.compiler.alpha._STAR_format_display_name_STAR_,new cljs.core.Keyword(null,\"value-type\",\"value-type\",576005757),goog.typeOf(uix.compiler.alpha._STAR_format_display_name_STAR_)], null));\n}\n});\nuix.compiler.alpha.effective_component_name = (function uix$compiler$alpha$effective_component_name(f){\nvar or__4185__auto__ = (function (){var temp__5739__auto__ = f.displayName;\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar display_name = temp__5739__auto__;\nif(typeof display_name === 'string'){\nreturn display_name;\n} else {\nreturn null;\n}\n}\n})();\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nvar temp__5739__auto__ = f.name;\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar name = temp__5739__auto__;\nif(typeof name === 'string'){\nreturn name;\n} else {\nreturn null;\n}\n}\n}\n});\nuix.compiler.alpha.with_name = (function uix$compiler$alpha$with_name(f,rf,rf_memo){\nvar temp__5735__auto__ = uix.compiler.alpha.effective_component_name(f);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar component_name = temp__5735__auto__;\nvar temp__5739__auto__ = uix.compiler.alpha.format_display_name(component_name);\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar display_name = temp__5739__auto__;\n(rf.displayName = display_name);\n\nif(f.uix_no_memo){\nreturn null;\n} else {\nreturn (rf_memo.displayName = [\"memo(\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(display_name),\")\"].join(''));\n}\n}\n} else {\nreturn null;\n}\n});\nuix.compiler.alpha.fn_to_react_fn = (function uix$compiler$alpha$fn_to_react_fn(f){\nif(uix.compiler.alpha.react_type_QMARK_(f)){\nreturn f;\n} else {\nvar rf = (function (p1__48798_SHARP_){\nvar argv = p1__48798_SHARP_.argv;\nvar G__48800 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(argv.cljs$core$IIndexed$_nth$arity$2(null,(0)),cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(argv,(1)));\nreturn (uix.compiler.alpha.as_element.cljs$core$IFn$_invoke$arity$1 ? uix.compiler.alpha.as_element.cljs$core$IFn$_invoke$arity$1(G__48800) : uix.compiler.alpha.as_element.call(null,G__48800));\n});\nvar rf_memo = (((!(f.uix_no_memo)))?module$node_modules$react$index.memo(rf,uix.compiler.alpha._STAR_default_compare_args_STAR_):rf);\nif(((goog.DEBUG) && ((typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined')))){\n(rf.uixf = f);\n} else {\n}\n\nif(goog.DEBUG){\nuix.compiler.alpha.with_name(f,rf,rf_memo);\n} else {\n}\n\nuix.compiler.alpha.cache_react_fn(f,rf_memo);\n\nreturn rf_memo;\n}\n});\nuix.compiler.alpha.as_lazy_component = (function uix$compiler$alpha$as_lazy_component(f){\nvar temp__5737__auto__ = uix.compiler.alpha.cached_react_fn(f);\nif((temp__5737__auto__ == null)){\nvar rf = (function (p1__48802_SHARP_){\nvar G__48803 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(p1__48802_SHARP_.argv,(1)));\nreturn (uix.compiler.alpha.as_element.cljs$core$IFn$_invoke$arity$1 ? uix.compiler.alpha.as_element.cljs$core$IFn$_invoke$arity$1(G__48803) : uix.compiler.alpha.as_element.call(null,G__48803));\n});\nvar rf_memo = (((!(f.uix_no_memo)))?module$node_modules$react$index.memo(rf,uix.compiler.alpha._STAR_default_compare_args_STAR_):rf);\nif(((goog.DEBUG) && ((typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined')))){\n(rf.uixf = f);\n} else {\n}\n\nif(goog.DEBUG){\nuix.compiler.alpha.with_name(f,rf,rf_memo);\n} else {\n}\n\nuix.compiler.alpha.cache_react_fn(f,rf_memo);\n\nreturn rf_memo;\n} else {\nvar cached_fn = temp__5737__auto__;\nreturn cached_fn;\n}\n});\nuix.compiler.alpha.as_component = (function uix$compiler$alpha$as_component(tag){\nvar temp__5737__auto__ = uix.compiler.alpha.cached_react_fn(tag);\nif((temp__5737__auto__ == null)){\nreturn uix.compiler.alpha.fn_to_react_fn(tag);\n} else {\nvar cached_fn = temp__5737__auto__;\nreturn cached_fn;\n}\n});\nuix.compiler.alpha.as_react = (function uix$compiler$alpha$as_react(f){\nreturn (function (p1__48804_SHARP_){\nvar G__48805 = (function (){var G__48806 = cljs_bean.core.bean.cljs$core$IFn$_invoke$arity$1(p1__48804_SHARP_);\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__48806) : f.call(null,G__48806));\n})();\nreturn (uix.compiler.alpha.as_element.cljs$core$IFn$_invoke$arity$1 ? uix.compiler.alpha.as_element.cljs$core$IFn$_invoke$arity$1(G__48805) : uix.compiler.alpha.as_element.call(null,G__48805));\n});\n});\nuix.compiler.alpha.component_element = (function uix$compiler$alpha$component_element(tag,v){\nvar js_props = ({});\n(js_props.argv = v);\n\nvar temp__5739__auto___48952 = uix.compiler.alpha.key_from_vec(v);\nif((temp__5739__auto___48952 == null)){\n} else {\nvar key_48953 = temp__5739__auto___48952;\ngoog.object.set(js_props,\"key\",key_48953);\n}\n\nreturn module$node_modules$react$index.createElement(uix.compiler.alpha.as_component(tag),js_props);\n});\nuix.compiler.alpha.vec_to_elem = (function uix$compiler$alpha$vec_to_elem(v){\nvar tag = v.cljs$core$IIndexed$_nth$arity$3(null,(0),null);\nif(cljs.core.keyword_identical_QMARK_(new cljs.core.Keyword(null,\"<>\",\"<>\",1280186386),tag)){\nreturn uix.compiler.alpha.fragment_element(v);\n} else {\nif(cljs.core.keyword_identical_QMARK_(new cljs.core.Keyword(null,\"#\",\"#\",-275793773),tag)){\nreturn uix.compiler.alpha.suspense_element(v);\n} else {\nif(cljs.core.keyword_identical_QMARK_(new cljs.core.Keyword(null,\"->\",\"->\",514830339),tag)){\nreturn uix.compiler.alpha.portal_element(v);\n} else {\nif(cljs.core.keyword_identical_QMARK_(new cljs.core.Keyword(null,\">\",\">\",-555517146),tag)){\nreturn uix.compiler.alpha.interop_element(v);\n} else {\nif(uix.compiler.alpha.hiccup_tag_QMARK_(tag)){\nreturn uix.compiler.alpha.native_element(uix.compiler.alpha.cached_parse(tag.cljs$core$INamed$_name$arity$1(null)),v,(1));\n} else {\nreturn uix.compiler.alpha.component_element(tag,v);\n\n}\n}\n}\n}\n}\n});\nuix.compiler.alpha.as_element = (function uix$compiler$alpha$as_element(x){\nif(uix.compiler.alpha.js_val_QMARK_(x)){\nreturn x;\n} else {\nif(cljs.core.vector_QMARK_(x)){\nreturn uix.compiler.alpha.vec_to_elem(x);\n} else {\nif(cljs.core.seq_QMARK_(x)){\nreturn (uix.compiler.alpha.expand_seq.cljs$core$IFn$_invoke$arity$1 ? uix.compiler.alpha.expand_seq.cljs$core$IFn$_invoke$arity$1(x) : uix.compiler.alpha.expand_seq.call(null,x));\n} else {\nif((x instanceof cljs.core.Keyword)){\nreturn x.cljs$core$INamed$_name$arity$1(null);\n} else {\nif((((!((x == null))))?(((((x.cljs$lang$protocol_mask$partition0$ & (2147483648))) || ((cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IPrintWithWriter$))))?true:(((!x.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,x):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,x))){\nreturn cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([x], 0));\n} else {\nreturn x;\n\n}\n}\n}\n}\n}\n});\nuix.compiler.alpha.expand_seq = (function uix$compiler$alpha$expand_seq(s){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,e){\nret.push(uix.compiler.alpha.as_element(e));\n\nreturn ret;\n}),[],s);\n});\nuix.compiler.alpha.make_element = (function uix$compiler$alpha$make_element(argv,component,js_props,first_child){\nvar G__48810 = (argv.cljs$core$ICounted$_count$arity$1(null) - first_child);\nswitch (G__48810) {\ncase (0):\nreturn module$node_modules$react$index.createElement(component,js_props);\n\nbreak;\ncase (1):\nreturn module$node_modules$react$index.createElement(component,js_props,uix.compiler.alpha.as_element(argv.cljs$core$IIndexed$_nth$arity$3(null,first_child,null)));\n\nbreak;\ndefault:\nreturn module$node_modules$react$index.createElement.apply(null,cljs.core.reduce_kv((function (a,k,v){\nif((k >= first_child)){\na.push(uix.compiler.alpha.as_element(v));\n} else {\n}\n\nreturn a;\n}),[component,js_props],argv));\n\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Hiccup and UIx components interpreter. Based on Reagent.","~:file","uix/compiler/alpha.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",23],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$react","~$module$node_modules$react$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$uix.compiler.alpha","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$cljs-bean.core","^L","~$uix.lib","^M","~$bean","^L","^A","^B","~$cljs.core","^O","^B","^B","~$gobj","~$goog.object","~$goog","^R","^Q","^Q","~$uix.hooks.alpha","^S","~$hooks","^S","~$str","~$clojure.string","^V","^V"],"~:seen",["^E",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^O","^O","^M","^M","^S","^S","^T","^S"],"~:form",["~#list",["~$ns","^G","Hiccup and UIx components interpreter. Based on Reagent.",["^10",["^X",["^A","~:as","^A"],["^Q","^12","^P"],["^S","^12","^T"],["^V","^12","^U"],["^L","^12","^N"],["^M"]]]]],"~:flags",["^ ","^X",["^E",[]]],"~:js-deps",["^ "],"~:deps",["^R","^O","^B","^Q","^S","^V","^L","^M"]],"^I","^G","~:resource-id",["~:shadow.build.classpath/resource","uix/compiler/alpha.cljs"],"~:compiled-at",1591817155979,"~:resource-name","uix/compiler/alpha.cljs","~:warnings",[],"~:source","(ns uix.compiler.alpha\n  \"Hiccup and UIx components interpreter. Based on Reagent.\"\n  (:require [react :as react]\n            [goog.object :as gobj]\n            [uix.hooks.alpha :as hooks]\n            [clojure.string :as str]\n            [cljs-bean.core :as bean]\n            [uix.lib]))\n\n(def ^:dynamic *default-compare-args* #(= (.-argv %1) (.-argv %2)))\n\n(defn unwrap-ref [-ref]\n  (if (implements? hooks/IRef -ref)\n    (hooks/unwrap ^not-native -ref)\n    -ref))\n\n(defn js-val? [x]\n  (not (identical? \"object\" (goog/typeOf x))))\n\n(defn named? [x]\n  (or (keyword? x)\n      (symbol? x)))\n\n(defn hiccup-tag? [x]\n  (keyword? x))\n\n(declare make-element)\n(declare as-element)\n(declare expand-seq)\n(declare convert-prop-value)\n(declare convert-prop-value-shallow)\n\n(def prop-name-cache #js {:class \"className\"\n                          :for \"htmlFor\"\n                          :charset \"charSet\"})\n\n(def custom-prop-name-cache #js {})\n\n(def tag-name-cache #js {})\n\n(def transform-fns (atom #{}))\n\n(defn add-transform-fn [f]\n  (swap! transform-fns conj f))\n\n(def ^:private cc-regexp (js/RegExp. \"-(\\\\w)\" \"g\"))\n\n(defn- cc-fn [s]\n  (str/upper-case (aget s 1)))\n\n(defn ^string dash-to-camel [^string name-str]\n  (if (or (str/starts-with? name-str \"aria-\")\n          (str/starts-with? name-str \"data-\"))\n    name-str\n    (.replace name-str cc-regexp cc-fn)))\n\n(defn cached-prop-name [k]\n  (if (named? k)\n    (let [name-str (-name ^not-native k)]\n      (if-some [k' (aget prop-name-cache name-str)]\n        k'\n        (let [v (dash-to-camel name-str)]\n          (aset prop-name-cache name-str v)\n          v)))\n    k))\n\n(defn cached-custom-prop-name [k]\n  (if (named? k)\n    (let [name-str (-name ^not-native k)]\n      (if-some [k' (aget custom-prop-name-cache name-str)]\n        k'\n        (let [v (dash-to-camel name-str)]\n          (aset custom-prop-name-cache name-str v)\n          v)))\n    k))\n\n(defn convert-interop-prop-value [k v]\n  (cond\n    (= k :style) (if (vector? v)\n                   (-reduce ^not-native v\n                            (fn [a v]\n                              (.push a (convert-prop-value-shallow v))\n                              a)\n                            #js [])\n\n                   (convert-prop-value-shallow v))\n    (keyword? v) (-name ^not-native v)\n    :else v))\n\n(defn kv-conv [o k v]\n  (gobj/set o (cached-prop-name k) (convert-prop-value v))\n  o)\n\n(defn kv-conv-shallow [o k v]\n  (gobj/set o (cached-prop-name k) (convert-interop-prop-value k v))\n  o)\n\n(defn custom-kv-conv [o k v]\n  (gobj/set o (cached-custom-prop-name k) (convert-prop-value v))\n  o)\n\n(defn try-get-key [x]\n  ;; try catch to avoid ClojureScript peculiarity with\n  ;; sorted-maps with keys that are numbers\n  (try (get x :key)\n       (catch :default e)))\n\n(defn get-key [x]\n  (when (map? x)\n    (try-get-key x)))\n\n(defn convert-prop-value [x]\n  (cond\n    (js-val? x) x\n    (keyword? x) (-name ^not-native x)\n    (map? x) (reduce-kv kv-conv #js {} x)\n    (coll? x) (clj->js x)\n    (ifn? x) #(apply x %&)\n    :else (clj->js x)))\n\n(defn convert-prop-value-shallow [x]\n  (if (map? x)\n    (reduce-kv kv-conv-shallow #js {} x)\n    x))\n\n(defn convert-custom-prop-value [x]\n  (cond\n    (js-val? x) x\n    (keyword? x) (-name ^not-native x)\n    (map? x) (reduce-kv custom-kv-conv #js {} x)\n    (coll? x) (clj->js x)\n    (ifn? x) #(apply x %&)\n    :else (clj->js x)))\n\n(defn class-names-coll [class]\n  (let [^js/Array classes (reduce (fn [^js/Array a c]\n                                    (when ^boolean c\n                                      (->> (if (keyword? c) (-name ^not-native c) c)\n                                           (.push a)))\n                                    a)\n                                  #js []\n                                  class)]\n    (when (pos? (.-length classes))\n      (.join classes \" \"))))\n\n(defn class-names-map [class]\n  (let [^js/Array classes (reduce-kv (fn [^js/Array a b ^boolean c]\n                                       (when c\n                                         (->> (if (keyword? b) (-name ^not-native b) b)\n                                              (.push a)))\n                                       a)\n                                     #js []\n                                     class)]\n    (when (pos? (.-length classes))\n      (.join classes \" \"))))\n\n(defn ^string class-names\n  ([])\n  ([class]\n   (cond\n     ;; {c1 true c2 false}\n     (map? class)\n     (class-names-map class)\n\n     ;; [c1 c2 c3]\n     (or (array? class) (coll? class))\n     (class-names-coll class)\n\n     ;; :c1\n     (keyword? class)\n     (-name ^not-native class)\n\n     :else class))\n  ([a b]\n   (if ^boolean a\n     (if ^boolean b\n       (str (class-names a) \" \" (class-names b))\n       (class-names a))\n     (class-names b)))\n  ([a b & rst]\n   (reduce class-names (class-names a b) rst)))\n\n(defn set-id-class\n  \"Takes the id and class from tag keyword, and adds them to the\n  other props. Parsed tag is JS object with :id and :class properties.\"\n  [props id-class]\n  (let [id (aget id-class 1)\n        classes ^js/Array (aget id-class 2)]\n    (cond-> props\n            ;; Only use ID from tag keyword if no :id in props already\n            (and (some? id) (nil? (get props :id)))\n            (assoc :id id)\n\n            ;; Merge classes\n            (and (some? classes) (pos? (.-length classes)))\n            (assoc :class (class-names classes (get props :class))))))\n\n(defn convert-props [props id-class ^boolean shallow?]\n  (let [class (get props :class)\n        props (-> props\n                  (cond-> class (assoc :class (class-names class)))\n                  (set-id-class id-class))]\n    (cond\n      ^boolean (aget id-class 3)\n      (convert-custom-prop-value props)\n\n      shallow?\n      (convert-prop-value-shallow props)\n\n      :else (convert-prop-value props))))\n\n(def re-tag #\"[#.]?[^#.]+\")\n\n(defn parse-tag [tag]\n  (loop [matches ^js/Array (uix.lib/re-seq* re-tag tag)\n         tag \"div\"\n         id nil\n         ^js/Array classes #js []]\n    (let [val (aget matches 0)\n          nval (.slice matches 1)]\n      (if ^boolean val\n        (cond\n          (identical? (aget val 0) \"#\")\n          (recur nval tag (.slice val 1) classes)\n\n          (identical? (aget val 0) \".\")\n          (recur nval tag id (.concat classes #js [(.slice val 1)]))\n\n          :else (recur nval val id classes))\n        #js [tag id classes (str/includes? tag \"-\")]))))\n\n(defn cached-parse [x]\n  (if-some [s (aget tag-name-cache x)]\n    s\n    (let [v (parse-tag x)]\n      (aset tag-name-cache x v)\n      v)))\n\n(defn key-from-vec [v]\n  (if-some [k (get-key (-meta v))]\n    k\n    (get-key (-nth v 1 nil))))\n\n(defn native-element [parsed ^not-native argv first-el]\n  (let [component (aget parsed 0)\n        props (-nth argv first-el nil)\n        props? (or (nil? props) (map? props))\n        props (if props?\n                (reduce (fn [p f] (f p)) props @transform-fns)\n                props)\n        js-props (or ^boolean (convert-props (when props? props) parsed false)\n                     #js {})\n        first-child (+ first-el (if props? 1 0))]\n    (when-some [key (get-key (-meta argv))]\n      (gobj/set js-props \"key\" key))\n    (when-some [-ref (unwrap-ref (get props :ref))]\n      (gobj/set js-props \"ref\" -ref))\n    (make-element argv component js-props first-child)))\n\n(defn fragment-element [^not-native argv]\n  (let [props (-nth argv 1 nil)\n        props? (or (nil? props) (map? props))\n        js-props (or ^boolean (convert-prop-value (when props? props))\n                     #js {})\n        first-child (+ 1 (if props? 1 0))]\n    (when-some [key (key-from-vec argv)]\n      (gobj/set js-props \"key\" key))\n    (make-element argv react/Fragment js-props first-child)))\n\n(defn suspense-element [^not-native argv]\n  (let [props (-nth argv 1 nil)\n        props? (or (nil? props) (map? props))\n        [fallback props] (if props?\n                           [(as-element (get props :fallback))\n                            (dissoc props :fallback)]\n                           [nil props])\n        js-props (or ^boolean (convert-prop-value (when props? props))\n                     #js {})\n        first-child (+ 1 (if props? 1 0))]\n    (when ^boolean fallback\n      (gobj/set js-props \"fallback\" fallback))\n    (when-some [key (key-from-vec argv)]\n      (gobj/set js-props \"key\" key))\n    (make-element argv react/Suspense js-props first-child)))\n\n(defn portal-element [^not-native argv]\n  (.warn js/console \"React portal Hiccup syntax :-> is deprecated, use uix.dom.alpha/create-portal instead\")\n  (let [child (-nth argv 1 nil)\n        target (-nth argv 2 nil)\n        node (if (or (string? target) (keyword? target))\n               (.querySelector js/document (name target))\n               target)]\n    (js/ReactDOM.createPortal (as-element child) node)))\n\n(defn interop-element [^not-native argv]\n  (let [tag (-nth argv 1 nil)\n        parsed #js [tag nil nil]\n        first-el 2\n        props (-nth argv first-el nil)\n        props? (or (nil? props) (map? props))\n        props (if props?\n                (reduce (fn [p f] (f p)) props @transform-fns)\n                props)\n        js-props (or ^boolean (convert-props (when props? props) parsed true)\n                     #js {})\n        first-child (+ first-el (if props? 1 0))]\n    (when-some [key (get-key (-meta argv))]\n      (gobj/set js-props \"key\" key))\n    (when-some [-ref (unwrap-ref (get props :ref))]\n      (gobj/set js-props \"ref\" -ref))\n    (make-element argv tag js-props first-child)))\n\n(defn cached-react-fn [f]\n  (if ^boolean (.-compiled? f)\n    (.-cljsReactCompiled f)\n    (.-cljsReact f)))\n\n(defn cache-react-fn [f rf]\n  (if ^boolean (.-compiled? f)\n    (set! (.-cljsReactCompiled f) rf)\n    (set! (.-cljsReact f) rf)))\n\n(defn symbol-for [s]\n  (js* \"Symbol.for(~{})\" s))\n\n(def lazy-sym (symbol-for \"react.lazy\"))\n(def memo-sym (symbol-for \"react.memo\"))\n\n(defn lazy? [t]\n  (identical? lazy-sym (aget t \"$$typeof\")))\n\n(defn memo? [t]\n  (identical? memo-sym (aget t \"$$typeof\")))\n\n(defn react-type? [t]\n  (or (lazy? t) (memo? t)))\n\n(defn default-format-display-name [^string s]\n  (let [^js/Array parts (.split s #\"\\$\")\n        last-idx (dec ^number (.-length parts))\n        ^string name-part (aget parts last-idx)]\n    (if (== 1 (.-length parts))\n      (demunge name-part)\n      (-> ^js/Array (.slice parts 0 last-idx)\n          ^string (.join \".\")\n          (str \"/\" name-part)\n          demunge))))\n\n\n(def ^:dynamic *format-display-name* default-format-display-name)\n\n(defn format-display-name [s]\n  (if (fn? *format-display-name*)\n    (*format-display-name* s)\n    (throw (ex-info \"unexpected uix.compiler.alpha/*format-display-name* is not bound to a function\"\n                    {:bound-value *format-display-name*\n                     :value-type (goog/typeOf *format-display-name*)}))))\n\n(defn effective-component-name [^js f]\n  (or (when-some [display-name (.-displayName f)]\n        (if (string? display-name)\n          display-name))\n      (when-some [name (.-name f)]\n        (if (string? name)\n          name))))\n\n(defn with-name [^js f ^js rf ^js rf-memo]\n  (when-let [component-name (effective-component-name f)]\n    (when-some [display-name (format-display-name component-name)]\n      (set! (.-displayName rf) display-name)\n      (when-not ^boolean (.-uix-no-memo f)\n        (set! (.-displayName rf-memo) (str \"memo(\" display-name \")\"))))))\n\n(defn fn-to-react-fn [^js f]\n  (if (react-type? f)\n    f\n    (let [rf #(let [argv ^not-native (.-argv %)]\n                (as-element (apply (-nth argv 0) (subvec argv 1))))\n          rf-memo (if-not ^boolean (.-uix-no-memo f)\n                    (react/memo rf *default-compare-args*)\n                    rf)]\n      (when (and ^boolean goog.DEBUG (exists? js/__REACT_DEVTOOLS_GLOBAL_HOOK__))\n        (set! (.-uixf rf) f))\n      (when ^boolean goog.DEBUG\n        (with-name f rf rf-memo))\n      (cache-react-fn f rf-memo)\n      rf-memo)))\n\n(defn as-lazy-component [f]\n  (if-some [cached-fn (cached-react-fn f)]\n    cached-fn\n    (let [rf #(as-element (apply f (subvec (.-argv %) 1)))\n          rf-memo (if-not ^boolean (.-uix-no-memo f)\n                    (react/memo rf *default-compare-args*)\n                    rf)]\n      (when (and ^boolean goog.DEBUG (exists? js/__REACT_DEVTOOLS_GLOBAL_HOOK__))\n        (set! (.-uixf rf) f))\n      (when ^boolean goog.DEBUG\n        (with-name f rf rf-memo))\n      (cache-react-fn f rf-memo)\n      rf-memo)))\n\n(defn as-component [tag]\n  (if-some [cached-fn (cached-react-fn tag)]\n    cached-fn\n    (fn-to-react-fn tag)))\n\n(defn as-react [f]\n  #(as-element (f (bean/bean %))))\n\n(defn component-element [tag v]\n  (let [js-props #js {}]\n    (set! (.-argv js-props) v)\n    (when-some [key (key-from-vec v)]\n      (gobj/set js-props \"key\" key))\n    (react/createElement (as-component tag) js-props)))\n\n(defn vec-to-elem [^not-native v]\n  (let [tag (-nth v 0 nil)]\n    (cond\n      (keyword-identical? :<> tag) (fragment-element v)\n      (keyword-identical? :# tag) (suspense-element v)\n      (keyword-identical? :-> tag) (portal-element v)\n      (keyword-identical? :> tag) (interop-element v)\n      (hiccup-tag? tag) (-> (cached-parse (-name ^not-native tag))\n                            (native-element v 1))\n      :else (component-element tag v))))\n\n(defn as-element [x]\n  (cond\n    (js-val? x) x\n    (vector? x) (vec-to-elem x)\n    (seq? x) (expand-seq x)\n    (keyword? x) (-name ^not-native x)\n    (satisfies? IPrintWithWriter x) (pr-str x)\n    :else x))\n\n(defn expand-seq [s]\n  (reduce (fn [ret e]\n            (.push ret (as-element e))\n            ret)\n          #js []\n          s))\n\n(defn make-element [^not-native argv component js-props first-child]\n  (case (- (-count argv) first-child)\n    0 (react/createElement component js-props)\n    1 (->> (as-element (-nth argv first-child nil))\n           (react/createElement component js-props))\n    (.apply react/createElement nil\n            (reduce-kv (fn [^js/Array a k v]\n                         (when (>= k first-child)\n                           (.push a (as-element v)))\n                         a)\n                       #js [component js-props]\n                       argv))))\n","~:reader-features",["^E",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["p1__48642#","p2__48643#","uix.compiler.alpha/*default-compare-args*","cljs.core._EQ_","uix.compiler.alpha/unwrap-ref","-ref","cljs.core/PROTOCOL_SENTINEL","uix.compiler.alpha/js-val?","x","goog/typeOf","uix.compiler.alpha/named?","cljs.core/Keyword","cljs.core/Symbol","uix.compiler.alpha/hiccup-tag?","uix.compiler.alpha/prop-name-cache","uix.compiler.alpha/custom-prop-name-cache","uix.compiler.alpha/tag-name-cache","uix.compiler.alpha/transform-fns","cljs.core.atom","uix.compiler.alpha/add-transform-fn","f","cljs.core.swap_BANG_","cljs.core/conj","uix.compiler.alpha/cc-regexp","js/RegExp","uix.compiler.alpha/cc-fn","s","clojure.string/upper-case","uix.compiler.alpha/dash-to-camel","name-str","clojure.string/starts-with?","uix.compiler.alpha/cached-prop-name","k","temp__5737__auto__","k'","v","uix.compiler.alpha/cached-custom-prop-name","uix.compiler.alpha/convert-interop-prop-value","cljs.core/vector?","a","uix.compiler.alpha/convert-prop-value-shallow","uix.compiler.alpha/kv-conv","o","goog.object/set","uix.compiler.alpha/convert-prop-value","uix.compiler.alpha/kv-conv-shallow","uix.compiler.alpha/custom-kv-conv","uix.compiler.alpha/try-get-key","e48682","cljs.core.get","e","uix.compiler.alpha/get-key","cljs.core/map?","rest__48688#","cljs.core/reduce-kv","cljs.core/coll?","cljs.core/clj->js","cljs.core/ifn?","cljs.core.apply","uix.compiler.alpha/convert-custom-prop-value","rest__48709#","uix.compiler.alpha/class-names-coll","class","classes","cljs.core.reduce","c","uix.compiler.alpha/class-names-map","b","var_args","G__48777","uix.compiler.alpha/class-names","args-arr__4810__auto__","len__4789__auto__","i__4790__auto__","argseq__4811__auto__","cljs.core/IndexedSeq","seq48770","G__48771","cljs.core/first","cljs.core/next","G__48772","self__4776__auto__","cljs.core/array?","uix.compiler.alpha.class_names","rst","uix.compiler.alpha/set-id-class","props","id-class","id","G__48778","cljs.core.assoc","uix.compiler.alpha/convert-props","shallow?","G__48779","uix.compiler.alpha/re-tag","uix.compiler.alpha/parse-tag","tag","matches","uix.lib/re-seq*","val","nval","clojure.string/includes?","uix.compiler.alpha/cached-parse","uix.compiler.alpha/key-from-vec","cljs.core/-meta","cljs.core/-nth","uix.compiler.alpha/native-element","parsed","argv","first-el","component","props?","cljs.core/deref","p","js-props","or__4185__auto__","first-child","temp__5739__auto__","key","uix.compiler.alpha/make-element","uix.compiler.alpha/fragment-element","js/module$node_modules$react$index.Fragment","uix.compiler.alpha/suspense-element","vec__48792","cljs.core.nth","fallback","G__48795","uix.compiler.alpha/as-element","cljs.core.dissoc","js/module$node_modules$react$index.Suspense","uix.compiler.alpha/portal-element","js/console","child","target","node","js/document","cljs.core/name","js/ReactDOM.createPortal","uix.compiler.alpha/interop-element","uix.compiler.alpha/cached-react-fn","uix.compiler.alpha/cache-react-fn","rf","uix.compiler.alpha/symbol-for","uix.compiler.alpha/lazy-sym","uix.compiler.alpha/memo-sym","uix.compiler.alpha/lazy?","t","uix.compiler.alpha/memo?","uix.compiler.alpha/react-type?","uix.compiler.alpha/default-format-display-name","parts","last-idx","name-part","cljs.core/demunge","uix.compiler.alpha/*format-display-name*","uix.compiler.alpha/format-display-name","cljs.core/fn?","cljs.core.ex_info","uix.compiler.alpha/effective-component-name","display-name","name","uix.compiler.alpha/with-name","rf-memo","temp__5735__auto__","component-name","uix.compiler.alpha/fn-to-react-fn","p1__48798#","G__48800","cljs.core.subvec","js/module$node_modules$react$index.memo","js/goog.DEBUG","js/__REACT_DEVTOOLS_GLOBAL_HOOK__","uix.compiler.alpha/as-lazy-component","cached-fn","p1__48802#","G__48803","uix.compiler.alpha/as-component","p1__48804#","uix.compiler.alpha/as-react","G__48805","G__48806","cljs_bean.core.bean","uix.compiler.alpha/component-element","js/module$node_modules$react$index.createElement","uix.compiler.alpha/vec-to-elem","cljs.core/keyword-identical?","cljs.core/seq?","uix.compiler.alpha/expand-seq","cljs.core/native-satisfies?","cljs.core/IPrintWithWriter","cljs.core.pr_str","ret","G__48810"]],"~:used-vars",["^E",["~$cljs.core/array?","~$cljs.core/PROTOCOL_SENTINEL","~$uix.compiler.alpha/react-type?","~$clojure.string/starts-with?","~$clojure.string/upper-case","~$js/RegExp","~$uix.compiler.alpha/add-transform-fn","~$uix.compiler.alpha/cached-prop-name","~$uix.compiler.alpha/as-lazy-component","~$uix.compiler.alpha/dash-to-camel","~$uix.compiler.alpha/hiccup-tag?","~$cljs.core/vector?","~$cljs.core/=","~$uix.compiler.alpha/cc-regexp","~$cljs.core/ifn?","~$uix.compiler.alpha/cached-parse","~$uix.compiler.alpha/custom-prop-name-cache","~$goog/typeOf","~$cljs.core/reduce","~$cljs.core/apply","~$cljs.core/Keyword","~$uix.compiler.alpha/as-component","~$uix.compiler.alpha/key-from-vec","~$uix.compiler.alpha/convert-custom-prop-value","~$uix.compiler.alpha/convert-props","~$uix.compiler.alpha/unwrap-ref","~$uix.compiler.alpha/transform-fns","~$uix.compiler.alpha/cached-react-fn","~$cljs.core/keyword-identical?","~$cljs.core/atom","~$cljs.core/pr-str","~$js/module$node_modules$react$index.createElement","~$js/console","~$uix.compiler.alpha/get-key","~$uix.compiler.alpha/symbol-for","~$uix.compiler.alpha/portal-element","~$clojure.string/includes?","~$uix.compiler.alpha/as-element","~$cljs.core/native-satisfies?","~$uix.compiler.alpha/class-names-coll","~$uix.compiler.alpha/native-element","~$cljs.core/map?","~$uix.compiler.alpha/default-format-display-name","~$cljs.core/conj","~$uix.compiler.alpha/convert-interop-prop-value","~$js/module$node_modules$react$index.Suspense","~$uix.compiler.alpha/vec-to-elem","~$js/ReactDOM.createPortal","~$cljs.core/fn?","~$uix.compiler.alpha/*default-compare-args*","~$cljs.core/swap!","~$uix.compiler.alpha/convert-prop-value","~$uix.compiler.alpha/lazy?","~$cljs.core/get","~$js/module$node_modules$react$index.Fragment","~$goog.object/set","~$uix.compiler.alpha/make-element","~$uix.compiler.alpha/class-names-map","~$uix.compiler.alpha/memo-sym","~$uix.compiler.alpha/fn-to-react-fn","~$cljs.core/-nth","~$uix.compiler.alpha/set-id-class","~$uix.compiler.alpha/cached-custom-prop-name","~$uix.compiler.alpha/format-display-name","~$cljs.core/clj->js","~$uix.compiler.alpha/tag-name-cache","~$uix.compiler.alpha/expand-seq","~$uix.compiler.alpha/cc-fn","~$js/__REACT_DEVTOOLS_GLOBAL_HOOK__","~$cljs.core/ex-info","~$uix.compiler.alpha/cache-react-fn","~$cljs.core/-name","~$uix.compiler.alpha/with-name","~$js/goog.DEBUG","~$uix.compiler.alpha/lazy-sym","~$uix.compiler.alpha/prop-name-cache","~$uix.compiler.alpha/kv-conv","~$uix.compiler.alpha/parse-tag","~$uix.compiler.alpha/try-get-key","~$uix.compiler.alpha/named?","~$cljs.core/not","~$cljs.core/IPrintWithWriter","~$uix.compiler.alpha/as-react","~$cljs.core/assoc","~$cljs.core/-reduce","~$uix.compiler.alpha/convert-prop-value-shallow","~$cljs.core/Symbol","~$uix.compiler.alpha/effective-component-name","~$uix.compiler.alpha/re-tag","~$uix.compiler.alpha/suspense-element","~$cljs.core/coll?","~$cljs.core/reduce-kv","~$uix.compiler.alpha/class-names","~$uix.hooks.alpha/unwrap","~$cljs.core/seq?","~$cljs.core/demunge","~$uix.compiler.alpha/interop-element","~$uix.compiler.alpha/kv-conv-shallow","~$uix.compiler.alpha/fragment-element","~$uix.compiler.alpha/js-val?","~$uix.compiler.alpha/custom-kv-conv","~$uix.compiler.alpha/component-element","~$uix.compiler.alpha/memo?","~$uix.compiler.alpha/*format-display-name*"]]],"~:cache-keys",["~#cmap",[["^17","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^E",[]],"~:deps-syms",["^R","~$goog.dom.HtmlElement"]]],["^17","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","~$goog.array","~$goog.asserts"]]],["^17","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R"]]],["^17","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","^3Z","~$goog.labs.userAgent.util","^Q","~$goog.string.internal"]]],["^17","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","^3[","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^41"]]],["^17","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","^3["]]],["~:shadow.build.npm/resource","node_modules/prop-types/checkPropTypes.js"],[1591817074000,1591817074000,1549836454000,"^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["~$shadow.js","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^17","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R"]]],["^17","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R"]]],["^17","uix/compiler/alpha.cljs"],["c0250b6c81ac72f68c779224c6ca3b72f03d5307","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","^O","^B","^Q","^S","^V","^L","^M"]]],["^17","uix/lib.cljc"],["88fc106065bc3114ee14c38875acaf2b3efef2fd","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","^O"]]],["^17","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R"]]],["^48","node_modules/react/index.js"],[1591817074000,1591817074000,499162500000,"^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^49","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^17","shadow/js.js"],["0efc796792858215263a8d95a5eb24ac3216be92","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R"]]],["^17","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R"]]],["^17","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","^3["]]],"~:SHADOW-TIMESTAMP",[1591817074000,1591817074000,1574189148000],["^48","node_modules/react/cjs/react.development.js"],[1591817074000,1591817074000,499162500000,"^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^49","~$module$node_modules$object_assign$index","~$module$node_modules$prop_types$checkPropTypes"]]],["^17","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","^3[","~$goog.reflect"]]],["^17","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","^3[","~$goog.html.trustedtypes","^44","^45","^46","^47"]]],["^17","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R"]]],["^17","cljs_bean/core.cljs"],["48253381fc2e9a7be115de76154157bad516ea85","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","^O","~$cljs-bean.from.cljs.core","^Q"]]],["^17","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R"]]],["^17","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","^3Z","^3[","~$goog.html.SafeUrl","^46","^47","^41"]]],["^17","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","^3[","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^4C","^43","~$goog.html.uncheckedconversions","^46","^41"]]],["^17","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^17","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","^3Z","^3[","~$goog.dom.TagName","~$goog.dom.tags","^4G","^4H","~$goog.html.SafeStyleSheet","^4C","^43","^4A","^44","^45","~$goog.labs.userAgent.browser","^Q","^46","^47","^41"]]],["^17","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","^Q"]]],["^17","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^17","uix/hooks/alpha.cljc"],["385abf44949a54284aa91c62ce01fecf3f4ee8e1","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","^O","^B","^Q"]]],["^17","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","^3Z","^3[","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^17","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R"]]],["^48","node_modules/object-assign/index.js"],[1591817074000,1591817074000,1484580833000,"^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^49"]]],["^17","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R"]]],["^17","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",[]]],["^17","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","^3Z","^Q"]]],["^17","clojure/string.cljs"],["94e7243ef451c995f9dbe33db1c864643bcb1ed2","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","^O","^4R","~$goog.string.StringBuffer"]]],["^48","node_modules/react/cjs/react.production.min.js"],[1591817074000,1591817074000,499162500000,"^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^49","^4>"]]],["^17","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","~$goog.dom.safe","^4I","^46","^41"]]],["^17","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R"]]],["^17","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","^41"]]],["^17","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R"]]],["^17","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","^3Z","^3[","^4E","~$goog.math"]]],["^17","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","^3[","^4F","^4G","^4H","^4N","^4C","^43","^46","^41"]]],["^48","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1591817074000,1591817074000,1549571078000,"^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^49"]]],["^17","cljs_bean/from/cljs/core.cljs"],["48253381fc2e9a7be115de76154157bad516ea85","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","^O"]]],["^17","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R"]]],["^17","cljs/core.cljs"],["94e7243ef451c995f9dbe33db1c864643bcb1ed2","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","~$goog.math.Long","~$goog.math.Integer","^4R","^Q","^3Z","~$goog.Uri","^4X"]]],["^17","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","^3[","^4A","^46","^47"]]],["^17","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","^3Z","^3[","^4H","^Q","^46","^47","^41"]]],["^17","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","^4@"]]],["^17","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","^3Z","^3[","^4R"]]],["^17","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^3U",["^ ","^3V",null,"^3W",["^E",[]],"^3X",["^R","^3[","^47"]]]]],"~:clj-info",["^ ","jar:file:/Users/rgm/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1560478709000,"jar:file:/Users/rgm/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1560478874000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/js_deps.cljc",1574189148000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/compiler.cljc",1574189148000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/analyzer.cljc",1574189148000,"jar:file:/Users/rgm/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1583859516000,"jar:file:/Users/rgm/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1560478874000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1560478709000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1560478709000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/env.cljc",1574189148000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1560478709000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/tagged_literals.cljc",1574189148000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1560478709000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64_vlq.clj",1574189148000,"file:/Users/rgm/.gitlibs/libs/uix.core/uix.core/a34f04f6c5e4cb39b30a9514519c4a7e0cfe6c93/core/src/uix/hooks/alpha.cljc",1591813611918,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1560478709000,"jar:file:/Users/rgm/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1560478874000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map.clj",1574189148000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1560478709000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/core.cljc",1574189148000,"file:/Users/rgm/.gitlibs/libs/uix.core/uix.core/a34f04f6c5e4cb39b30a9514519c4a7e0cfe6c93/core/src/uix/lib.cljc",1591813611919,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/util.cljc",1574189148000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/externs.clj",1574189148000,"jar:file:/Users/rgm/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1560478874000,"jar:file:/Users/rgm/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64.clj",1574189148000,"jar:file:/Users/rgm/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1560478874000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Hiccup and UIx components interpreter. Based on Reagent.","^7","uix/compiler/alpha.cljs","^8",1,"^9",5,"^:",1,"^;",23],"^<",["^ ","^=","^>","^?","^@","^A","^B"],"^C",null,"^D",["^E",[]],"~:shadow/js-access-properties",["^E",["createElement","Fragment","createPortal","Suspense","memo"]],"^F","^G","^J",null,"^K",["^ ","^L","^L","^M","^M","^N","^L","^A","^B","^O","^O","^B","^B","^P","^Q","^R","^R","^Q","^Q","^S","^S","^T","^S","^U","^V","^V","^V"],"^W",["^E",["^X"]],"~:shadow/js-access-global",["^E",["document","ReactDOM","RegExp","__REACT_DEVTOOLS_GLOBAL_HOOK__"]],"^Y",null,"~:defs",["^ ","~$class-names",["^ ","~:protocol-inline",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",157,"^9",15,"^:",157,"^;",26,"~:tag","~$string","~:arglists",["^10",["~$quote",["^10",[[],["~$class"],["~$a","~$b"],["~$a","~$b","~$&","~$rst"]]]]],"~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",2,"~:max-fixed-arity",2,"~:method-params",["^10",[[],["^5W"],["~$a","~$b"]]],"^5U",["^10",[[],["^5W"],["~$a","~$b"],["~$a","~$b","~$&","^5X"]]],"~:arglists-meta",["^10",[null,null,null,null]]]],"^F","^3G","^7","uix/compiler/alpha.cljs","^;",26,"^5Y",["^ ","^5Z",true,"^5[",2,"^60",2,"^61",["^10",[[],["^5W"],["~$a","~$b"]]],"^5U",["^10",[[],["^5W"],["~$a","~$b"],["~$a","~$b","~$&","^5X"]]],"^62",["^10",[null,null,null,null]]],"^61",["^10",[[],["^5W"],["~$a","~$b"]]],"~:protocol-impl",null,"^5[",2,"^62",["^10",[null,null,null,null]],"^9",1,"^5Z",true,"~:methods",[["^ ","^5[",0,"^5Z",false,"^5S","~$clj-nil"],["^ ","^5[",1,"^5Z",false,"^5S",["^E",[null,"~$js","^5T","^65"]]],["^ ","^5[",2,"^5Z",false,"^5S",["^E",[null,"^66","^5T","^65"]]],["^ ","^5[",2,"^5Z",true,"^5S",["^E",[null,"~$any"]]]],"^8",157,"~:ret-tag","^5T","^:",157,"^60",2,"^5S","^5T","~:fn-var",true,"^5U",["^10",[[],["^5W"],["~$a","~$b"],["~$a","~$b","~$&","^5X"]]]],"~$*default-compare-args*",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",10,"^9",16,"^:",10,"^;",38,"~:dynamic",true],"^F","^2H","^7","uix/compiler/alpha.cljs","^;",38,"^61",["^10",[["~$p1__48642#","~$p2__48643#"]]],"^63",null,"^62",["^10",[]],"^9",1,"^5Z",false,"^6;",true,"^8",10,"^68","~$boolean","^:",10,"^60",2,"^69",true,"^5U",null],"~$transform-fns",["^ ","^F","^21","^7","uix/compiler/alpha.cljs","^8",41,"^9",1,"^:",41,"^;",19,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",41,"^9",6,"^:",41,"^;",19],"^5S","~$cljs.core/Atom"],"~$as-react",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",408,"^9",7,"^:",408,"^;",15,"^5U",["^10",["^5V",["^10",[["~$f"]]]]]],"^F","^3=","^7","uix/compiler/alpha.cljs","^;",15,"^61",["^10",[["~$f"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",408,"^68","~$function","^:",408,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$f"]]]]]],"~$suspense-element",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",270,"^9",7,"^:",270,"^;",23,"^5U",["^10",["^5V",["^10",[["~$argv"]]]]]],"^F","^3D","^7","uix/compiler/alpha.cljs","^;",23,"^61",["^10",[["^6D"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",270,"^68","^67","^:",270,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["^6D"]]]]]],"~$convert-interop-prop-value",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",77,"^9",7,"^:",77,"^;",33,"^5U",["^10",["^5V",["^10",[["~$k","~$v"]]]]]],"^F","^2C","^7","uix/compiler/alpha.cljs","^;",33,"^61",["^10",[["~$k","~$v"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",77,"^68",["^E",[null,"^67","^5T"]],"^:",77,"^60",2,"^69",true,"^5U",["^10",["^5V",["^10",[["~$k","~$v"]]]]]],"~$as-component",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",403,"^9",7,"^:",403,"^;",19,"^5U",["^10",["^5V",["^10",[["~$tag"]]]]]],"^F","^1X","^7","uix/compiler/alpha.cljs","^;",19,"^61",["^10",[["^6G"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",403,"^68",["^E",["^67","^66","^6B"]],"^:",403,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["^6G"]]]]]],"~$effective-component-name",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",359,"^9",7,"^:",359,"^;",31,"^5U",["^10",["^5V",["^10",[["~$f"]]]]]],"^F","^3B","^7","uix/compiler/alpha.cljs","^;",31,"^61",["^10",[["~$f"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",359,"^68",["^E",["^5T","^65"]],"^:",359,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$f"]]]]]],"~$class-names-coll",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",135,"^9",7,"^:",135,"^;",23,"^5U",["^10",["^5V",["^10",[["^5W"]]]]]],"^F","^2>","^7","uix/compiler/alpha.cljs","^;",23,"^61",["^10",[["^5W"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",135,"^68",["^E",["^66","^65"]],"^:",135,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["^5W"]]]]]],"~$get-key",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",108,"^9",7,"^:",108,"^;",14,"^5U",["^10",["^5V",["^10",[["~$x"]]]]]],"^F","^28","^7","uix/compiler/alpha.cljs","^;",14,"^61",["^10",[["~$x"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",108,"^68",["^E",["^67","^65"]],"^:",108,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$x"]]]]]],"~$re-tag",["^ ","^F","^3C","^7","uix/compiler/alpha.cljs","^8",212,"^9",1,"^:",212,"^;",12,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",212,"^9",6,"^:",212,"^;",12],"^5S","^67"],"~$portal-element",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",286,"^9",7,"^:",286,"^;",21,"^5U",["^10",["^5V",["^10",[["^6D"]]]]]],"^F","^2:","^7","uix/compiler/alpha.cljs","^;",21,"^61",["^10",[["^6D"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",286,"^68","^66","^:",286,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["^6D"]]]]]],"~$as-element",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",429,"^9",7,"^:",429,"^;",17,"^5U",["^10",["^5V",["^10",[["~$x"]]]]]],"^F","^2<","^7","uix/compiler/alpha.cljs","^;",17,"^61",["^10",[["~$x"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",429,"^68",["^E",[null,"^67","^66","^5T"]],"^:",429,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$x"]]]]]],"~$*format-display-name*",["^ ","^5",["^ ","^7","uix/compiler/alpha.cljs","^8",350,"^9",16,"^:",350,"^;",37,"^6;",true],"^F","^3R","^7","uix/compiler/alpha.cljs","^;",37,"^9",1,"^6;",true,"^8",350,"^:",350,"^5S","^67"],"~$memo?",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",332,"^9",7,"^:",332,"^;",12,"^5U",["^10",["^5V",["^10",[["~$t"]]]]]],"^F","^3Q","^7","uix/compiler/alpha.cljs","^;",12,"^61",["^10",[["~$t"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",332,"^68","^6>","^:",332,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$t"]]]]]],"~$custom-kv-conv",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",98,"^9",7,"^:",98,"^;",21,"^5U",["^10",["^5V",["^10",[["~$o","~$k","~$v"]]]]]],"^F","^3O","^7","uix/compiler/alpha.cljs","^;",21,"^61",["^10",[["~$o","~$k","~$v"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",98,"^:",98,"^60",3,"^69",true,"^5U",["^10",["^5V",["^10",[["~$o","~$k","~$v"]]]]]],"~$kv-conv-shallow",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",94,"^9",7,"^:",94,"^;",22,"^5U",["^10",["^5V",["^10",[["~$o","~$k","~$v"]]]]]],"^F","^3L","^7","uix/compiler/alpha.cljs","^;",22,"^61",["^10",[["~$o","~$k","~$v"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",94,"^:",94,"^60",3,"^69",true,"^5U",["^10",["^5V",["^10",[["~$o","~$k","~$v"]]]]]],"~$add-transform-fn",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",43,"^9",7,"^:",43,"^;",23,"^5U",["^10",["^5V",["^10",[["~$f"]]]]]],"^F","^1I","^7","uix/compiler/alpha.cljs","^;",23,"^61",["^10",[["~$f"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",43,"^68",["^E",[null,"^67"]],"^:",43,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$f"]]]]]],"~$with-name",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",367,"^9",7,"^:",367,"^;",16,"^5U",["^10",["^5V",["^10",[["~$f","~$rf","~$rf-memo"]]]]]],"^F","^33","^7","uix/compiler/alpha.cljs","^;",16,"^61",["^10",[["~$f","^6T","^6U"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",367,"^68",["^E",[null,"^65"]],"^:",367,"^60",3,"^69",true,"^5U",["^10",["^5V",["^10",[["~$f","^6T","^6U"]]]]]],"~$hiccup-tag?",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",24,"^9",7,"^:",24,"^;",18,"^5U",["^10",["^5V",["^10",[["~$x"]]]]]],"^F","^1M","^7","uix/compiler/alpha.cljs","^;",18,"^61",["^10",[["~$x"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",24,"^68","^6>","^:",24,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$x"]]]]]],"~$set-id-class",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",183,"^9",7,"^:",183,"^;",19,"^5U",["^10",["^5V",["^10",[["~$props","~$id-class"]]]]],"^6","Takes the id and class from tag keyword, and adds them to the\n  other props. Parsed tag is JS object with :id and :class properties."],"^F","^2T","^7","uix/compiler/alpha.cljs","^;",19,"^61",["^10",[["^6X","^6Y"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",183,"^68",["^E",[null,"~$clj","^67"]],"^:",183,"^60",2,"^69",true,"^5U",["^10",["^5V",["^10",[["^6X","^6Y"]]]]],"^6","Takes the id and class from tag keyword, and adds them to the\n  other props. Parsed tag is JS object with :id and :class properties."],"~$dash-to-camel",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",51,"^9",15,"^:",51,"^;",28,"^5S","^5T","^5U",["^10",["^5V",["^10",[["~$name-str"]]]]]],"^F","^1L","^7","uix/compiler/alpha.cljs","^;",28,"^61",["^10",[["^70"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",51,"^68","^5T","^:",51,"^60",1,"^5S","^5T","^69",true,"^5U",["^10",["^5V",["^10",[["^70"]]]]]],"~$tag-name-cache",["^ ","^F","^2X","^7","uix/compiler/alpha.cljs","^8",39,"^9",1,"^:",39,"^;",20,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",39,"^9",6,"^:",39,"^;",20],"^5S","~$object"],"~$cached-react-fn",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",313,"^9",7,"^:",313,"^;",22,"^5U",["^10",["^5V",["^10",[["~$f"]]]]]],"^F","^22","^7","uix/compiler/alpha.cljs","^;",22,"^61",["^10",[["~$f"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",313,"^68","^67","^:",313,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$f"]]]]]],"~$prop-name-cache",["^ ","^F","^36","^7","uix/compiler/alpha.cljs","^8",33,"^9",1,"^:",33,"^;",21,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",33,"^9",6,"^:",33,"^;",21],"^5S","^72"],"~$convert-props",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",198,"^9",7,"^:",198,"^;",20,"^5U",["^10",["^5V",["^10",[["^6X","^6Y","~$shallow?"]]]]]],"^F","^1[","^7","uix/compiler/alpha.cljs","^;",20,"^61",["^10",[["^6X","^6Y","^76"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",198,"^68",["^E",[null,"^67","^5T","^6B"]],"^:",198,"^60",3,"^69",true,"^5U",["^10",["^5V",["^10",[["^6X","^6Y","^76"]]]]]],"~$custom-prop-name-cache",["^ ","^F","^1S","^7","uix/compiler/alpha.cljs","^8",37,"^9",1,"^:",37,"^;",28,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",37,"^9",6,"^:",37,"^;",28],"^5S","^72"],"~$component-element",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",411,"^9",7,"^:",411,"^;",24,"^5U",["^10",["^5V",["^10",[["^6G","~$v"]]]]]],"^F","^3P","^7","uix/compiler/alpha.cljs","^;",24,"^61",["^10",[["^6G","~$v"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",411,"^68","^66","^:",411,"^60",2,"^69",true,"^5U",["^10",["^5V",["^10",[["^6G","~$v"]]]]]],"~$named?",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",20,"^9",7,"^:",20,"^;",13,"^5U",["^10",["^5V",["^10",[["~$x"]]]]]],"^F","^3:","^7","uix/compiler/alpha.cljs","^;",13,"^61",["^10",[["~$x"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",20,"^68","^6>","^:",20,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$x"]]]]]],"~$parse-tag",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",214,"^9",7,"^:",214,"^;",16,"^5U",["^10",["^5V",["^10",[["^6G"]]]]]],"^F","^38","^7","uix/compiler/alpha.cljs","^;",16,"^61",["^10",[["^6G"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",214,"^68","~$array","^:",214,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["^6G"]]]]]],"~$kv-conv",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",90,"^9",7,"^:",90,"^;",14,"^5U",["^10",["^5V",["^10",[["~$o","~$k","~$v"]]]]]],"^F","^37","^7","uix/compiler/alpha.cljs","^;",14,"^61",["^10",[["~$o","~$k","~$v"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",90,"^:",90,"^60",3,"^69",true,"^5U",["^10",["^5V",["^10",[["~$o","~$k","~$v"]]]]]],"~$key-from-vec",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",239,"^9",7,"^:",239,"^;",19,"^5U",["^10",["^5V",["^10",[["~$v"]]]]]],"^F","^1Y","^7","uix/compiler/alpha.cljs","^;",19,"^61",["^10",[["~$v"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",239,"^68",["^E",["^67","^65"]],"^:",239,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$v"]]]]]],"~$js-val?",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",17,"^9",7,"^:",17,"^;",14,"^5U",["^10",["^5V",["^10",[["~$x"]]]]]],"^F","^3N","^7","uix/compiler/alpha.cljs","^;",14,"^61",["^10",[["~$x"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",17,"^68","^6>","^:",17,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$x"]]]]]],"~$symbol-for",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",323,"^9",7,"^:",323,"^;",17,"^5U",["^10",["^5V",["^10",[["~$s"]]]]]],"^F","^29","^7","uix/compiler/alpha.cljs","^;",17,"^61",["^10",[["~$s"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",323,"^68","^67","^:",323,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$s"]]]]]],"~$unwrap-ref",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",12,"^9",7,"^:",12,"^;",17,"^5U",["^10",["^5V",["^10",[["~$-ref"]]]]]],"^F","^20","^7","uix/compiler/alpha.cljs","^;",17,"^61",["^10",[["^7A"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",12,"^68",["^E",[null,"^67"]],"^:",12,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["^7A"]]]]]],"~$convert-custom-prop-value",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",126,"^9",7,"^:",126,"^;",32,"^5U",["^10",["^5V",["^10",[["~$x"]]]]]],"^F","^1Z","^7","uix/compiler/alpha.cljs","^;",32,"^61",["^10",[["~$x"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",126,"^68",["^E",[null,"^67","^5T","^6B"]],"^:",126,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$x"]]]]]],"~$native-element",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",244,"^9",7,"^:",244,"^;",21,"^5U",["^10",["^5V",["^10",[["~$parsed","^6D","~$first-el"]]]]]],"^F","^2?","^7","uix/compiler/alpha.cljs","^;",21,"^61",["^10",[["^7D","^6D","^7E"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",244,"^68","^67","^:",244,"^60",3,"^69",true,"^5U",["^10",["^5V",["^10",[["^7D","^6D","^7E"]]]]]],"~$fragment-element",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",260,"^9",7,"^:",260,"^;",23,"^5U",["^10",["^5V",["^10",[["^6D"]]]]]],"^F","^3M","^7","uix/compiler/alpha.cljs","^;",23,"^61",["^10",[["^6D"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",260,"^68","^67","^:",260,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["^6D"]]]]]],"~$vec-to-elem",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",418,"^9",7,"^:",418,"^;",18,"^5U",["^10",["^5V",["^10",[["~$v"]]]]]],"^F","^2E","^7","uix/compiler/alpha.cljs","^;",18,"^61",["^10",[["~$v"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",418,"^68",["^E",["^67","^66"]],"^:",418,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$v"]]]]]],"~$fn-to-react-fn",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",374,"^9",7,"^:",374,"^;",21,"^5U",["^10",["^5V",["^10",[["~$f"]]]]]],"^F","^2R","^7","uix/compiler/alpha.cljs","^;",21,"^61",["^10",[["~$f"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",374,"^68",["^E",["^66","^6B"]],"^:",374,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$f"]]]]]],"~$interop-element",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",295,"^9",7,"^:",295,"^;",22,"^5U",["^10",["^5V",["^10",[["^6D"]]]]]],"^F","^3K","^7","uix/compiler/alpha.cljs","^;",22,"^61",["^10",[["^6D"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",295,"^68","^67","^:",295,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["^6D"]]]]]],"~$class-names-map",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",146,"^9",7,"^:",146,"^;",22,"^5U",["^10",["^5V",["^10",[["^5W"]]]]]],"^F","^2P","^7","uix/compiler/alpha.cljs","^;",22,"^61",["^10",[["^5W"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",146,"^68",["^E",["^66","^65"]],"^:",146,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["^5W"]]]]]],"~$memo-sym",["^ ","^F","^2Q","^7","uix/compiler/alpha.cljs","^8",327,"^9",1,"^:",327,"^;",14,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",327,"^9",6,"^:",327,"^;",14],"^5S","^67"],"~$default-format-display-name",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",338,"^9",7,"^:",338,"^;",34,"^5U",["^10",["^5V",["^10",[["~$s"]]]]]],"^F","^2A","^7","uix/compiler/alpha.cljs","^;",34,"^61",["^10",[["~$s"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",338,"^68","^67","^:",338,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$s"]]]]]],"~$lazy?",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",329,"^9",7,"^:",329,"^;",12,"^5U",["^10",["^5V",["^10",[["~$t"]]]]]],"^F","^2K","^7","uix/compiler/alpha.cljs","^;",12,"^61",["^10",[["~$t"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",329,"^68","^6>","^:",329,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$t"]]]]]],"~$make-element",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",445,"^9",7,"^:",445,"^;",19,"^5U",["^10",["^5V",["^10",[["^6D","~$component","~$js-props","~$first-child"]]]]]],"^F","^2O","^7","uix/compiler/alpha.cljs","^;",19,"^61",["^10",[["^6D","^7O","^7P","^7Q"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",445,"^:",445,"^60",4,"^69",true,"^5U",["^10",["^5V",["^10",[["^6D","^7O","^7P","^7Q"]]]]]],"~$format-display-name",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",352,"^9",7,"^:",352,"^;",26,"^5U",["^10",["^5V",["^10",[["~$s"]]]]]],"^F","^2V","^7","uix/compiler/alpha.cljs","^;",26,"^61",["^10",[["~$s"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",352,"^68","^67","^:",352,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$s"]]]]]],"~$cc-regexp",["^ ","^5",["^ ","^7","uix/compiler/alpha.cljs","^8",46,"^9",16,"^:",46,"^;",25,"~:private",true],"^7T",true,"^F","^1P","^7","uix/compiler/alpha.cljs","^;",25,"^9",1,"^8",46,"^:",46,"^5S","^1H"],"~$convert-prop-value",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",112,"^9",7,"^:",112,"^;",25,"^5U",["^10",["^5V",["^10",[["~$x"]]]]]],"^F","^2J","^7","uix/compiler/alpha.cljs","^;",25,"^61",["^10",[["~$x"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",112,"^68",["^E",[null,"^67","^5T","^6B"]],"^:",112,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$x"]]]]]],"~$cached-prop-name",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",57,"^9",7,"^:",57,"^;",23,"^5U",["^10",["^5V",["^10",[["~$k"]]]]]],"^F","^1J","^7","uix/compiler/alpha.cljs","^;",23,"^61",["^10",[["~$k"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",57,"^68",["^E",[null,"^67","^5T"]],"^:",57,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$k"]]]]]],"~$cached-custom-prop-name",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",67,"^9",7,"^:",67,"^;",30,"^5U",["^10",["^5V",["^10",[["~$k"]]]]]],"^F","^2U","^7","uix/compiler/alpha.cljs","^;",30,"^61",["^10",[["~$k"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",67,"^68",["^E",[null,"^67","^5T"]],"^:",67,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$k"]]]]]],"~$as-lazy-component",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",389,"^9",7,"^:",389,"^;",24,"^5U",["^10",["^5V",["^10",[["~$f"]]]]]],"^F","^1K","^7","uix/compiler/alpha.cljs","^;",24,"^61",["^10",[["~$f"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",389,"^68",["^E",["^67","^66","^6B"]],"^:",389,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$f"]]]]]],"~$react-type?",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",335,"^9",7,"^:",335,"^;",18,"^5U",["^10",["^5V",["^10",[["~$t"]]]]]],"^F","^1E","^7","uix/compiler/alpha.cljs","^;",18,"^61",["^10",[["~$t"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",335,"^68","^6>","^:",335,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$t"]]]]]],"~$lazy-sym",["^ ","^F","^35","^7","uix/compiler/alpha.cljs","^8",326,"^9",1,"^:",326,"^;",14,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",326,"^9",6,"^:",326,"^;",14],"^5S","^67"],"~$expand-seq",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",438,"^9",7,"^:",438,"^;",17,"^5U",["^10",["^5V",["^10",[["~$s"]]]]]],"^F","^2Y","^7","uix/compiler/alpha.cljs","^;",17,"^61",["^10",[["~$s"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",438,"^68",["^E",[null,"^67"]],"^:",438,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$s"]]]]]],"~$cache-react-fn",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",318,"^9",7,"^:",318,"^;",21,"^5U",["^10",["^5V",["^10",[["~$f","^6T"]]]]]],"^F","^31","^7","uix/compiler/alpha.cljs","^;",21,"^61",["^10",[["~$f","^6T"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",318,"^:",318,"^60",2,"^69",true,"^5U",["^10",["^5V",["^10",[["~$f","^6T"]]]]]],"~$convert-prop-value-shallow",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",121,"^9",7,"^:",121,"^;",33,"^5U",["^10",["^5V",["^10",[["~$x"]]]]]],"^F","^3@","^7","uix/compiler/alpha.cljs","^;",33,"^61",["^10",[["~$x"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",121,"^68",["^E",[null,"^67"]],"^:",121,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$x"]]]]]],"~$cc-fn",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",48,"^9",8,"^:",48,"^;",13,"^7T",true,"^5U",["^10",["^5V",["^10",[["~$s"]]]]]],"^7T",true,"^F","^2Z","^7","uix/compiler/alpha.cljs","^;",13,"^61",["^10",[["~$s"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",48,"^68","^5T","^:",48,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$s"]]]]]],"~$cached-parse",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",232,"^9",7,"^:",232,"^;",19,"^5U",["^10",["^5V",["^10",[["~$x"]]]]]],"^F","^1R","^7","uix/compiler/alpha.cljs","^;",19,"^61",["^10",[["~$x"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",232,"^68",["^E",["^67","^7;"]],"^:",232,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$x"]]]]]],"~$try-get-key",["^ ","^5R",null,"^5",["^ ","^7","uix/compiler/alpha.cljs","^8",102,"^9",7,"^:",102,"^;",18,"^5U",["^10",["^5V",["^10",[["~$x"]]]]]],"^F","^39","^7","uix/compiler/alpha.cljs","^;",18,"^61",["^10",[["~$x"]]],"^63",null,"^62",["^10",[null,null]],"^9",1,"^5Z",false,"^8",102,"^:",102,"^60",1,"^69",true,"^5U",["^10",["^5V",["^10",[["~$x"]]]]]]],"^Z",["^ ","^O","^O","^M","^M","^S","^S","^T","^S"],"~:cljs.analyzer/constants",["^ ","^W",["^E",["~:->","~:key","~:else","~:>","~:ref","~:fallback","~:bound-value","~:style","~:<>","~:#","~:id","~:class","~:value-type"]],"~:order",["^8<","^88","^87","^8>","^8?","^89","^8:","^8;","^8@","^8=","~:#","^86","~:>"]],"^13",["^ ","^X",["^E",[]]],"^14",["^ "],"^15",["^R","^O","^B","^Q","^S","^V","^L","^M"]],"^I","^G","~:ns-specs",["^ "],"~:ns-spec-vars",["^E",[]],"~:compiler-options",["^3T",[["^8D","~:static-fns"],true,["^8D","~:shadow-tweaks"],null,["^8D","~:source-map-inline"],null,["^8D","~:elide-asserts"],false,["^8D","~:optimize-constants"],null,["^8D","^1:"],null,["^8D","~:external-config"],null,["^8D","~:tooling-config"],null,["^8D","~:emit-constants"],null,["^8D","~:load-tests"],null,["^8D","~:form-size-threshold"],null,["^8D","~:data-readers"],null,["^8D","~:infer-externs"],true,["^8D","^1<"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^8D","~:fn-invoke-direct"],null,["^8D","~:source-map"],"/dev/null"]]]